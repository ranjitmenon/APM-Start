{"ast":null,"code":"import { catchError, throwError } from \"rxjs\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ProductService {\n  constructor(http) {\n    this.http = http;\n    this.productUrl = 'api/products/products.json';\n  }\n\n  getProducts() {\n    return this.http.get(this.productUrl).pipe( //  tap(data => console.log('All', JSON.stringify(data))),\n    catchError(this.handleError));\n  }\n\n  handleError(err) {\n    let errorMessage = '';\n\n    if (err.error instanceof ErrorEvent) {\n      errorMessage = `An error occured: ${err.error.message}`;\n    } else {\n      errorMessage = `Server returned code: ${err.status}, error message is: ${err.message} `;\n    }\n\n    return throwError(() => errorMessage);\n  }\n\n  static #_ = this.ɵfac = function ProductService_Factory(t) {\n    return new (t || ProductService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ProductService,\n    factory: ProductService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"mappings":"AAGA,SAAqBA,UAArB,EAAsCC,UAAtC,QAAwD,MAAxD;;;AAKA,OAAM,MAAOC,cAAP,CAAqB;EAGzBC,YAAoBC,IAApB,EAAoC;IAAhB;IAFZ,kBAAa,4BAAb;EAIP;;EAEDC,WAAW;IACT,OAAO,KAAKD,IAAL,CAAUE,GAAV,CAA0B,KAAKC,UAA/B,EAA2CC,IAA3C,EACP;IACER,UAAU,CAAC,KAAKS,WAAN,CAFL,CAAP;EAID;;EAEOA,WAAW,CAACC,GAAD,EAAuB;IACxC,IAAIC,YAAY,GAAG,EAAnB;;IACA,IAAID,GAAG,CAACE,KAAJ,YAAqBC,UAAzB,EAAqC;MACnCF,YAAY,GAAG,qBAAqBD,GAAG,CAACE,KAAJ,CAAUE,OAAO,EAArD;IACD,CAFD,MAEO;MACLH,YAAY,GAAG,yBAAyBD,GAAG,CAACK,MAAM,uBAAuBL,GAAG,CAACI,OAAO,GAApF;IACD;;IACD,OAAOb,UAAU,CAAC,MAAMU,YAAP,CAAjB;EACD;;EAtBwB;qBAAdT,gBAAcc;EAAA;EAAA;WAAdd;IAAce,SAAdf,cAAc;IAAAgB,YAFb;IAEa;AAAA","names":["catchError","throwError","ProductService","constructor","http","getProducts","get","productUrl","pipe","handleError","err","errorMessage","error","ErrorEvent","message","status","i0","factory","providedIn"],"sourceRoot":"","sources":["/home/ranjitmenon/APM-Start/APM-Start/src/app/product/product.service.ts"],"sourcesContent":["import { Injectable } from \"@angular/core\";\r\nimport { IProduct } from \"./product\";\r\nimport { HttpClient, HttpErrorResponse } from \"@angular/common/http\";\r\nimport { Observable, catchError, tap, throwError } from \"rxjs\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProductService {\r\n  private productUrl = 'api/products/products.json';\r\n\r\n  constructor(private http: HttpClient) {\r\n\r\n  }\r\n\r\n  getProducts(): Observable<IProduct[]> {\r\n    return this.http.get<IProduct[]>(this.productUrl).pipe(\r\n    //  tap(data => console.log('All', JSON.stringify(data))),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n\r\n  private handleError(err: HttpErrorResponse) {\r\n    let errorMessage = '';\r\n    if (err.error instanceof ErrorEvent) {\r\n      errorMessage = `An error occured: ${err.error.message}`;\r\n    } else {\r\n      errorMessage = `Server returned code: ${err.status}, error message is: ${err.message} `;\r\n    }\r\n    return throwError(() => errorMessage);\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}