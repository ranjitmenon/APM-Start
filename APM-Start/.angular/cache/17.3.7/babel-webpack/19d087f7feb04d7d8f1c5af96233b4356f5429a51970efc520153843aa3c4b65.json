{"ast":null,"code":"/**\n * @license Angular v17.3.8\n * (c) 2010-2024 Google LLC. https://angular.io/\n * License: MIT\n */\nimport * as i0 from '@angular/core';\nimport { ɵglobal, ɵRuntimeError, Injectable, InjectionToken, Inject, APP_ID, CSP_NONCE, PLATFORM_ID, Optional, ViewEncapsulation, RendererStyleFlags2, ɵinternalCreateApplication, ErrorHandler, ɵsetDocument, PLATFORM_INITIALIZER, createPlatformFactory, platformCore, ɵTESTABILITY_GETTER, ɵTESTABILITY, Testability, NgZone, TestabilityRegistry, ɵINJECTOR_SCOPE, RendererFactory2, ApplicationModule, NgModule, SkipSelf, ApplicationRef, ɵConsole, forwardRef, ɵXSS_SECURITY_URL, SecurityContext, ɵallowSanitizationBypassAndThrow, ɵunwrapSafeValue, ɵ_sanitizeUrl, ɵ_sanitizeHtml, ɵbypassSanitizationTrustHtml, ɵbypassSanitizationTrustStyle, ɵbypassSanitizationTrustScript, ɵbypassSanitizationTrustUrl, ɵbypassSanitizationTrustResourceUrl, ENVIRONMENT_INITIALIZER, inject, ɵformatRuntimeError, makeEnvironmentProviders, ɵwithDomHydration, Version, makeStateKey as makeStateKey$1, TransferState as TransferState$1 } from '@angular/core';\nimport { ɵDomAdapter, ɵsetRootDomAdapter, ɵparseCookieValue, ɵgetDOM, isPlatformServer, DOCUMENT, ɵPLATFORM_BROWSER_ID, XhrFactory, CommonModule } from '@angular/common';\nexport { ɵgetDOM } from '@angular/common';\nimport { ɵwithHttpTransferCache } from '@angular/common/http';\n/**\n * Provides DOM operations in any browser environment.\n *\n * @security Tread carefully! Interacting with the DOM directly is dangerous and\n * can introduce XSS risks.\n */\n\nclass GenericBrowserDomAdapter extends ɵDomAdapter {\n  constructor() {\n    super(...arguments);\n    this.supportsDOMEvents = true;\n  }\n\n}\n/**\n * A `DomAdapter` powered by full browser DOM APIs.\n *\n * @security Tread carefully! Interacting with the DOM directly is dangerous and\n * can introduce XSS risks.\n */\n\n/* tslint:disable:requireParameterType no-console */\n\n\nclass BrowserDomAdapter extends GenericBrowserDomAdapter {\n  static makeCurrent() {\n    ɵsetRootDomAdapter(new BrowserDomAdapter());\n  }\n\n  onAndCancel(el, evt, listener) {\n    el.addEventListener(evt, listener);\n    return () => {\n      el.removeEventListener(evt, listener);\n    };\n  }\n\n  dispatchEvent(el, evt) {\n    el.dispatchEvent(evt);\n  }\n\n  remove(node) {\n    if (node.parentNode) {\n      node.parentNode.removeChild(node);\n    }\n  }\n\n  createElement(tagName, doc) {\n    doc = doc || this.getDefaultDocument();\n    return doc.createElement(tagName);\n  }\n\n  createHtmlDocument() {\n    return document.implementation.createHTMLDocument('fakeTitle');\n  }\n\n  getDefaultDocument() {\n    return document;\n  }\n\n  isElementNode(node) {\n    return node.nodeType === Node.ELEMENT_NODE;\n  }\n\n  isShadowRoot(node) {\n    return node instanceof DocumentFragment;\n  }\n  /** @deprecated No longer being used in Ivy code. To be removed in version 14. */\n\n\n  getGlobalEventTarget(doc, target) {\n    if (target === 'window') {\n      return window;\n    }\n\n    if (target === 'document') {\n      return doc;\n    }\n\n    if (target === 'body') {\n      return doc.body;\n    }\n\n    return null;\n  }\n\n  getBaseHref(doc) {\n    const href = getBaseElementHref();\n    return href == null ? null : relativePath(href);\n  }\n\n  resetBaseElement() {\n    baseElement = null;\n  }\n\n  getUserAgent() {\n    return window.navigator.userAgent;\n  }\n\n  getCookie(name) {\n    return ɵparseCookieValue(document.cookie, name);\n  }\n\n}\n\nlet baseElement = null;\n\nfunction getBaseElementHref() {\n  baseElement = baseElement || document.querySelector('base');\n  return baseElement ? baseElement.getAttribute('href') : null;\n}\n\nfunction relativePath(url) {\n  // The base URL doesn't really matter, we just need it so relative paths have something\n  // to resolve against. In the browser `HTMLBaseElement.href` is always absolute.\n  return new URL(url, document.baseURI).pathname;\n}\n\nclass BrowserGetTestability {\n  addToWindow(registry) {\n    ɵglobal['getAngularTestability'] = (elem, findInAncestors = true) => {\n      const testability = registry.findTestabilityInTree(elem, findInAncestors);\n\n      if (testability == null) {\n        throw new ɵRuntimeError(5103\n        /* RuntimeErrorCode.TESTABILITY_NOT_FOUND */\n        , (typeof ngDevMode === 'undefined' || ngDevMode) && 'Could not find testability for element.');\n      }\n\n      return testability;\n    };\n\n    ɵglobal['getAllAngularTestabilities'] = () => registry.getAllTestabilities();\n\n    ɵglobal['getAllAngularRootElements'] = () => registry.getAllRootElements();\n\n    const whenAllStable = callback => {\n      const testabilities = ɵglobal['getAllAngularTestabilities']();\n      let count = testabilities.length;\n\n      const decrement = function () {\n        count--;\n\n        if (count == 0) {\n          callback();\n        }\n      };\n\n      testabilities.forEach(testability => {\n        testability.whenStable(decrement);\n      });\n    };\n\n    if (!ɵglobal['frameworkStabilizers']) {\n      ɵglobal['frameworkStabilizers'] = [];\n    }\n\n    ɵglobal['frameworkStabilizers'].push(whenAllStable);\n  }\n\n  findTestabilityInTree(registry, elem, findInAncestors) {\n    if (elem == null) {\n      return null;\n    }\n\n    const t = registry.getTestability(elem);\n\n    if (t != null) {\n      return t;\n    } else if (!findInAncestors) {\n      return null;\n    }\n\n    if (ɵgetDOM().isShadowRoot(elem)) {\n      return this.findTestabilityInTree(registry, elem.host, true);\n    }\n\n    return this.findTestabilityInTree(registry, elem.parentElement, true);\n  }\n\n}\n/**\n * A factory for `HttpXhrBackend` that uses the `XMLHttpRequest` browser API.\n */\n\n\nclass BrowserXhr {\n  build() {\n    return new XMLHttpRequest();\n  }\n\n  static #_ = this.ɵfac = function BrowserXhr_Factory(t) {\n    return new (t || BrowserXhr)();\n  };\n  static #_2 = this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: BrowserXhr,\n    factory: BrowserXhr.ɵfac\n  });\n}\n\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BrowserXhr, [{\n    type: Injectable\n  }], null, null);\n})();\n/**\n * The injection token for plugins of the `EventManager` service.\n *\n * @publicApi\n */\n\n\nconst EVENT_MANAGER_PLUGINS = new InjectionToken(ngDevMode ? 'EventManagerPlugins' : '');\n/**\n * An injectable service that provides event management for Angular\n * through a browser plug-in.\n *\n * @publicApi\n */\n\nclass EventManager {\n  /**\n   * Initializes an instance of the event-manager service.\n   */\n  constructor(plugins, _zone) {\n    this._zone = _zone;\n    this._eventNameToPlugin = new Map();\n    plugins.forEach(plugin => {\n      plugin.manager = this;\n    });\n    this._plugins = plugins.slice().reverse();\n  }\n  /**\n   * Registers a handler for a specific element and event.\n   *\n   * @param element The HTML element to receive event notifications.\n   * @param eventName The name of the event to listen for.\n   * @param handler A function to call when the notification occurs. Receives the\n   * event object as an argument.\n   * @returns  A callback function that can be used to remove the handler.\n   */\n\n\n  addEventListener(element, eventName, handler) {\n    const plugin = this._findPluginFor(eventName);\n\n    return plugin.addEventListener(element, eventName, handler);\n  }\n  /**\n   * Retrieves the compilation zone in which event listeners are registered.\n   */\n\n\n  getZone() {\n    return this._zone;\n  }\n  /** @internal */\n\n\n  _findPluginFor(eventName) {\n    let plugin = this._eventNameToPlugin.get(eventName);\n\n    if (plugin) {\n      return plugin;\n    }\n\n    const plugins = this._plugins;\n    plugin = plugins.find(plugin => plugin.supports(eventName));\n\n    if (!plugin) {\n      throw new ɵRuntimeError(5101\n      /* RuntimeErrorCode.NO_PLUGIN_FOR_EVENT */\n      , (typeof ngDevMode === 'undefined' || ngDevMode) && `No event manager plugin found for event ${eventName}`);\n    }\n\n    this._eventNameToPlugin.set(eventName, plugin);\n\n    return plugin;\n  }\n\n  static #_ = this.ɵfac = function EventManager_Factory(t) {\n    return new (t || EventManager)(i0.ɵɵinject(EVENT_MANAGER_PLUGINS), i0.ɵɵinject(i0.NgZone));\n  };\n  static #_2 = this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: EventManager,\n    factory: EventManager.ɵfac\n  });\n}\n\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(EventManager, [{\n    type: Injectable\n  }], () => [{\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [EVENT_MANAGER_PLUGINS]\n    }]\n  }, {\n    type: i0.NgZone\n  }], null);\n})();\n/**\n * The plugin definition for the `EventManager` class\n *\n * It can be used as a base class to create custom manager plugins, i.e. you can create your own\n * class that extends the `EventManagerPlugin` one.\n *\n * @publicApi\n */\n\n\nclass EventManagerPlugin {\n  // TODO: remove (has some usage in G3)\n  constructor(_doc) {\n    this._doc = _doc;\n  }\n\n}\n/** The style elements attribute name used to set value of `APP_ID` token. */\n\n\nconst APP_ID_ATTRIBUTE_NAME = 'ng-app-id';\n\nclass SharedStylesHost {\n  constructor(doc, appId, nonce, platformId = {}) {\n    this.doc = doc;\n    this.appId = appId;\n    this.nonce = nonce;\n    this.platformId = platformId; // Maps all registered host nodes to a list of style nodes that have been added to the host node.\n\n    this.styleRef = new Map();\n    this.hostNodes = new Set();\n    this.styleNodesInDOM = this.collectServerRenderedStyles();\n    this.platformIsServer = isPlatformServer(platformId);\n    this.resetHostNodes();\n  }\n\n  addStyles(styles) {\n    for (const style of styles) {\n      const usageCount = this.changeUsageCount(style, 1);\n\n      if (usageCount === 1) {\n        this.onStyleAdded(style);\n      }\n    }\n  }\n\n  removeStyles(styles) {\n    for (const style of styles) {\n      const usageCount = this.changeUsageCount(style, -1);\n\n      if (usageCount <= 0) {\n        this.onStyleRemoved(style);\n      }\n    }\n  }\n\n  ngOnDestroy() {\n    const styleNodesInDOM = this.styleNodesInDOM;\n\n    if (styleNodesInDOM) {\n      styleNodesInDOM.forEach(node => node.remove());\n      styleNodesInDOM.clear();\n    }\n\n    for (const style of this.getAllStyles()) {\n      this.onStyleRemoved(style);\n    }\n\n    this.resetHostNodes();\n  }\n\n  addHost(hostNode) {\n    this.hostNodes.add(hostNode);\n\n    for (const style of this.getAllStyles()) {\n      this.addStyleToHost(hostNode, style);\n    }\n  }\n\n  removeHost(hostNode) {\n    this.hostNodes.delete(hostNode);\n  }\n\n  getAllStyles() {\n    return this.styleRef.keys();\n  }\n\n  onStyleAdded(style) {\n    for (const host of this.hostNodes) {\n      this.addStyleToHost(host, style);\n    }\n  }\n\n  onStyleRemoved(style) {\n    const styleRef = this.styleRef;\n    styleRef.get(style)?.elements?.forEach(node => node.remove());\n    styleRef.delete(style);\n  }\n\n  collectServerRenderedStyles() {\n    const styles = this.doc.head?.querySelectorAll(`style[${APP_ID_ATTRIBUTE_NAME}=\"${this.appId}\"]`);\n\n    if (styles?.length) {\n      const styleMap = new Map();\n      styles.forEach(style => {\n        if (style.textContent != null) {\n          styleMap.set(style.textContent, style);\n        }\n      });\n      return styleMap;\n    }\n\n    return null;\n  }\n\n  changeUsageCount(style, delta) {\n    const map = this.styleRef;\n\n    if (map.has(style)) {\n      const styleRefValue = map.get(style);\n      styleRefValue.usage += delta;\n      return styleRefValue.usage;\n    }\n\n    map.set(style, {\n      usage: delta,\n      elements: []\n    });\n    return delta;\n  }\n\n  getStyleElement(host, style) {\n    const styleNodesInDOM = this.styleNodesInDOM;\n    const styleEl = styleNodesInDOM?.get(style);\n\n    if (styleEl?.parentNode === host) {\n      // `styleNodesInDOM` cannot be undefined due to the above `styleNodesInDOM?.get`.\n      styleNodesInDOM.delete(style);\n      styleEl.removeAttribute(APP_ID_ATTRIBUTE_NAME);\n\n      if (typeof ngDevMode === 'undefined' || ngDevMode) {\n        // This attribute is solely used for debugging purposes.\n        styleEl.setAttribute('ng-style-reused', '');\n      }\n\n      return styleEl;\n    } else {\n      const styleEl = this.doc.createElement('style');\n\n      if (this.nonce) {\n        styleEl.setAttribute('nonce', this.nonce);\n      }\n\n      styleEl.textContent = style;\n\n      if (this.platformIsServer) {\n        styleEl.setAttribute(APP_ID_ATTRIBUTE_NAME, this.appId);\n      }\n\n      host.appendChild(styleEl);\n      return styleEl;\n    }\n  }\n\n  addStyleToHost(host, style) {\n    const styleEl = this.getStyleElement(host, style);\n    const styleRef = this.styleRef;\n    const styleElRef = styleRef.get(style)?.elements;\n\n    if (styleElRef) {\n      styleElRef.push(styleEl);\n    } else {\n      styleRef.set(style, {\n        elements: [styleEl],\n        usage: 1\n      });\n    }\n  }\n\n  resetHostNodes() {\n    const hostNodes = this.hostNodes;\n    hostNodes.clear(); // Re-add the head element back since this is the default host.\n\n    hostNodes.add(this.doc.head);\n  }\n\n  static #_ = this.ɵfac = function SharedStylesHost_Factory(t) {\n    return new (t || SharedStylesHost)(i0.ɵɵinject(DOCUMENT), i0.ɵɵinject(APP_ID), i0.ɵɵinject(CSP_NONCE, 8), i0.ɵɵinject(PLATFORM_ID));\n  };\n  static #_2 = this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: SharedStylesHost,\n    factory: SharedStylesHost.ɵfac\n  });\n}\n\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(SharedStylesHost, [{\n    type: Injectable\n  }], () => [{\n    type: Document,\n    decorators: [{\n      type: Inject,\n      args: [DOCUMENT]\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [APP_ID]\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [CSP_NONCE]\n    }, {\n      type: Optional\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [PLATFORM_ID]\n    }]\n  }], null);\n})();\n\nconst NAMESPACE_URIS = {\n  'svg': 'http://www.w3.org/2000/svg',\n  'xhtml': 'http://www.w3.org/1999/xhtml',\n  'xlink': 'http://www.w3.org/1999/xlink',\n  'xml': 'http://www.w3.org/XML/1998/namespace',\n  'xmlns': 'http://www.w3.org/2000/xmlns/',\n  'math': 'http://www.w3.org/1998/MathML/'\n};\nconst COMPONENT_REGEX = /%COMP%/g;\nconst COMPONENT_VARIABLE = '%COMP%';\nconst HOST_ATTR = `_nghost-${COMPONENT_VARIABLE}`;\nconst CONTENT_ATTR = `_ngcontent-${COMPONENT_VARIABLE}`;\n/**\n * The default value for the `REMOVE_STYLES_ON_COMPONENT_DESTROY` DI token.\n */\n\nconst REMOVE_STYLES_ON_COMPONENT_DESTROY_DEFAULT = true;\n/**\n * A [DI token](guide/glossary#di-token \"DI token definition\") that indicates whether styles\n * of destroyed components should be removed from DOM.\n *\n * By default, the value is set to `true`.\n * @publicApi\n */\n\nconst REMOVE_STYLES_ON_COMPONENT_DESTROY = new InjectionToken(ngDevMode ? 'RemoveStylesOnCompDestroy' : '', {\n  providedIn: 'root',\n  factory: () => REMOVE_STYLES_ON_COMPONENT_DESTROY_DEFAULT\n});\n\nfunction shimContentAttribute(componentShortId) {\n  return CONTENT_ATTR.replace(COMPONENT_REGEX, componentShortId);\n}\n\nfunction shimHostAttribute(componentShortId) {\n  return HOST_ATTR.replace(COMPONENT_REGEX, componentShortId);\n}\n\nfunction shimStylesContent(compId, styles) {\n  return styles.map(s => s.replace(COMPONENT_REGEX, compId));\n}\n\nclass DomRendererFactory2 {\n  constructor(eventManager, sharedStylesHost, appId, removeStylesOnCompDestroy, doc, platformId, ngZone, nonce = null) {\n    this.eventManager = eventManager;\n    this.sharedStylesHost = sharedStylesHost;\n    this.appId = appId;\n    this.removeStylesOnCompDestroy = removeStylesOnCompDestroy;\n    this.doc = doc;\n    this.platformId = platformId;\n    this.ngZone = ngZone;\n    this.nonce = nonce;\n    this.rendererByCompId = new Map();\n    this.platformIsServer = isPlatformServer(platformId);\n    this.defaultRenderer = new DefaultDomRenderer2(eventManager, doc, ngZone, this.platformIsServer);\n  }\n\n  createRenderer(element, type) {\n    if (!element || !type) {\n      return this.defaultRenderer;\n    }\n\n    if (this.platformIsServer && type.encapsulation === ViewEncapsulation.ShadowDom) {\n      // Domino does not support shadow DOM.\n      type = { ...type,\n        encapsulation: ViewEncapsulation.Emulated\n      };\n    }\n\n    const renderer = this.getOrCreateRenderer(element, type); // Renderers have different logic due to different encapsulation behaviours.\n    // Ex: for emulated, an attribute is added to the element.\n\n    if (renderer instanceof EmulatedEncapsulationDomRenderer2) {\n      renderer.applyToHost(element);\n    } else if (renderer instanceof NoneEncapsulationDomRenderer) {\n      renderer.applyStyles();\n    }\n\n    return renderer;\n  }\n\n  getOrCreateRenderer(element, type) {\n    const rendererByCompId = this.rendererByCompId;\n    let renderer = rendererByCompId.get(type.id);\n\n    if (!renderer) {\n      const doc = this.doc;\n      const ngZone = this.ngZone;\n      const eventManager = this.eventManager;\n      const sharedStylesHost = this.sharedStylesHost;\n      const removeStylesOnCompDestroy = this.removeStylesOnCompDestroy;\n      const platformIsServer = this.platformIsServer;\n\n      switch (type.encapsulation) {\n        case ViewEncapsulation.Emulated:\n          renderer = new EmulatedEncapsulationDomRenderer2(eventManager, sharedStylesHost, type, this.appId, removeStylesOnCompDestroy, doc, ngZone, platformIsServer);\n          break;\n\n        case ViewEncapsulation.ShadowDom:\n          return new ShadowDomRenderer(eventManager, sharedStylesHost, element, type, doc, ngZone, this.nonce, platformIsServer);\n\n        default:\n          renderer = new NoneEncapsulationDomRenderer(eventManager, sharedStylesHost, type, removeStylesOnCompDestroy, doc, ngZone, platformIsServer);\n          break;\n      }\n\n      rendererByCompId.set(type.id, renderer);\n    }\n\n    return renderer;\n  }\n\n  ngOnDestroy() {\n    this.rendererByCompId.clear();\n  }\n\n  static #_ = this.ɵfac = function DomRendererFactory2_Factory(t) {\n    return new (t || DomRendererFactory2)(i0.ɵɵinject(EventManager), i0.ɵɵinject(SharedStylesHost), i0.ɵɵinject(APP_ID), i0.ɵɵinject(REMOVE_STYLES_ON_COMPONENT_DESTROY), i0.ɵɵinject(DOCUMENT), i0.ɵɵinject(PLATFORM_ID), i0.ɵɵinject(i0.NgZone), i0.ɵɵinject(CSP_NONCE));\n  };\n  static #_2 = this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: DomRendererFactory2,\n    factory: DomRendererFactory2.ɵfac\n  });\n}\n\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DomRendererFactory2, [{\n    type: Injectable\n  }], () => [{\n    type: EventManager\n  }, {\n    type: SharedStylesHost\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [APP_ID]\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [REMOVE_STYLES_ON_COMPONENT_DESTROY]\n    }]\n  }, {\n    type: Document,\n    decorators: [{\n      type: Inject,\n      args: [DOCUMENT]\n    }]\n  }, {\n    type: Object,\n    decorators: [{\n      type: Inject,\n      args: [PLATFORM_ID]\n    }]\n  }, {\n    type: i0.NgZone\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [CSP_NONCE]\n    }]\n  }], null);\n})();\n\nclass DefaultDomRenderer2 {\n  constructor(eventManager, doc, ngZone, platformIsServer) {\n    this.eventManager = eventManager;\n    this.doc = doc;\n    this.ngZone = ngZone;\n    this.platformIsServer = platformIsServer;\n    this.data = Object.create(null);\n    /**\n     * By default this renderer throws when encountering synthetic properties\n     * This can be disabled for example by the AsyncAnimationRendererFactory\n     */\n\n    this.throwOnSyntheticProps = true;\n    this.destroyNode = null;\n  }\n\n  destroy() {}\n\n  createElement(name, namespace) {\n    if (namespace) {\n      // TODO: `|| namespace` was added in\n      // https://github.com/angular/angular/commit/2b9cc8503d48173492c29f5a271b61126104fbdb to\n      // support how Ivy passed around the namespace URI rather than short name at the time. It did\n      // not, however extend the support to other parts of the system (setAttribute, setAttribute,\n      // and the ServerRenderer). We should decide what exactly the semantics for dealing with\n      // namespaces should be and make it consistent.\n      // Related issues:\n      // https://github.com/angular/angular/issues/44028\n      // https://github.com/angular/angular/issues/44883\n      return this.doc.createElementNS(NAMESPACE_URIS[namespace] || namespace, name);\n    }\n\n    return this.doc.createElement(name);\n  }\n\n  createComment(value) {\n    return this.doc.createComment(value);\n  }\n\n  createText(value) {\n    return this.doc.createTextNode(value);\n  }\n\n  appendChild(parent, newChild) {\n    const targetParent = isTemplateNode(parent) ? parent.content : parent;\n    targetParent.appendChild(newChild);\n  }\n\n  insertBefore(parent, newChild, refChild) {\n    if (parent) {\n      const targetParent = isTemplateNode(parent) ? parent.content : parent;\n      targetParent.insertBefore(newChild, refChild);\n    }\n  }\n\n  removeChild(parent, oldChild) {\n    if (parent) {\n      parent.removeChild(oldChild);\n    }\n  }\n\n  selectRootElement(selectorOrNode, preserveContent) {\n    let el = typeof selectorOrNode === 'string' ? this.doc.querySelector(selectorOrNode) : selectorOrNode;\n\n    if (!el) {\n      throw new ɵRuntimeError(-5104\n      /* RuntimeErrorCode.ROOT_NODE_NOT_FOUND */\n      , (typeof ngDevMode === 'undefined' || ngDevMode) && `The selector \"${selectorOrNode}\" did not match any elements`);\n    }\n\n    if (!preserveContent) {\n      el.textContent = '';\n    }\n\n    return el;\n  }\n\n  parentNode(node) {\n    return node.parentNode;\n  }\n\n  nextSibling(node) {\n    return node.nextSibling;\n  }\n\n  setAttribute(el, name, value, namespace) {\n    if (namespace) {\n      name = namespace + ':' + name;\n      const namespaceUri = NAMESPACE_URIS[namespace];\n\n      if (namespaceUri) {\n        el.setAttributeNS(namespaceUri, name, value);\n      } else {\n        el.setAttribute(name, value);\n      }\n    } else {\n      el.setAttribute(name, value);\n    }\n  }\n\n  removeAttribute(el, name, namespace) {\n    if (namespace) {\n      const namespaceUri = NAMESPACE_URIS[namespace];\n\n      if (namespaceUri) {\n        el.removeAttributeNS(namespaceUri, name);\n      } else {\n        el.removeAttribute(`${namespace}:${name}`);\n      }\n    } else {\n      el.removeAttribute(name);\n    }\n  }\n\n  addClass(el, name) {\n    el.classList.add(name);\n  }\n\n  removeClass(el, name) {\n    el.classList.remove(name);\n  }\n\n  setStyle(el, style, value, flags) {\n    if (flags & (RendererStyleFlags2.DashCase | RendererStyleFlags2.Important)) {\n      el.style.setProperty(style, value, flags & RendererStyleFlags2.Important ? 'important' : '');\n    } else {\n      el.style[style] = value;\n    }\n  }\n\n  removeStyle(el, style, flags) {\n    if (flags & RendererStyleFlags2.DashCase) {\n      // removeProperty has no effect when used on camelCased properties.\n      el.style.removeProperty(style);\n    } else {\n      el.style[style] = '';\n    }\n  }\n\n  setProperty(el, name, value) {\n    if (el == null) {\n      return;\n    }\n\n    (typeof ngDevMode === 'undefined' || ngDevMode) && this.throwOnSyntheticProps && checkNoSyntheticProp(name, 'property');\n    el[name] = value;\n  }\n\n  setValue(node, value) {\n    node.nodeValue = value;\n  }\n\n  listen(target, event, callback) {\n    (typeof ngDevMode === 'undefined' || ngDevMode) && this.throwOnSyntheticProps && checkNoSyntheticProp(event, 'listener');\n\n    if (typeof target === 'string') {\n      target = ɵgetDOM().getGlobalEventTarget(this.doc, target);\n\n      if (!target) {\n        throw new Error(`Unsupported event target ${target} for event ${event}`);\n      }\n    }\n\n    return this.eventManager.addEventListener(target, event, this.decoratePreventDefault(callback));\n  }\n\n  decoratePreventDefault(eventHandler) {\n    // `DebugNode.triggerEventHandler` needs to know if the listener was created with\n    // decoratePreventDefault or is a listener added outside the Angular context so it can handle\n    // the two differently. In the first case, the special '__ngUnwrap__' token is passed to the\n    // unwrap the listener (see below).\n    return event => {\n      // Ivy uses '__ngUnwrap__' as a special token that allows us to unwrap the function\n      // so that it can be invoked programmatically by `DebugNode.triggerEventHandler`. The\n      // debug_node can inspect the listener toString contents for the existence of this special\n      // token. Because the token is a string literal, it is ensured to not be modified by compiled\n      // code.\n      if (event === '__ngUnwrap__') {\n        return eventHandler;\n      } // Run the event handler inside the ngZone because event handlers are not patched\n      // by Zone on the server. This is required only for tests.\n\n\n      const allowDefaultBehavior = this.platformIsServer ? this.ngZone.runGuarded(() => eventHandler(event)) : eventHandler(event);\n\n      if (allowDefaultBehavior === false) {\n        event.preventDefault();\n      }\n\n      return undefined;\n    };\n  }\n\n}\n\nconst AT_CHARCODE = (() => '@'.charCodeAt(0))();\n\nfunction checkNoSyntheticProp(name, nameKind) {\n  if (name.charCodeAt(0) === AT_CHARCODE) {\n    throw new ɵRuntimeError(5105\n    /* RuntimeErrorCode.UNEXPECTED_SYNTHETIC_PROPERTY */\n    , `Unexpected synthetic ${nameKind} ${name} found. Please make sure that:\n  - Either \\`BrowserAnimationsModule\\` or \\`NoopAnimationsModule\\` are imported in your application.\n  - There is corresponding configuration for the animation named \\`${name}\\` defined in the \\`animations\\` field of the \\`@Component\\` decorator (see https://angular.io/api/core/Component#animations).`);\n  }\n}\n\nfunction isTemplateNode(node) {\n  return node.tagName === 'TEMPLATE' && node.content !== undefined;\n}\n\nclass ShadowDomRenderer extends DefaultDomRenderer2 {\n  constructor(eventManager, sharedStylesHost, hostEl, component, doc, ngZone, nonce, platformIsServer) {\n    super(eventManager, doc, ngZone, platformIsServer);\n    this.sharedStylesHost = sharedStylesHost;\n    this.hostEl = hostEl;\n    this.shadowRoot = hostEl.attachShadow({\n      mode: 'open'\n    });\n    this.sharedStylesHost.addHost(this.shadowRoot);\n    const styles = shimStylesContent(component.id, component.styles);\n\n    for (const style of styles) {\n      const styleEl = document.createElement('style');\n\n      if (nonce) {\n        styleEl.setAttribute('nonce', nonce);\n      }\n\n      styleEl.textContent = style;\n      this.shadowRoot.appendChild(styleEl);\n    }\n  }\n\n  nodeOrShadowRoot(node) {\n    return node === this.hostEl ? this.shadowRoot : node;\n  }\n\n  appendChild(parent, newChild) {\n    return super.appendChild(this.nodeOrShadowRoot(parent), newChild);\n  }\n\n  insertBefore(parent, newChild, refChild) {\n    return super.insertBefore(this.nodeOrShadowRoot(parent), newChild, refChild);\n  }\n\n  removeChild(parent, oldChild) {\n    return super.removeChild(this.nodeOrShadowRoot(parent), oldChild);\n  }\n\n  parentNode(node) {\n    return this.nodeOrShadowRoot(super.parentNode(this.nodeOrShadowRoot(node)));\n  }\n\n  destroy() {\n    this.sharedStylesHost.removeHost(this.shadowRoot);\n  }\n\n}\n\nclass NoneEncapsulationDomRenderer extends DefaultDomRenderer2 {\n  constructor(eventManager, sharedStylesHost, component, removeStylesOnCompDestroy, doc, ngZone, platformIsServer, compId) {\n    super(eventManager, doc, ngZone, platformIsServer);\n    this.sharedStylesHost = sharedStylesHost;\n    this.removeStylesOnCompDestroy = removeStylesOnCompDestroy;\n    this.styles = compId ? shimStylesContent(compId, component.styles) : component.styles;\n  }\n\n  applyStyles() {\n    this.sharedStylesHost.addStyles(this.styles);\n  }\n\n  destroy() {\n    if (!this.removeStylesOnCompDestroy) {\n      return;\n    }\n\n    this.sharedStylesHost.removeStyles(this.styles);\n  }\n\n}\n\nclass EmulatedEncapsulationDomRenderer2 extends NoneEncapsulationDomRenderer {\n  constructor(eventManager, sharedStylesHost, component, appId, removeStylesOnCompDestroy, doc, ngZone, platformIsServer) {\n    const compId = appId + '-' + component.id;\n    super(eventManager, sharedStylesHost, component, removeStylesOnCompDestroy, doc, ngZone, platformIsServer, compId);\n    this.contentAttr = shimContentAttribute(compId);\n    this.hostAttr = shimHostAttribute(compId);\n  }\n\n  applyToHost(element) {\n    this.applyStyles();\n    this.setAttribute(element, this.hostAttr, '');\n  }\n\n  createElement(parent, name) {\n    const el = super.createElement(parent, name);\n    super.setAttribute(el, this.contentAttr, '');\n    return el;\n  }\n\n}\n\nclass DomEventsPlugin extends EventManagerPlugin {\n  constructor(doc) {\n    super(doc);\n  } // This plugin should come last in the list of plugins, because it accepts all\n  // events.\n\n\n  supports(eventName) {\n    return true;\n  }\n\n  addEventListener(element, eventName, handler) {\n    element.addEventListener(eventName, handler, false);\n    return () => this.removeEventListener(element, eventName, handler);\n  }\n\n  removeEventListener(target, eventName, callback) {\n    return target.removeEventListener(eventName, callback);\n  }\n\n  static #_ = this.ɵfac = function DomEventsPlugin_Factory(t) {\n    return new (t || DomEventsPlugin)(i0.ɵɵinject(DOCUMENT));\n  };\n  static #_2 = this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: DomEventsPlugin,\n    factory: DomEventsPlugin.ɵfac\n  });\n}\n\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DomEventsPlugin, [{\n    type: Injectable\n  }], () => [{\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [DOCUMENT]\n    }]\n  }], null);\n})();\n/**\n * Defines supported modifiers for key events.\n */\n\n\nconst MODIFIER_KEYS = ['alt', 'control', 'meta', 'shift']; // The following values are here for cross-browser compatibility and to match the W3C standard\n// cf https://www.w3.org/TR/DOM-Level-3-Events-key/\n\nconst _keyMap = {\n  '\\b': 'Backspace',\n  '\\t': 'Tab',\n  '\\x7F': 'Delete',\n  '\\x1B': 'Escape',\n  'Del': 'Delete',\n  'Esc': 'Escape',\n  'Left': 'ArrowLeft',\n  'Right': 'ArrowRight',\n  'Up': 'ArrowUp',\n  'Down': 'ArrowDown',\n  'Menu': 'ContextMenu',\n  'Scroll': 'ScrollLock',\n  'Win': 'OS'\n};\n/**\n * Retrieves modifiers from key-event objects.\n */\n\nconst MODIFIER_KEY_GETTERS = {\n  'alt': event => event.altKey,\n  'control': event => event.ctrlKey,\n  'meta': event => event.metaKey,\n  'shift': event => event.shiftKey\n};\n/**\n * A browser plug-in that provides support for handling of key events in Angular.\n */\n\nclass KeyEventsPlugin extends EventManagerPlugin {\n  /**\n   * Initializes an instance of the browser plug-in.\n   * @param doc The document in which key events will be detected.\n   */\n  constructor(doc) {\n    super(doc);\n  }\n  /**\n   * Reports whether a named key event is supported.\n   * @param eventName The event name to query.\n   * @return True if the named key event is supported.\n   */\n\n\n  supports(eventName) {\n    return KeyEventsPlugin.parseEventName(eventName) != null;\n  }\n  /**\n   * Registers a handler for a specific element and key event.\n   * @param element The HTML element to receive event notifications.\n   * @param eventName The name of the key event to listen for.\n   * @param handler A function to call when the notification occurs. Receives the\n   * event object as an argument.\n   * @returns The key event that was registered.\n   */\n\n\n  addEventListener(element, eventName, handler) {\n    const parsedEvent = KeyEventsPlugin.parseEventName(eventName);\n    const outsideHandler = KeyEventsPlugin.eventCallback(parsedEvent['fullKey'], handler, this.manager.getZone());\n    return this.manager.getZone().runOutsideAngular(() => {\n      return ɵgetDOM().onAndCancel(element, parsedEvent['domEventName'], outsideHandler);\n    });\n  }\n  /**\n   * Parses the user provided full keyboard event definition and normalizes it for\n   * later internal use. It ensures the string is all lowercase, converts special\n   * characters to a standard spelling, and orders all the values consistently.\n   *\n   * @param eventName The name of the key event to listen for.\n   * @returns an object with the full, normalized string, and the dom event name\n   * or null in the case when the event doesn't match a keyboard event.\n   */\n\n\n  static parseEventName(eventName) {\n    const parts = eventName.toLowerCase().split('.');\n    const domEventName = parts.shift();\n\n    if (parts.length === 0 || !(domEventName === 'keydown' || domEventName === 'keyup')) {\n      return null;\n    }\n\n    const key = KeyEventsPlugin._normalizeKey(parts.pop());\n\n    let fullKey = '';\n    let codeIX = parts.indexOf('code');\n\n    if (codeIX > -1) {\n      parts.splice(codeIX, 1);\n      fullKey = 'code.';\n    }\n\n    MODIFIER_KEYS.forEach(modifierName => {\n      const index = parts.indexOf(modifierName);\n\n      if (index > -1) {\n        parts.splice(index, 1);\n        fullKey += modifierName + '.';\n      }\n    });\n    fullKey += key;\n\n    if (parts.length != 0 || key.length === 0) {\n      // returning null instead of throwing to let another plugin process the event\n      return null;\n    } // NOTE: Please don't rewrite this as so, as it will break JSCompiler property renaming.\n    //       The code must remain in the `result['domEventName']` form.\n    // return {domEventName, fullKey};\n\n\n    const result = {};\n    result['domEventName'] = domEventName;\n    result['fullKey'] = fullKey;\n    return result;\n  }\n  /**\n   * Determines whether the actual keys pressed match the configured key code string.\n   * The `fullKeyCode` event is normalized in the `parseEventName` method when the\n   * event is attached to the DOM during the `addEventListener` call. This is unseen\n   * by the end user and is normalized for internal consistency and parsing.\n   *\n   * @param event The keyboard event.\n   * @param fullKeyCode The normalized user defined expected key event string\n   * @returns boolean.\n   */\n\n\n  static matchEventFullKeyCode(event, fullKeyCode) {\n    let keycode = _keyMap[event.key] || event.key;\n    let key = '';\n\n    if (fullKeyCode.indexOf('code.') > -1) {\n      keycode = event.code;\n      key = 'code.';\n    } // the keycode could be unidentified so we have to check here\n\n\n    if (keycode == null || !keycode) return false;\n    keycode = keycode.toLowerCase();\n\n    if (keycode === ' ') {\n      keycode = 'space'; // for readability\n    } else if (keycode === '.') {\n      keycode = 'dot'; // because '.' is used as a separator in event names\n    }\n\n    MODIFIER_KEYS.forEach(modifierName => {\n      if (modifierName !== keycode) {\n        const modifierGetter = MODIFIER_KEY_GETTERS[modifierName];\n\n        if (modifierGetter(event)) {\n          key += modifierName + '.';\n        }\n      }\n    });\n    key += keycode;\n    return key === fullKeyCode;\n  }\n  /**\n   * Configures a handler callback for a key event.\n   * @param fullKey The event name that combines all simultaneous keystrokes.\n   * @param handler The function that responds to the key event.\n   * @param zone The zone in which the event occurred.\n   * @returns A callback function.\n   */\n\n\n  static eventCallback(fullKey, handler, zone) {\n    return event => {\n      if (KeyEventsPlugin.matchEventFullKeyCode(event, fullKey)) {\n        zone.runGuarded(() => handler(event));\n      }\n    };\n  }\n  /** @internal */\n\n\n  static _normalizeKey(keyName) {\n    return keyName === 'esc' ? 'escape' : keyName;\n  }\n\n  static #_ = this.ɵfac = function KeyEventsPlugin_Factory(t) {\n    return new (t || KeyEventsPlugin)(i0.ɵɵinject(DOCUMENT));\n  };\n  static #_2 = this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: KeyEventsPlugin,\n    factory: KeyEventsPlugin.ɵfac\n  });\n}\n\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(KeyEventsPlugin, [{\n    type: Injectable\n  }], () => [{\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [DOCUMENT]\n    }]\n  }], null);\n})();\n/**\n * Bootstraps an instance of an Angular application and renders a standalone component as the\n * application's root component. More information about standalone components can be found in [this\n * guide](guide/standalone-components).\n *\n * @usageNotes\n * The root component passed into this function *must* be a standalone one (should have the\n * `standalone: true` flag in the `@Component` decorator config).\n *\n * ```typescript\n * @Component({\n *   standalone: true,\n *   template: 'Hello world!'\n * })\n * class RootComponent {}\n *\n * const appRef: ApplicationRef = await bootstrapApplication(RootComponent);\n * ```\n *\n * You can add the list of providers that should be available in the application injector by\n * specifying the `providers` field in an object passed as the second argument:\n *\n * ```typescript\n * await bootstrapApplication(RootComponent, {\n *   providers: [\n *     {provide: BACKEND_URL, useValue: 'https://yourdomain.com/api'}\n *   ]\n * });\n * ```\n *\n * The `importProvidersFrom` helper method can be used to collect all providers from any\n * existing NgModule (and transitively from all NgModules that it imports):\n *\n * ```typescript\n * await bootstrapApplication(RootComponent, {\n *   providers: [\n *     importProvidersFrom(SomeNgModule)\n *   ]\n * });\n * ```\n *\n * Note: the `bootstrapApplication` method doesn't include [Testability](api/core/Testability) by\n * default. You can add [Testability](api/core/Testability) by getting the list of necessary\n * providers using `provideProtractorTestingSupport()` function and adding them into the `providers`\n * array, for example:\n *\n * ```typescript\n * import {provideProtractorTestingSupport} from '@angular/platform-browser';\n *\n * await bootstrapApplication(RootComponent, {providers: [provideProtractorTestingSupport()]});\n * ```\n *\n * @param rootComponent A reference to a standalone component that should be rendered.\n * @param options Extra configuration for the bootstrap operation, see `ApplicationConfig` for\n *     additional info.\n * @returns A promise that returns an `ApplicationRef` instance once resolved.\n *\n * @publicApi\n */\n\n\nfunction bootstrapApplication(rootComponent, options) {\n  return ɵinternalCreateApplication({\n    rootComponent,\n    ...createProvidersConfig(options)\n  });\n}\n/**\n * Create an instance of an Angular application without bootstrapping any components. This is useful\n * for the situation where one wants to decouple application environment creation (a platform and\n * associated injectors) from rendering components on a screen. Components can be subsequently\n * bootstrapped on the returned `ApplicationRef`.\n *\n * @param options Extra configuration for the application environment, see `ApplicationConfig` for\n *     additional info.\n * @returns A promise that returns an `ApplicationRef` instance once resolved.\n *\n * @publicApi\n */\n\n\nfunction createApplication(options) {\n  return ɵinternalCreateApplication(createProvidersConfig(options));\n}\n\nfunction createProvidersConfig(options) {\n  return {\n    appProviders: [...BROWSER_MODULE_PROVIDERS, ...(options?.providers ?? [])],\n    platformProviders: INTERNAL_BROWSER_PLATFORM_PROVIDERS\n  };\n}\n/**\n * Returns a set of providers required to setup [Testability](api/core/Testability) for an\n * application bootstrapped using the `bootstrapApplication` function. The set of providers is\n * needed to support testing an application with Protractor (which relies on the Testability APIs\n * to be present).\n *\n * @returns An array of providers required to setup Testability for an application and make it\n *     available for testing using Protractor.\n *\n * @publicApi\n */\n\n\nfunction provideProtractorTestingSupport() {\n  // Return a copy to prevent changes to the original array in case any in-place\n  // alterations are performed to the `provideProtractorTestingSupport` call results in app\n  // code.\n  return [...TESTABILITY_PROVIDERS];\n}\n\nfunction initDomAdapter() {\n  BrowserDomAdapter.makeCurrent();\n}\n\nfunction errorHandler() {\n  return new ErrorHandler();\n}\n\nfunction _document() {\n  // Tell ivy about the global document\n  ɵsetDocument(document);\n  return document;\n}\n\nconst INTERNAL_BROWSER_PLATFORM_PROVIDERS = [{\n  provide: PLATFORM_ID,\n  useValue: ɵPLATFORM_BROWSER_ID\n}, {\n  provide: PLATFORM_INITIALIZER,\n  useValue: initDomAdapter,\n  multi: true\n}, {\n  provide: DOCUMENT,\n  useFactory: _document,\n  deps: []\n}];\n/**\n * A factory function that returns a `PlatformRef` instance associated with browser service\n * providers.\n *\n * @publicApi\n */\n\nconst platformBrowser = createPlatformFactory(platformCore, 'browser', INTERNAL_BROWSER_PLATFORM_PROVIDERS);\n/**\n * Internal marker to signal whether providers from the `BrowserModule` are already present in DI.\n * This is needed to avoid loading `BrowserModule` providers twice. We can't rely on the\n * `BrowserModule` presence itself, since the standalone-based bootstrap just imports\n * `BrowserModule` providers without referencing the module itself.\n */\n\nconst BROWSER_MODULE_PROVIDERS_MARKER = new InjectionToken(typeof ngDevMode === 'undefined' || ngDevMode ? 'BrowserModule Providers Marker' : '');\nconst TESTABILITY_PROVIDERS = [{\n  provide: ɵTESTABILITY_GETTER,\n  useClass: BrowserGetTestability,\n  deps: []\n}, {\n  provide: ɵTESTABILITY,\n  useClass: Testability,\n  deps: [NgZone, TestabilityRegistry, ɵTESTABILITY_GETTER]\n}, {\n  provide: Testability,\n  // Also provide as `Testability` for backwards-compatibility.\n  useClass: Testability,\n  deps: [NgZone, TestabilityRegistry, ɵTESTABILITY_GETTER]\n}];\nconst BROWSER_MODULE_PROVIDERS = [{\n  provide: ɵINJECTOR_SCOPE,\n  useValue: 'root'\n}, {\n  provide: ErrorHandler,\n  useFactory: errorHandler,\n  deps: []\n}, {\n  provide: EVENT_MANAGER_PLUGINS,\n  useClass: DomEventsPlugin,\n  multi: true,\n  deps: [DOCUMENT, NgZone, PLATFORM_ID]\n}, {\n  provide: EVENT_MANAGER_PLUGINS,\n  useClass: KeyEventsPlugin,\n  multi: true,\n  deps: [DOCUMENT]\n}, DomRendererFactory2, SharedStylesHost, EventManager, {\n  provide: RendererFactory2,\n  useExisting: DomRendererFactory2\n}, {\n  provide: XhrFactory,\n  useClass: BrowserXhr,\n  deps: []\n}, typeof ngDevMode === 'undefined' || ngDevMode ? {\n  provide: BROWSER_MODULE_PROVIDERS_MARKER,\n  useValue: true\n} : []];\n/**\n * Exports required infrastructure for all Angular apps.\n * Included by default in all Angular apps created with the CLI\n * `new` command.\n * Re-exports `CommonModule` and `ApplicationModule`, making their\n * exports and providers available to all apps.\n *\n * @publicApi\n */\n\nclass BrowserModule {\n  constructor(providersAlreadyPresent) {\n    if ((typeof ngDevMode === 'undefined' || ngDevMode) && providersAlreadyPresent) {\n      throw new ɵRuntimeError(5100\n      /* RuntimeErrorCode.BROWSER_MODULE_ALREADY_LOADED */\n      , `Providers from the \\`BrowserModule\\` have already been loaded. If you need access ` + `to common directives such as NgIf and NgFor, import the \\`CommonModule\\` instead.`);\n    }\n  }\n  /**\n   * Configures a browser-based app to transition from a server-rendered app, if\n   * one is present on the page.\n   *\n   * @param params An object containing an identifier for the app to transition.\n   * The ID must match between the client and server versions of the app.\n   * @returns The reconfigured `BrowserModule` to import into the app's root `AppModule`.\n   *\n   * @deprecated Use {@link APP_ID} instead to set the application ID.\n   */\n\n\n  static withServerTransition(params) {\n    return {\n      ngModule: BrowserModule,\n      providers: [{\n        provide: APP_ID,\n        useValue: params.appId\n      }]\n    };\n  }\n\n  static #_ = this.ɵfac = function BrowserModule_Factory(t) {\n    return new (t || BrowserModule)(i0.ɵɵinject(BROWSER_MODULE_PROVIDERS_MARKER, 12));\n  };\n  static #_2 = this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: BrowserModule\n  });\n  static #_3 = this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    providers: [...BROWSER_MODULE_PROVIDERS, ...TESTABILITY_PROVIDERS],\n    imports: [CommonModule, ApplicationModule]\n  });\n}\n\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BrowserModule, [{\n    type: NgModule,\n    args: [{\n      providers: [...BROWSER_MODULE_PROVIDERS, ...TESTABILITY_PROVIDERS],\n      exports: [CommonModule, ApplicationModule]\n    }]\n  }], () => [{\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: SkipSelf\n    }, {\n      type: Inject,\n      args: [BROWSER_MODULE_PROVIDERS_MARKER]\n    }]\n  }], null);\n})();\n/**\n * A service for managing HTML `<meta>` tags.\n *\n * Properties of the `MetaDefinition` object match the attributes of the\n * HTML `<meta>` tag. These tags define document metadata that is important for\n * things like configuring a Content Security Policy, defining browser compatibility\n * and security settings, setting HTTP Headers, defining rich content for social sharing,\n * and Search Engine Optimization (SEO).\n *\n * To identify specific `<meta>` tags in a document, use an attribute selection\n * string in the format `\"tag_attribute='value string'\"`.\n * For example, an `attrSelector` value of `\"name='description'\"` matches a tag\n * whose `name` attribute has the value `\"description\"`.\n * Selectors are used with the `querySelector()` Document method,\n * in the format `meta[{attrSelector}]`.\n *\n * @see [HTML meta tag](https://developer.mozilla.org/docs/Web/HTML/Element/meta)\n * @see [Document.querySelector()](https://developer.mozilla.org/docs/Web/API/Document/querySelector)\n *\n *\n * @publicApi\n */\n\n\nclass Meta {\n  constructor(_doc) {\n    this._doc = _doc;\n    this._dom = ɵgetDOM();\n  }\n  /**\n   * Retrieves or creates a specific `<meta>` tag element in the current HTML document.\n   * In searching for an existing tag, Angular attempts to match the `name` or `property` attribute\n   * values in the provided tag definition, and verifies that all other attribute values are equal.\n   * If an existing element is found, it is returned and is not modified in any way.\n   * @param tag The definition of a `<meta>` element to match or create.\n   * @param forceCreation True to create a new element without checking whether one already exists.\n   * @returns The existing element with the same attributes and values if found,\n   * the new element if no match is found, or `null` if the tag parameter is not defined.\n   */\n\n\n  addTag(tag, forceCreation = false) {\n    if (!tag) return null;\n    return this._getOrCreateElement(tag, forceCreation);\n  }\n  /**\n   * Retrieves or creates a set of `<meta>` tag elements in the current HTML document.\n   * In searching for an existing tag, Angular attempts to match the `name` or `property` attribute\n   * values in the provided tag definition, and verifies that all other attribute values are equal.\n   * @param tags An array of tag definitions to match or create.\n   * @param forceCreation True to create new elements without checking whether they already exist.\n   * @returns The matching elements if found, or the new elements.\n   */\n\n\n  addTags(tags, forceCreation = false) {\n    if (!tags) return [];\n    return tags.reduce((result, tag) => {\n      if (tag) {\n        result.push(this._getOrCreateElement(tag, forceCreation));\n      }\n\n      return result;\n    }, []);\n  }\n  /**\n   * Retrieves a `<meta>` tag element in the current HTML document.\n   * @param attrSelector The tag attribute and value to match against, in the format\n   * `\"tag_attribute='value string'\"`.\n   * @returns The matching element, if any.\n   */\n\n\n  getTag(attrSelector) {\n    if (!attrSelector) return null;\n    return this._doc.querySelector(`meta[${attrSelector}]`) || null;\n  }\n  /**\n   * Retrieves a set of `<meta>` tag elements in the current HTML document.\n   * @param attrSelector The tag attribute and value to match against, in the format\n   * `\"tag_attribute='value string'\"`.\n   * @returns The matching elements, if any.\n   */\n\n\n  getTags(attrSelector) {\n    if (!attrSelector) return [];\n\n    const list\n    /*NodeList*/\n    = this._doc.querySelectorAll(`meta[${attrSelector}]`);\n\n    return list ? [].slice.call(list) : [];\n  }\n  /**\n   * Modifies an existing `<meta>` tag element in the current HTML document.\n   * @param tag The tag description with which to replace the existing tag content.\n   * @param selector A tag attribute and value to match against, to identify\n   * an existing tag. A string in the format `\"tag_attribute=`value string`\"`.\n   * If not supplied, matches a tag with the same `name` or `property` attribute value as the\n   * replacement tag.\n   * @return The modified element.\n   */\n\n\n  updateTag(tag, selector) {\n    if (!tag) return null;\n    selector = selector || this._parseSelector(tag);\n    const meta = this.getTag(selector);\n\n    if (meta) {\n      return this._setMetaElementAttributes(tag, meta);\n    }\n\n    return this._getOrCreateElement(tag, true);\n  }\n  /**\n   * Removes an existing `<meta>` tag element from the current HTML document.\n   * @param attrSelector A tag attribute and value to match against, to identify\n   * an existing tag. A string in the format `\"tag_attribute=`value string`\"`.\n   */\n\n\n  removeTag(attrSelector) {\n    this.removeTagElement(this.getTag(attrSelector));\n  }\n  /**\n   * Removes an existing `<meta>` tag element from the current HTML document.\n   * @param meta The tag definition to match against to identify an existing tag.\n   */\n\n\n  removeTagElement(meta) {\n    if (meta) {\n      this._dom.remove(meta);\n    }\n  }\n\n  _getOrCreateElement(meta, forceCreation = false) {\n    if (!forceCreation) {\n      const selector = this._parseSelector(meta); // It's allowed to have multiple elements with the same name so it's not enough to\n      // just check that element with the same name already present on the page. We also need to\n      // check if element has tag attributes\n\n\n      const elem = this.getTags(selector).filter(elem => this._containsAttributes(meta, elem))[0];\n      if (elem !== undefined) return elem;\n    }\n\n    const element = this._dom.createElement('meta');\n\n    this._setMetaElementAttributes(meta, element);\n\n    const head = this._doc.getElementsByTagName('head')[0];\n\n    head.appendChild(element);\n    return element;\n  }\n\n  _setMetaElementAttributes(tag, el) {\n    Object.keys(tag).forEach(prop => el.setAttribute(this._getMetaKeyMap(prop), tag[prop]));\n    return el;\n  }\n\n  _parseSelector(tag) {\n    const attr = tag.name ? 'name' : 'property';\n    return `${attr}=\"${tag[attr]}\"`;\n  }\n\n  _containsAttributes(tag, elem) {\n    return Object.keys(tag).every(key => elem.getAttribute(this._getMetaKeyMap(key)) === tag[key]);\n  }\n\n  _getMetaKeyMap(prop) {\n    return META_KEYS_MAP[prop] || prop;\n  }\n\n  static #_ = this.ɵfac = function Meta_Factory(t) {\n    return new (t || Meta)(i0.ɵɵinject(DOCUMENT));\n  };\n  static #_2 = this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: Meta,\n    factory: Meta.ɵfac,\n    providedIn: 'root'\n  });\n}\n\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(Meta, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], () => [{\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [DOCUMENT]\n    }]\n  }], null);\n})();\n/**\n * Mapping for MetaDefinition properties with their correct meta attribute names\n */\n\n\nconst META_KEYS_MAP = {\n  httpEquiv: 'http-equiv'\n};\n/**\n * A service that can be used to get and set the title of a current HTML document.\n *\n * Since an Angular application can't be bootstrapped on the entire HTML document (`<html>` tag)\n * it is not possible to bind to the `text` property of the `HTMLTitleElement` elements\n * (representing the `<title>` tag). Instead, this service can be used to set and get the current\n * title value.\n *\n * @publicApi\n */\n\nclass Title {\n  constructor(_doc) {\n    this._doc = _doc;\n  }\n  /**\n   * Get the title of the current HTML document.\n   */\n\n\n  getTitle() {\n    return this._doc.title;\n  }\n  /**\n   * Set the title of the current HTML document.\n   * @param newTitle\n   */\n\n\n  setTitle(newTitle) {\n    this._doc.title = newTitle || '';\n  }\n\n  static #_ = this.ɵfac = function Title_Factory(t) {\n    return new (t || Title)(i0.ɵɵinject(DOCUMENT));\n  };\n  static #_2 = this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: Title,\n    factory: Title.ɵfac,\n    providedIn: 'root'\n  });\n}\n\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(Title, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], () => [{\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [DOCUMENT]\n    }]\n  }], null);\n})();\n/**\n * Exports the value under a given `name` in the global property `ng`. For example `ng.probe` if\n * `name` is `'probe'`.\n * @param name Name under which it will be exported. Keep in mind this will be a property of the\n * global `ng` object.\n * @param value The value to export.\n */\n\n\nfunction exportNgVar(name, value) {\n  if (typeof COMPILED === 'undefined' || !COMPILED) {\n    // Note: we can't export `ng` when using closure enhanced optimization as:\n    // - closure declares globals itself for minified names, which sometimes clobber our `ng` global\n    // - we can't declare a closure extern as the namespace `ng` is already used within Google\n    //   for typings for angularJS (via `goog.provide('ng....')`).\n    const ng = ɵglobal['ng'] = ɵglobal['ng'] || {};\n    ng[name] = value;\n  }\n}\n\nclass ChangeDetectionPerfRecord {\n  constructor(msPerTick, numTicks) {\n    this.msPerTick = msPerTick;\n    this.numTicks = numTicks;\n  }\n\n}\n/**\n * Entry point for all Angular profiling-related debug tools. This object\n * corresponds to the `ng.profiler` in the dev console.\n */\n\n\nclass AngularProfiler {\n  constructor(ref) {\n    this.appRef = ref.injector.get(ApplicationRef);\n  } // tslint:disable:no-console\n\n  /**\n   * Exercises change detection in a loop and then prints the average amount of\n   * time in milliseconds how long a single round of change detection takes for\n   * the current state of the UI. It runs a minimum of 5 rounds for a minimum\n   * of 500 milliseconds.\n   *\n   * Optionally, a user may pass a `config` parameter containing a map of\n   * options. Supported options are:\n   *\n   * `record` (boolean) - causes the profiler to record a CPU profile while\n   * it exercises the change detector. Example:\n   *\n   * ```\n   * ng.profiler.timeChangeDetection({record: true})\n   * ```\n   */\n\n\n  timeChangeDetection(config) {\n    const record = config && config['record'];\n    const profileName = 'Change Detection'; // Profiler is not available in Android browsers without dev tools opened\n\n    if (record && 'profile' in console && typeof console.profile === 'function') {\n      console.profile(profileName);\n    }\n\n    const start = performance.now();\n    let numTicks = 0;\n\n    while (numTicks < 5 || performance.now() - start < 500) {\n      this.appRef.tick();\n      numTicks++;\n    }\n\n    const end = performance.now();\n\n    if (record && 'profileEnd' in console && typeof console.profileEnd === 'function') {\n      console.profileEnd(profileName);\n    }\n\n    const msPerTick = (end - start) / numTicks;\n    console.log(`ran ${numTicks} change detection cycles`);\n    console.log(`${msPerTick.toFixed(2)} ms per check`);\n    return new ChangeDetectionPerfRecord(msPerTick, numTicks);\n  }\n\n}\n\nconst PROFILER_GLOBAL_NAME = 'profiler';\n/**\n * Enabled Angular debug tools that are accessible via your browser's\n * developer console.\n *\n * Usage:\n *\n * 1. Open developer console (e.g. in Chrome Ctrl + Shift + j)\n * 1. Type `ng.` (usually the console will show auto-complete suggestion)\n * 1. Try the change detection profiler `ng.profiler.timeChangeDetection()`\n *    then hit Enter.\n *\n * @publicApi\n */\n\nfunction enableDebugTools(ref) {\n  exportNgVar(PROFILER_GLOBAL_NAME, new AngularProfiler(ref));\n  return ref;\n}\n/**\n * Disables Angular tools.\n *\n * @publicApi\n */\n\n\nfunction disableDebugTools() {\n  exportNgVar(PROFILER_GLOBAL_NAME, null);\n}\n/**\n * Predicates for use with {@link DebugElement}'s query functions.\n *\n * @publicApi\n */\n\n\nclass By {\n  /**\n   * Match all nodes.\n   *\n   * @usageNotes\n   * ### Example\n   *\n   * {@example platform-browser/dom/debug/ts/by/by.ts region='by_all'}\n   */\n  static all() {\n    return () => true;\n  }\n  /**\n   * Match elements by the given CSS selector.\n   *\n   * @usageNotes\n   * ### Example\n   *\n   * {@example platform-browser/dom/debug/ts/by/by.ts region='by_css'}\n   */\n\n\n  static css(selector) {\n    return debugElement => {\n      return debugElement.nativeElement != null ? elementMatches(debugElement.nativeElement, selector) : false;\n    };\n  }\n  /**\n   * Match nodes that have the given directive present.\n   *\n   * @usageNotes\n   * ### Example\n   *\n   * {@example platform-browser/dom/debug/ts/by/by.ts region='by_directive'}\n   */\n\n\n  static directive(type) {\n    return debugNode => debugNode.providerTokens.indexOf(type) !== -1;\n  }\n\n}\n\nfunction elementMatches(n, selector) {\n  if (ɵgetDOM().isElementNode(n)) {\n    return n.matches && n.matches(selector) || n.msMatchesSelector && n.msMatchesSelector(selector) || n.webkitMatchesSelector && n.webkitMatchesSelector(selector);\n  }\n\n  return false;\n}\n/**\n * Supported HammerJS recognizer event names.\n */\n\n\nconst EVENT_NAMES = {\n  // pan\n  'pan': true,\n  'panstart': true,\n  'panmove': true,\n  'panend': true,\n  'pancancel': true,\n  'panleft': true,\n  'panright': true,\n  'panup': true,\n  'pandown': true,\n  // pinch\n  'pinch': true,\n  'pinchstart': true,\n  'pinchmove': true,\n  'pinchend': true,\n  'pinchcancel': true,\n  'pinchin': true,\n  'pinchout': true,\n  // press\n  'press': true,\n  'pressup': true,\n  // rotate\n  'rotate': true,\n  'rotatestart': true,\n  'rotatemove': true,\n  'rotateend': true,\n  'rotatecancel': true,\n  // swipe\n  'swipe': true,\n  'swipeleft': true,\n  'swiperight': true,\n  'swipeup': true,\n  'swipedown': true,\n  // tap\n  'tap': true,\n  'doubletap': true\n};\n/**\n * DI token for providing [HammerJS](https://hammerjs.github.io/) support to Angular.\n * @see {@link HammerGestureConfig}\n *\n * @ngModule HammerModule\n * @publicApi\n */\n\nconst HAMMER_GESTURE_CONFIG = new InjectionToken('HammerGestureConfig');\n/**\n * Injection token used to provide a {@link HammerLoader} to Angular.\n *\n * @publicApi\n */\n\nconst HAMMER_LOADER = new InjectionToken('HammerLoader');\n/**\n * An injectable [HammerJS Manager](https://hammerjs.github.io/api/#hammermanager)\n * for gesture recognition. Configures specific event recognition.\n * @publicApi\n */\n\nclass HammerGestureConfig {\n  constructor() {\n    /**\n     * A set of supported event names for gestures to be used in Angular.\n     * Angular supports all built-in recognizers, as listed in\n     * [HammerJS documentation](https://hammerjs.github.io/).\n     */\n    this.events = [];\n    /**\n     * Maps gesture event names to a set of configuration options\n     * that specify overrides to the default values for specific properties.\n     *\n     * The key is a supported event name to be configured,\n     * and the options object contains a set of properties, with override values\n     * to be applied to the named recognizer event.\n     * For example, to disable recognition of the rotate event, specify\n     *  `{\"rotate\": {\"enable\": false}}`.\n     *\n     * Properties that are not present take the HammerJS default values.\n     * For information about which properties are supported for which events,\n     * and their allowed and default values, see\n     * [HammerJS documentation](https://hammerjs.github.io/).\n     *\n     */\n\n    this.overrides = {};\n  }\n  /**\n   * Creates a [HammerJS Manager](https://hammerjs.github.io/api/#hammermanager)\n   * and attaches it to a given HTML element.\n   * @param element The element that will recognize gestures.\n   * @returns A HammerJS event-manager object.\n   */\n\n\n  buildHammer(element) {\n    const mc = new Hammer(element, this.options);\n    mc.get('pinch').set({\n      enable: true\n    });\n    mc.get('rotate').set({\n      enable: true\n    });\n\n    for (const eventName in this.overrides) {\n      mc.get(eventName).set(this.overrides[eventName]);\n    }\n\n    return mc;\n  }\n\n  static #_ = this.ɵfac = function HammerGestureConfig_Factory(t) {\n    return new (t || HammerGestureConfig)();\n  };\n  static #_2 = this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: HammerGestureConfig,\n    factory: HammerGestureConfig.ɵfac\n  });\n}\n\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(HammerGestureConfig, [{\n    type: Injectable\n  }], null, null);\n})();\n/**\n * Event plugin that adds Hammer support to an application.\n *\n * @ngModule HammerModule\n */\n\n\nclass HammerGesturesPlugin extends EventManagerPlugin {\n  constructor(doc, _config, console, loader) {\n    super(doc);\n    this._config = _config;\n    this.console = console;\n    this.loader = loader;\n    this._loaderPromise = null;\n  }\n\n  supports(eventName) {\n    if (!EVENT_NAMES.hasOwnProperty(eventName.toLowerCase()) && !this.isCustomEvent(eventName)) {\n      return false;\n    }\n\n    if (!window.Hammer && !this.loader) {\n      if (typeof ngDevMode === 'undefined' || ngDevMode) {\n        this.console.warn(`The \"${eventName}\" event cannot be bound because Hammer.JS is not ` + `loaded and no custom loader has been specified.`);\n      }\n\n      return false;\n    }\n\n    return true;\n  }\n\n  addEventListener(element, eventName, handler) {\n    const zone = this.manager.getZone();\n    eventName = eventName.toLowerCase(); // If Hammer is not present but a loader is specified, we defer adding the event listener\n    // until Hammer is loaded.\n\n    if (!window.Hammer && this.loader) {\n      this._loaderPromise = this._loaderPromise || zone.runOutsideAngular(() => this.loader()); // This `addEventListener` method returns a function to remove the added listener.\n      // Until Hammer is loaded, the returned function needs to *cancel* the registration rather\n      // than remove anything.\n\n      let cancelRegistration = false;\n\n      let deregister = () => {\n        cancelRegistration = true;\n      };\n\n      zone.runOutsideAngular(() => this._loaderPromise.then(() => {\n        // If Hammer isn't actually loaded when the custom loader resolves, give up.\n        if (!window.Hammer) {\n          if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            this.console.warn(`The custom HAMMER_LOADER completed, but Hammer.JS is not present.`);\n          }\n\n          deregister = () => {};\n\n          return;\n        }\n\n        if (!cancelRegistration) {\n          // Now that Hammer is loaded and the listener is being loaded for real,\n          // the deregistration function changes from canceling registration to\n          // removal.\n          deregister = this.addEventListener(element, eventName, handler);\n        }\n      }).catch(() => {\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n          this.console.warn(`The \"${eventName}\" event cannot be bound because the custom ` + `Hammer.JS loader failed.`);\n        }\n\n        deregister = () => {};\n      })); // Return a function that *executes* `deregister` (and not `deregister` itself) so that we\n      // can change the behavior of `deregister` once the listener is added. Using a closure in\n      // this way allows us to avoid any additional data structures to track listener removal.\n\n      return () => {\n        deregister();\n      };\n    }\n\n    return zone.runOutsideAngular(() => {\n      // Creating the manager bind events, must be done outside of angular\n      const mc = this._config.buildHammer(element);\n\n      const callback = function (eventObj) {\n        zone.runGuarded(function () {\n          handler(eventObj);\n        });\n      };\n\n      mc.on(eventName, callback);\n      return () => {\n        mc.off(eventName, callback); // destroy mc to prevent memory leak\n\n        if (typeof mc.destroy === 'function') {\n          mc.destroy();\n        }\n      };\n    });\n  }\n\n  isCustomEvent(eventName) {\n    return this._config.events.indexOf(eventName) > -1;\n  }\n\n  static #_ = this.ɵfac = function HammerGesturesPlugin_Factory(t) {\n    return new (t || HammerGesturesPlugin)(i0.ɵɵinject(DOCUMENT), i0.ɵɵinject(HAMMER_GESTURE_CONFIG), i0.ɵɵinject(i0.ɵConsole), i0.ɵɵinject(HAMMER_LOADER, 8));\n  };\n  static #_2 = this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: HammerGesturesPlugin,\n    factory: HammerGesturesPlugin.ɵfac\n  });\n}\n\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(HammerGesturesPlugin, [{\n    type: Injectable\n  }], () => [{\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [DOCUMENT]\n    }]\n  }, {\n    type: HammerGestureConfig,\n    decorators: [{\n      type: Inject,\n      args: [HAMMER_GESTURE_CONFIG]\n    }]\n  }, {\n    type: i0.ɵConsole\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [HAMMER_LOADER]\n    }]\n  }], null);\n})();\n/**\n * Adds support for HammerJS.\n *\n * Import this module at the root of your application so that Angular can work with\n * HammerJS to detect gesture events.\n *\n * Note that applications still need to include the HammerJS script itself. This module\n * simply sets up the coordination layer between HammerJS and Angular's `EventManager`.\n *\n * @publicApi\n */\n\n\nclass HammerModule {\n  static #_ = this.ɵfac = function HammerModule_Factory(t) {\n    return new (t || HammerModule)();\n  };\n  static #_2 = this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: HammerModule\n  });\n  static #_3 = this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    providers: [{\n      provide: EVENT_MANAGER_PLUGINS,\n      useClass: HammerGesturesPlugin,\n      multi: true,\n      deps: [DOCUMENT, HAMMER_GESTURE_CONFIG, ɵConsole, [new Optional(), HAMMER_LOADER]]\n    }, {\n      provide: HAMMER_GESTURE_CONFIG,\n      useClass: HammerGestureConfig,\n      deps: []\n    }]\n  });\n}\n\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(HammerModule, [{\n    type: NgModule,\n    args: [{\n      providers: [{\n        provide: EVENT_MANAGER_PLUGINS,\n        useClass: HammerGesturesPlugin,\n        multi: true,\n        deps: [DOCUMENT, HAMMER_GESTURE_CONFIG, ɵConsole, [new Optional(), HAMMER_LOADER]]\n      }, {\n        provide: HAMMER_GESTURE_CONFIG,\n        useClass: HammerGestureConfig,\n        deps: []\n      }]\n    }]\n  }], null, null);\n})();\n/**\n * DomSanitizer helps preventing Cross Site Scripting Security bugs (XSS) by sanitizing\n * values to be safe to use in the different DOM contexts.\n *\n * For example, when binding a URL in an `<a [href]=\"someValue\">` hyperlink, `someValue` will be\n * sanitized so that an attacker cannot inject e.g. a `javascript:` URL that would execute code on\n * the website.\n *\n * In specific situations, it might be necessary to disable sanitization, for example if the\n * application genuinely needs to produce a `javascript:` style link with a dynamic value in it.\n * Users can bypass security by constructing a value with one of the `bypassSecurityTrust...`\n * methods, and then binding to that value from the template.\n *\n * These situations should be very rare, and extraordinary care must be taken to avoid creating a\n * Cross Site Scripting (XSS) security bug!\n *\n * When using `bypassSecurityTrust...`, make sure to call the method as early as possible and as\n * close as possible to the source of the value, to make it easy to verify no security bug is\n * created by its use.\n *\n * It is not required (and not recommended) to bypass security if the value is safe, e.g. a URL that\n * does not start with a suspicious protocol, or an HTML snippet that does not contain dangerous\n * code. The sanitizer leaves safe values intact.\n *\n * @security Calling any of the `bypassSecurityTrust...` APIs disables Angular's built-in\n * sanitization for the value passed in. Carefully check and audit all values and code paths going\n * into this call. Make sure any user data is appropriately escaped for this security context.\n * For more detail, see the [Security Guide](https://g.co/ng/security).\n *\n * @publicApi\n */\n\n\nclass DomSanitizer {\n  static #_ = this.ɵfac = function DomSanitizer_Factory(t) {\n    return new (t || DomSanitizer)();\n  };\n  static #_2 = this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: DomSanitizer,\n    factory: function DomSanitizer_Factory(t) {\n      let r = null;\n\n      if (t) {\n        r = new (t || DomSanitizer)();\n      } else {\n        r = i0.ɵɵinject(DomSanitizerImpl);\n      }\n\n      return r;\n    },\n    providedIn: 'root'\n  });\n}\n\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DomSanitizer, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root',\n      useExisting: forwardRef(() => DomSanitizerImpl)\n    }]\n  }], null, null);\n})();\n\nclass DomSanitizerImpl extends DomSanitizer {\n  constructor(_doc) {\n    super();\n    this._doc = _doc;\n  }\n\n  sanitize(ctx, value) {\n    if (value == null) return null;\n\n    switch (ctx) {\n      case SecurityContext.NONE:\n        return value;\n\n      case SecurityContext.HTML:\n        if (ɵallowSanitizationBypassAndThrow(value, \"HTML\"\n        /* BypassType.Html */\n        )) {\n          return ɵunwrapSafeValue(value);\n        }\n\n        return ɵ_sanitizeHtml(this._doc, String(value)).toString();\n\n      case SecurityContext.STYLE:\n        if (ɵallowSanitizationBypassAndThrow(value, \"Style\"\n        /* BypassType.Style */\n        )) {\n          return ɵunwrapSafeValue(value);\n        }\n\n        return value;\n\n      case SecurityContext.SCRIPT:\n        if (ɵallowSanitizationBypassAndThrow(value, \"Script\"\n        /* BypassType.Script */\n        )) {\n          return ɵunwrapSafeValue(value);\n        }\n\n        throw new ɵRuntimeError(5200\n        /* RuntimeErrorCode.SANITIZATION_UNSAFE_SCRIPT */\n        , (typeof ngDevMode === 'undefined' || ngDevMode) && 'unsafe value used in a script context');\n\n      case SecurityContext.URL:\n        if (ɵallowSanitizationBypassAndThrow(value, \"URL\"\n        /* BypassType.Url */\n        )) {\n          return ɵunwrapSafeValue(value);\n        }\n\n        return ɵ_sanitizeUrl(String(value));\n\n      case SecurityContext.RESOURCE_URL:\n        if (ɵallowSanitizationBypassAndThrow(value, \"ResourceURL\"\n        /* BypassType.ResourceUrl */\n        )) {\n          return ɵunwrapSafeValue(value);\n        }\n\n        throw new ɵRuntimeError(5201\n        /* RuntimeErrorCode.SANITIZATION_UNSAFE_RESOURCE_URL */\n        , (typeof ngDevMode === 'undefined' || ngDevMode) && `unsafe value used in a resource URL context (see ${ɵXSS_SECURITY_URL})`);\n\n      default:\n        throw new ɵRuntimeError(5202\n        /* RuntimeErrorCode.SANITIZATION_UNEXPECTED_CTX */\n        , (typeof ngDevMode === 'undefined' || ngDevMode) && `Unexpected SecurityContext ${ctx} (see ${ɵXSS_SECURITY_URL})`);\n    }\n  }\n\n  bypassSecurityTrustHtml(value) {\n    return ɵbypassSanitizationTrustHtml(value);\n  }\n\n  bypassSecurityTrustStyle(value) {\n    return ɵbypassSanitizationTrustStyle(value);\n  }\n\n  bypassSecurityTrustScript(value) {\n    return ɵbypassSanitizationTrustScript(value);\n  }\n\n  bypassSecurityTrustUrl(value) {\n    return ɵbypassSanitizationTrustUrl(value);\n  }\n\n  bypassSecurityTrustResourceUrl(value) {\n    return ɵbypassSanitizationTrustResourceUrl(value);\n  }\n\n  static #_ = this.ɵfac = function DomSanitizerImpl_Factory(t) {\n    return new (t || DomSanitizerImpl)(i0.ɵɵinject(DOCUMENT));\n  };\n  static #_2 = this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: DomSanitizerImpl,\n    factory: DomSanitizerImpl.ɵfac,\n    providedIn: 'root'\n  });\n}\n\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DomSanitizerImpl, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], () => [{\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [DOCUMENT]\n    }]\n  }], null);\n})();\n/**\n * The list of features as an enum to uniquely type each `HydrationFeature`.\n * @see {@link HydrationFeature}\n *\n * @publicApi\n */\n\n\nvar HydrationFeatureKind;\n\n(function (HydrationFeatureKind) {\n  HydrationFeatureKind[HydrationFeatureKind[\"NoHttpTransferCache\"] = 0] = \"NoHttpTransferCache\";\n  HydrationFeatureKind[HydrationFeatureKind[\"HttpTransferCacheOptions\"] = 1] = \"HttpTransferCacheOptions\";\n})(HydrationFeatureKind || (HydrationFeatureKind = {}));\n/**\n * Helper function to create an object that represents a Hydration feature.\n */\n\n\nfunction hydrationFeature(ɵkind, ɵproviders = [], ɵoptions = {}) {\n  return {\n    ɵkind,\n    ɵproviders\n  };\n}\n/**\n * Disables HTTP transfer cache. Effectively causes HTTP requests to be performed twice: once on the\n * server and other one on the browser.\n *\n * @publicApi\n */\n\n\nfunction withNoHttpTransferCache() {\n  // This feature has no providers and acts as a flag that turns off\n  // HTTP transfer cache (which otherwise is turned on by default).\n  return hydrationFeature(HydrationFeatureKind.NoHttpTransferCache);\n}\n/**\n * The function accepts a an object, which allows to configure cache parameters,\n * such as which headers should be included (no headers are included by default),\n * wether POST requests should be cached or a callback function to determine if a\n * particular request should be cached.\n *\n * @publicApi\n */\n\n\nfunction withHttpTransferCacheOptions(options) {\n  // This feature has no providers and acts as a flag to pass options to the HTTP transfer cache.\n  return hydrationFeature(HydrationFeatureKind.HttpTransferCacheOptions, ɵwithHttpTransferCache(options));\n}\n/**\n * Returns an `ENVIRONMENT_INITIALIZER` token setup with a function\n * that verifies whether compatible ZoneJS was used in an application\n * and logs a warning in a console if it's not the case.\n */\n\n\nfunction provideZoneJsCompatibilityDetector() {\n  return [{\n    provide: ENVIRONMENT_INITIALIZER,\n    useValue: () => {\n      const ngZone = inject(NgZone); // Checking `ngZone instanceof NgZone` would be insufficient here,\n      // because custom implementations might use NgZone as a base class.\n\n      if (ngZone.constructor !== NgZone) {\n        const console = inject(ɵConsole);\n        const message = ɵformatRuntimeError(-5000\n        /* RuntimeErrorCode.UNSUPPORTED_ZONEJS_INSTANCE */\n        , 'Angular detected that hydration was enabled for an application ' + 'that uses a custom or a noop Zone.js implementation. ' + 'This is not yet a fully supported configuration.'); // tslint:disable-next-line:no-console\n\n        console.warn(message);\n      }\n    },\n    multi: true\n  }];\n}\n/**\n * Sets up providers necessary to enable hydration functionality for the application.\n *\n * By default, the function enables the recommended set of features for the optimal\n * performance for most of the applications. It includes the following features:\n *\n * * Reconciling DOM hydration. Learn more about it [here](guide/hydration).\n * * [`HttpClient`](api/common/http/HttpClient) response caching while running on the server and\n * transferring this cache to the client to avoid extra HTTP requests. Learn more about data caching\n * [here](/guide/ssr#caching-data-when-using-httpclient).\n *\n * These functions allow you to disable some of the default features or configure features\n * * {@link withNoHttpTransferCache} to disable HTTP transfer cache\n * * {@link withHttpTransferCacheOptions} to configure some HTTP transfer cache options\n *\n * @usageNotes\n *\n * Basic example of how you can enable hydration in your application when\n * `bootstrapApplication` function is used:\n * ```\n * bootstrapApplication(AppComponent, {\n *   providers: [provideClientHydration()]\n * });\n * ```\n *\n * Alternatively if you are using NgModules, you would add `provideClientHydration`\n * to your root app module's provider list.\n * ```\n * @NgModule({\n *   declarations: [RootCmp],\n *   bootstrap: [RootCmp],\n *   providers: [provideClientHydration()],\n * })\n * export class AppModule {}\n * ```\n *\n * @see {@link withNoHttpTransferCache}\n * @see {@link withHttpTransferCacheOptions}\n *\n * @param features Optional features to configure additional router behaviors.\n * @returns A set of providers to enable hydration.\n *\n * @publicApi\n */\n\n\nfunction provideClientHydration(...features) {\n  const providers = [];\n  const featuresKind = new Set();\n  const hasHttpTransferCacheOptions = featuresKind.has(HydrationFeatureKind.HttpTransferCacheOptions);\n\n  for (const {\n    ɵproviders,\n    ɵkind\n  } of features) {\n    featuresKind.add(ɵkind);\n\n    if (ɵproviders.length) {\n      providers.push(ɵproviders);\n    }\n  }\n\n  if (typeof ngDevMode !== 'undefined' && ngDevMode && featuresKind.has(HydrationFeatureKind.NoHttpTransferCache) && hasHttpTransferCacheOptions) {\n    // TODO: Make this a runtime error\n    throw new Error('Configuration error: found both withHttpTransferCacheOptions() and withNoHttpTransferCache() in the same call to provideClientHydration(), which is a contradiction.');\n  }\n\n  return makeEnvironmentProviders([typeof ngDevMode !== 'undefined' && ngDevMode ? provideZoneJsCompatibilityDetector() : [], ɵwithDomHydration(), featuresKind.has(HydrationFeatureKind.NoHttpTransferCache) || hasHttpTransferCacheOptions ? [] : ɵwithHttpTransferCache({}), providers]);\n}\n/**\n * @module\n * @description\n * Entry point for all public APIs of the platform-browser package.\n */\n\n/**\n * @publicApi\n */\n\n\nconst VERSION = new Version('17.3.8'); // Re-export TransferState to the public API of the `platform-browser` for backwards-compatibility.\n\n/**\n * Create a `StateKey<T>` that can be used to store value of type T with `TransferState`.\n *\n * Example:\n *\n * ```\n * const COUNTER_KEY = makeStateKey<number>('counter');\n * let value = 10;\n *\n * transferState.set(COUNTER_KEY, value);\n * ```\n *\n * @publicApi\n * @deprecated `makeStateKey` has moved, please import `makeStateKey` from `@angular/core` instead.\n */\n// The below is a workaround to add a deprecated message.\n\nconst makeStateKey = makeStateKey$1; // The below type is needed for G3 due to JSC_CONFORMANCE_VIOLATION.\n\nconst TransferState = TransferState$1;\n/**\n * @module\n * @description\n * Entry point for all public APIs of this package.\n */\n// This file only reexports content of the `src` folder. Keep it that way.\n// This file is not used to build this module. It is only used during editing\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { BrowserModule, By, DomSanitizer, EVENT_MANAGER_PLUGINS, EventManager, EventManagerPlugin, HAMMER_GESTURE_CONFIG, HAMMER_LOADER, HammerGestureConfig, HammerModule, HydrationFeatureKind, Meta, REMOVE_STYLES_ON_COMPONENT_DESTROY, Title, TransferState, VERSION, bootstrapApplication, createApplication, disableDebugTools, enableDebugTools, makeStateKey, platformBrowser, provideClientHydration, provideProtractorTestingSupport, withHttpTransferCacheOptions, withNoHttpTransferCache, BrowserDomAdapter as ɵBrowserDomAdapter, BrowserGetTestability as ɵBrowserGetTestability, DomEventsPlugin as ɵDomEventsPlugin, DomRendererFactory2 as ɵDomRendererFactory2, DomSanitizerImpl as ɵDomSanitizerImpl, HammerGesturesPlugin as ɵHammerGesturesPlugin, INTERNAL_BROWSER_PLATFORM_PROVIDERS as ɵINTERNAL_BROWSER_PLATFORM_PROVIDERS, KeyEventsPlugin as ɵKeyEventsPlugin, SharedStylesHost as ɵSharedStylesHost, initDomAdapter as ɵinitDomAdapter };","map":{"version":3,"names":["i0","ɵglobal","ɵRuntimeError","Injectable","InjectionToken","Inject","APP_ID","CSP_NONCE","PLATFORM_ID","Optional","ViewEncapsulation","RendererStyleFlags2","ɵinternalCreateApplication","ErrorHandler","ɵsetDocument","PLATFORM_INITIALIZER","createPlatformFactory","platformCore","ɵTESTABILITY_GETTER","ɵTESTABILITY","Testability","NgZone","TestabilityRegistry","ɵINJECTOR_SCOPE","RendererFactory2","ApplicationModule","NgModule","SkipSelf","ApplicationRef","ɵConsole","forwardRef","ɵXSS_SECURITY_URL","SecurityContext","ɵallowSanitizationBypassAndThrow","ɵunwrapSafeValue","ɵ_sanitizeUrl","ɵ_sanitizeHtml","ɵbypassSanitizationTrustHtml","ɵbypassSanitizationTrustStyle","ɵbypassSanitizationTrustScript","ɵbypassSanitizationTrustUrl","ɵbypassSanitizationTrustResourceUrl","ENVIRONMENT_INITIALIZER","inject","ɵformatRuntimeError","makeEnvironmentProviders","ɵwithDomHydration","Version","makeStateKey","makeStateKey$1","TransferState","TransferState$1","ɵDomAdapter","ɵsetRootDomAdapter","ɵparseCookieValue","ɵgetDOM","isPlatformServer","DOCUMENT","ɵPLATFORM_BROWSER_ID","XhrFactory","CommonModule","ɵwithHttpTransferCache","GenericBrowserDomAdapter","constructor","arguments","supportsDOMEvents","BrowserDomAdapter","makeCurrent","onAndCancel","el","evt","listener","addEventListener","removeEventListener","dispatchEvent","remove","node","parentNode","removeChild","createElement","tagName","doc","getDefaultDocument","createHtmlDocument","document","implementation","createHTMLDocument","isElementNode","nodeType","Node","ELEMENT_NODE","isShadowRoot","DocumentFragment","getGlobalEventTarget","target","window","body","getBaseHref","href","getBaseElementHref","relativePath","resetBaseElement","baseElement","getUserAgent","navigator","userAgent","getCookie","name","cookie","querySelector","getAttribute","url","URL","baseURI","pathname","BrowserGetTestability","addToWindow","registry","elem","findInAncestors","testability","findTestabilityInTree","ngDevMode","getAllTestabilities","getAllRootElements","whenAllStable","callback","testabilities","count","length","decrement","forEach","whenStable","push","t","getTestability","host","parentElement","BrowserXhr","build","XMLHttpRequest","ɵfac","ɵprov","type","EVENT_MANAGER_PLUGINS","EventManager","plugins","_zone","_eventNameToPlugin","Map","plugin","manager","_plugins","slice","reverse","element","eventName","handler","_findPluginFor","getZone","get","find","supports","set","undefined","decorators","args","EventManagerPlugin","_doc","APP_ID_ATTRIBUTE_NAME","SharedStylesHost","appId","nonce","platformId","styleRef","hostNodes","Set","styleNodesInDOM","collectServerRenderedStyles","platformIsServer","resetHostNodes","addStyles","styles","style","usageCount","changeUsageCount","onStyleAdded","removeStyles","onStyleRemoved","ngOnDestroy","clear","getAllStyles","addHost","hostNode","add","addStyleToHost","removeHost","delete","keys","elements","head","querySelectorAll","styleMap","textContent","delta","map","has","styleRefValue","usage","getStyleElement","styleEl","removeAttribute","setAttribute","appendChild","styleElRef","Document","NAMESPACE_URIS","COMPONENT_REGEX","COMPONENT_VARIABLE","HOST_ATTR","CONTENT_ATTR","REMOVE_STYLES_ON_COMPONENT_DESTROY_DEFAULT","REMOVE_STYLES_ON_COMPONENT_DESTROY","providedIn","factory","shimContentAttribute","componentShortId","replace","shimHostAttribute","shimStylesContent","compId","s","DomRendererFactory2","eventManager","sharedStylesHost","removeStylesOnCompDestroy","ngZone","rendererByCompId","defaultRenderer","DefaultDomRenderer2","createRenderer","encapsulation","ShadowDom","Emulated","renderer","getOrCreateRenderer","EmulatedEncapsulationDomRenderer2","applyToHost","NoneEncapsulationDomRenderer","applyStyles","id","ShadowDomRenderer","Object","data","create","throwOnSyntheticProps","destroyNode","destroy","namespace","createElementNS","createComment","value","createText","createTextNode","parent","newChild","targetParent","isTemplateNode","content","insertBefore","refChild","oldChild","selectRootElement","selectorOrNode","preserveContent","nextSibling","namespaceUri","setAttributeNS","removeAttributeNS","addClass","classList","removeClass","setStyle","flags","DashCase","Important","setProperty","removeStyle","removeProperty","checkNoSyntheticProp","setValue","nodeValue","listen","event","Error","decoratePreventDefault","eventHandler","allowDefaultBehavior","runGuarded","preventDefault","AT_CHARCODE","charCodeAt","nameKind","hostEl","component","shadowRoot","attachShadow","mode","nodeOrShadowRoot","contentAttr","hostAttr","DomEventsPlugin","MODIFIER_KEYS","_keyMap","MODIFIER_KEY_GETTERS","altKey","ctrlKey","metaKey","shiftKey","KeyEventsPlugin","parseEventName","parsedEvent","outsideHandler","eventCallback","runOutsideAngular","parts","toLowerCase","split","domEventName","shift","key","_normalizeKey","pop","fullKey","codeIX","indexOf","splice","modifierName","index","result","matchEventFullKeyCode","fullKeyCode","keycode","code","modifierGetter","zone","keyName","bootstrapApplication","rootComponent","options","createProvidersConfig","createApplication","appProviders","BROWSER_MODULE_PROVIDERS","providers","platformProviders","INTERNAL_BROWSER_PLATFORM_PROVIDERS","provideProtractorTestingSupport","TESTABILITY_PROVIDERS","initDomAdapter","errorHandler","_document","provide","useValue","multi","useFactory","deps","platformBrowser","BROWSER_MODULE_PROVIDERS_MARKER","useClass","useExisting","BrowserModule","providersAlreadyPresent","withServerTransition","params","ngModule","ɵmod","ɵinj","exports","Meta","_dom","addTag","tag","forceCreation","_getOrCreateElement","addTags","tags","reduce","getTag","attrSelector","getTags","list","call","updateTag","selector","_parseSelector","meta","_setMetaElementAttributes","removeTag","removeTagElement","filter","_containsAttributes","getElementsByTagName","prop","_getMetaKeyMap","attr","every","META_KEYS_MAP","httpEquiv","Title","getTitle","title","setTitle","newTitle","exportNgVar","COMPILED","ng","ChangeDetectionPerfRecord","msPerTick","numTicks","AngularProfiler","ref","appRef","injector","timeChangeDetection","config","record","profileName","console","profile","start","performance","now","tick","end","profileEnd","log","toFixed","PROFILER_GLOBAL_NAME","enableDebugTools","disableDebugTools","By","all","css","debugElement","nativeElement","elementMatches","directive","debugNode","providerTokens","n","matches","msMatchesSelector","webkitMatchesSelector","EVENT_NAMES","HAMMER_GESTURE_CONFIG","HAMMER_LOADER","HammerGestureConfig","events","overrides","buildHammer","mc","Hammer","enable","HammerGesturesPlugin","_config","loader","_loaderPromise","hasOwnProperty","isCustomEvent","warn","cancelRegistration","deregister","then","catch","eventObj","on","off","HammerModule","DomSanitizer","DomSanitizerImpl","sanitize","ctx","NONE","HTML","String","toString","STYLE","SCRIPT","RESOURCE_URL","bypassSecurityTrustHtml","bypassSecurityTrustStyle","bypassSecurityTrustScript","bypassSecurityTrustUrl","bypassSecurityTrustResourceUrl","HydrationFeatureKind","hydrationFeature","ɵkind","ɵproviders","ɵoptions","withNoHttpTransferCache","NoHttpTransferCache","withHttpTransferCacheOptions","HttpTransferCacheOptions","provideZoneJsCompatibilityDetector","message","provideClientHydration","features","featuresKind","hasHttpTransferCacheOptions","VERSION","ɵBrowserDomAdapter","ɵBrowserGetTestability","ɵDomEventsPlugin","ɵDomRendererFactory2","ɵDomSanitizerImpl","ɵHammerGesturesPlugin","ɵINTERNAL_BROWSER_PLATFORM_PROVIDERS","ɵKeyEventsPlugin","ɵSharedStylesHost","ɵinitDomAdapter"],"sources":["/home/ranjitmenon/APM-Start/APM-Start/node_modules/@angular/platform-browser/fesm2022/platform-browser.mjs"],"sourcesContent":["/**\n * @license Angular v17.3.8\n * (c) 2010-2024 Google LLC. https://angular.io/\n * License: MIT\n */\n\nimport * as i0 from '@angular/core';\nimport { ɵglobal, ɵRuntimeError, Injectable, InjectionToken, Inject, APP_ID, CSP_NONCE, PLATFORM_ID, Optional, ViewEncapsulation, RendererStyleFlags2, ɵinternalCreateApplication, ErrorHandler, ɵsetDocument, PLATFORM_INITIALIZER, createPlatformFactory, platformCore, ɵTESTABILITY_GETTER, ɵTESTABILITY, Testability, NgZone, TestabilityRegistry, ɵINJECTOR_SCOPE, RendererFactory2, ApplicationModule, NgModule, SkipSelf, ApplicationRef, ɵConsole, forwardRef, ɵXSS_SECURITY_URL, SecurityContext, ɵallowSanitizationBypassAndThrow, ɵunwrapSafeValue, ɵ_sanitizeUrl, ɵ_sanitizeHtml, ɵbypassSanitizationTrustHtml, ɵbypassSanitizationTrustStyle, ɵbypassSanitizationTrustScript, ɵbypassSanitizationTrustUrl, ɵbypassSanitizationTrustResourceUrl, ENVIRONMENT_INITIALIZER, inject, ɵformatRuntimeError, makeEnvironmentProviders, ɵwithDomHydration, Version, makeStateKey as makeStateKey$1, TransferState as TransferState$1 } from '@angular/core';\nimport { ɵDomAdapter, ɵsetRootDomAdapter, ɵparseCookieValue, ɵgetDOM, isPlatformServer, DOCUMENT, ɵPLATFORM_BROWSER_ID, XhrFactory, CommonModule } from '@angular/common';\nexport { ɵgetDOM } from '@angular/common';\nimport { ɵwithHttpTransferCache } from '@angular/common/http';\n\n/**\n * Provides DOM operations in any browser environment.\n *\n * @security Tread carefully! Interacting with the DOM directly is dangerous and\n * can introduce XSS risks.\n */\nclass GenericBrowserDomAdapter extends ɵDomAdapter {\n    constructor() {\n        super(...arguments);\n        this.supportsDOMEvents = true;\n    }\n}\n\n/**\n * A `DomAdapter` powered by full browser DOM APIs.\n *\n * @security Tread carefully! Interacting with the DOM directly is dangerous and\n * can introduce XSS risks.\n */\n/* tslint:disable:requireParameterType no-console */\nclass BrowserDomAdapter extends GenericBrowserDomAdapter {\n    static makeCurrent() {\n        ɵsetRootDomAdapter(new BrowserDomAdapter());\n    }\n    onAndCancel(el, evt, listener) {\n        el.addEventListener(evt, listener);\n        return () => {\n            el.removeEventListener(evt, listener);\n        };\n    }\n    dispatchEvent(el, evt) {\n        el.dispatchEvent(evt);\n    }\n    remove(node) {\n        if (node.parentNode) {\n            node.parentNode.removeChild(node);\n        }\n    }\n    createElement(tagName, doc) {\n        doc = doc || this.getDefaultDocument();\n        return doc.createElement(tagName);\n    }\n    createHtmlDocument() {\n        return document.implementation.createHTMLDocument('fakeTitle');\n    }\n    getDefaultDocument() {\n        return document;\n    }\n    isElementNode(node) {\n        return node.nodeType === Node.ELEMENT_NODE;\n    }\n    isShadowRoot(node) {\n        return node instanceof DocumentFragment;\n    }\n    /** @deprecated No longer being used in Ivy code. To be removed in version 14. */\n    getGlobalEventTarget(doc, target) {\n        if (target === 'window') {\n            return window;\n        }\n        if (target === 'document') {\n            return doc;\n        }\n        if (target === 'body') {\n            return doc.body;\n        }\n        return null;\n    }\n    getBaseHref(doc) {\n        const href = getBaseElementHref();\n        return href == null ? null : relativePath(href);\n    }\n    resetBaseElement() {\n        baseElement = null;\n    }\n    getUserAgent() {\n        return window.navigator.userAgent;\n    }\n    getCookie(name) {\n        return ɵparseCookieValue(document.cookie, name);\n    }\n}\nlet baseElement = null;\nfunction getBaseElementHref() {\n    baseElement = baseElement || document.querySelector('base');\n    return baseElement ? baseElement.getAttribute('href') : null;\n}\nfunction relativePath(url) {\n    // The base URL doesn't really matter, we just need it so relative paths have something\n    // to resolve against. In the browser `HTMLBaseElement.href` is always absolute.\n    return new URL(url, document.baseURI).pathname;\n}\n\nclass BrowserGetTestability {\n    addToWindow(registry) {\n        ɵglobal['getAngularTestability'] = (elem, findInAncestors = true) => {\n            const testability = registry.findTestabilityInTree(elem, findInAncestors);\n            if (testability == null) {\n                throw new ɵRuntimeError(5103 /* RuntimeErrorCode.TESTABILITY_NOT_FOUND */, (typeof ngDevMode === 'undefined' || ngDevMode) &&\n                    'Could not find testability for element.');\n            }\n            return testability;\n        };\n        ɵglobal['getAllAngularTestabilities'] = () => registry.getAllTestabilities();\n        ɵglobal['getAllAngularRootElements'] = () => registry.getAllRootElements();\n        const whenAllStable = (callback) => {\n            const testabilities = ɵglobal['getAllAngularTestabilities']();\n            let count = testabilities.length;\n            const decrement = function () {\n                count--;\n                if (count == 0) {\n                    callback();\n                }\n            };\n            testabilities.forEach((testability) => {\n                testability.whenStable(decrement);\n            });\n        };\n        if (!ɵglobal['frameworkStabilizers']) {\n            ɵglobal['frameworkStabilizers'] = [];\n        }\n        ɵglobal['frameworkStabilizers'].push(whenAllStable);\n    }\n    findTestabilityInTree(registry, elem, findInAncestors) {\n        if (elem == null) {\n            return null;\n        }\n        const t = registry.getTestability(elem);\n        if (t != null) {\n            return t;\n        }\n        else if (!findInAncestors) {\n            return null;\n        }\n        if (ɵgetDOM().isShadowRoot(elem)) {\n            return this.findTestabilityInTree(registry, elem.host, true);\n        }\n        return this.findTestabilityInTree(registry, elem.parentElement, true);\n    }\n}\n\n/**\n * A factory for `HttpXhrBackend` that uses the `XMLHttpRequest` browser API.\n */\nclass BrowserXhr {\n    build() {\n        return new XMLHttpRequest();\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.3.8\", ngImport: i0, type: BrowserXhr, deps: [], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"17.3.8\", ngImport: i0, type: BrowserXhr }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.3.8\", ngImport: i0, type: BrowserXhr, decorators: [{\n            type: Injectable\n        }] });\n\n/**\n * The injection token for plugins of the `EventManager` service.\n *\n * @publicApi\n */\nconst EVENT_MANAGER_PLUGINS = new InjectionToken(ngDevMode ? 'EventManagerPlugins' : '');\n/**\n * An injectable service that provides event management for Angular\n * through a browser plug-in.\n *\n * @publicApi\n */\nclass EventManager {\n    /**\n     * Initializes an instance of the event-manager service.\n     */\n    constructor(plugins, _zone) {\n        this._zone = _zone;\n        this._eventNameToPlugin = new Map();\n        plugins.forEach((plugin) => {\n            plugin.manager = this;\n        });\n        this._plugins = plugins.slice().reverse();\n    }\n    /**\n     * Registers a handler for a specific element and event.\n     *\n     * @param element The HTML element to receive event notifications.\n     * @param eventName The name of the event to listen for.\n     * @param handler A function to call when the notification occurs. Receives the\n     * event object as an argument.\n     * @returns  A callback function that can be used to remove the handler.\n     */\n    addEventListener(element, eventName, handler) {\n        const plugin = this._findPluginFor(eventName);\n        return plugin.addEventListener(element, eventName, handler);\n    }\n    /**\n     * Retrieves the compilation zone in which event listeners are registered.\n     */\n    getZone() {\n        return this._zone;\n    }\n    /** @internal */\n    _findPluginFor(eventName) {\n        let plugin = this._eventNameToPlugin.get(eventName);\n        if (plugin) {\n            return plugin;\n        }\n        const plugins = this._plugins;\n        plugin = plugins.find((plugin) => plugin.supports(eventName));\n        if (!plugin) {\n            throw new ɵRuntimeError(5101 /* RuntimeErrorCode.NO_PLUGIN_FOR_EVENT */, (typeof ngDevMode === 'undefined' || ngDevMode) &&\n                `No event manager plugin found for event ${eventName}`);\n        }\n        this._eventNameToPlugin.set(eventName, plugin);\n        return plugin;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.3.8\", ngImport: i0, type: EventManager, deps: [{ token: EVENT_MANAGER_PLUGINS }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"17.3.8\", ngImport: i0, type: EventManager }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.3.8\", ngImport: i0, type: EventManager, decorators: [{\n            type: Injectable\n        }], ctorParameters: () => [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [EVENT_MANAGER_PLUGINS]\n                }] }, { type: i0.NgZone }] });\n/**\n * The plugin definition for the `EventManager` class\n *\n * It can be used as a base class to create custom manager plugins, i.e. you can create your own\n * class that extends the `EventManagerPlugin` one.\n *\n * @publicApi\n */\nclass EventManagerPlugin {\n    // TODO: remove (has some usage in G3)\n    constructor(_doc) {\n        this._doc = _doc;\n    }\n}\n\n/** The style elements attribute name used to set value of `APP_ID` token. */\nconst APP_ID_ATTRIBUTE_NAME = 'ng-app-id';\nclass SharedStylesHost {\n    constructor(doc, appId, nonce, platformId = {}) {\n        this.doc = doc;\n        this.appId = appId;\n        this.nonce = nonce;\n        this.platformId = platformId;\n        // Maps all registered host nodes to a list of style nodes that have been added to the host node.\n        this.styleRef = new Map();\n        this.hostNodes = new Set();\n        this.styleNodesInDOM = this.collectServerRenderedStyles();\n        this.platformIsServer = isPlatformServer(platformId);\n        this.resetHostNodes();\n    }\n    addStyles(styles) {\n        for (const style of styles) {\n            const usageCount = this.changeUsageCount(style, 1);\n            if (usageCount === 1) {\n                this.onStyleAdded(style);\n            }\n        }\n    }\n    removeStyles(styles) {\n        for (const style of styles) {\n            const usageCount = this.changeUsageCount(style, -1);\n            if (usageCount <= 0) {\n                this.onStyleRemoved(style);\n            }\n        }\n    }\n    ngOnDestroy() {\n        const styleNodesInDOM = this.styleNodesInDOM;\n        if (styleNodesInDOM) {\n            styleNodesInDOM.forEach((node) => node.remove());\n            styleNodesInDOM.clear();\n        }\n        for (const style of this.getAllStyles()) {\n            this.onStyleRemoved(style);\n        }\n        this.resetHostNodes();\n    }\n    addHost(hostNode) {\n        this.hostNodes.add(hostNode);\n        for (const style of this.getAllStyles()) {\n            this.addStyleToHost(hostNode, style);\n        }\n    }\n    removeHost(hostNode) {\n        this.hostNodes.delete(hostNode);\n    }\n    getAllStyles() {\n        return this.styleRef.keys();\n    }\n    onStyleAdded(style) {\n        for (const host of this.hostNodes) {\n            this.addStyleToHost(host, style);\n        }\n    }\n    onStyleRemoved(style) {\n        const styleRef = this.styleRef;\n        styleRef.get(style)?.elements?.forEach((node) => node.remove());\n        styleRef.delete(style);\n    }\n    collectServerRenderedStyles() {\n        const styles = this.doc.head?.querySelectorAll(`style[${APP_ID_ATTRIBUTE_NAME}=\"${this.appId}\"]`);\n        if (styles?.length) {\n            const styleMap = new Map();\n            styles.forEach((style) => {\n                if (style.textContent != null) {\n                    styleMap.set(style.textContent, style);\n                }\n            });\n            return styleMap;\n        }\n        return null;\n    }\n    changeUsageCount(style, delta) {\n        const map = this.styleRef;\n        if (map.has(style)) {\n            const styleRefValue = map.get(style);\n            styleRefValue.usage += delta;\n            return styleRefValue.usage;\n        }\n        map.set(style, { usage: delta, elements: [] });\n        return delta;\n    }\n    getStyleElement(host, style) {\n        const styleNodesInDOM = this.styleNodesInDOM;\n        const styleEl = styleNodesInDOM?.get(style);\n        if (styleEl?.parentNode === host) {\n            // `styleNodesInDOM` cannot be undefined due to the above `styleNodesInDOM?.get`.\n            styleNodesInDOM.delete(style);\n            styleEl.removeAttribute(APP_ID_ATTRIBUTE_NAME);\n            if (typeof ngDevMode === 'undefined' || ngDevMode) {\n                // This attribute is solely used for debugging purposes.\n                styleEl.setAttribute('ng-style-reused', '');\n            }\n            return styleEl;\n        }\n        else {\n            const styleEl = this.doc.createElement('style');\n            if (this.nonce) {\n                styleEl.setAttribute('nonce', this.nonce);\n            }\n            styleEl.textContent = style;\n            if (this.platformIsServer) {\n                styleEl.setAttribute(APP_ID_ATTRIBUTE_NAME, this.appId);\n            }\n            host.appendChild(styleEl);\n            return styleEl;\n        }\n    }\n    addStyleToHost(host, style) {\n        const styleEl = this.getStyleElement(host, style);\n        const styleRef = this.styleRef;\n        const styleElRef = styleRef.get(style)?.elements;\n        if (styleElRef) {\n            styleElRef.push(styleEl);\n        }\n        else {\n            styleRef.set(style, { elements: [styleEl], usage: 1 });\n        }\n    }\n    resetHostNodes() {\n        const hostNodes = this.hostNodes;\n        hostNodes.clear();\n        // Re-add the head element back since this is the default host.\n        hostNodes.add(this.doc.head);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.3.8\", ngImport: i0, type: SharedStylesHost, deps: [{ token: DOCUMENT }, { token: APP_ID }, { token: CSP_NONCE, optional: true }, { token: PLATFORM_ID }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"17.3.8\", ngImport: i0, type: SharedStylesHost }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.3.8\", ngImport: i0, type: SharedStylesHost, decorators: [{\n            type: Injectable\n        }], ctorParameters: () => [{ type: Document, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [APP_ID]\n                }] }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [CSP_NONCE]\n                }, {\n                    type: Optional\n                }] }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [PLATFORM_ID]\n                }] }] });\n\nconst NAMESPACE_URIS = {\n    'svg': 'http://www.w3.org/2000/svg',\n    'xhtml': 'http://www.w3.org/1999/xhtml',\n    'xlink': 'http://www.w3.org/1999/xlink',\n    'xml': 'http://www.w3.org/XML/1998/namespace',\n    'xmlns': 'http://www.w3.org/2000/xmlns/',\n    'math': 'http://www.w3.org/1998/MathML/',\n};\nconst COMPONENT_REGEX = /%COMP%/g;\nconst COMPONENT_VARIABLE = '%COMP%';\nconst HOST_ATTR = `_nghost-${COMPONENT_VARIABLE}`;\nconst CONTENT_ATTR = `_ngcontent-${COMPONENT_VARIABLE}`;\n/**\n * The default value for the `REMOVE_STYLES_ON_COMPONENT_DESTROY` DI token.\n */\nconst REMOVE_STYLES_ON_COMPONENT_DESTROY_DEFAULT = true;\n/**\n * A [DI token](guide/glossary#di-token \"DI token definition\") that indicates whether styles\n * of destroyed components should be removed from DOM.\n *\n * By default, the value is set to `true`.\n * @publicApi\n */\nconst REMOVE_STYLES_ON_COMPONENT_DESTROY = new InjectionToken(ngDevMode ? 'RemoveStylesOnCompDestroy' : '', {\n    providedIn: 'root',\n    factory: () => REMOVE_STYLES_ON_COMPONENT_DESTROY_DEFAULT,\n});\nfunction shimContentAttribute(componentShortId) {\n    return CONTENT_ATTR.replace(COMPONENT_REGEX, componentShortId);\n}\nfunction shimHostAttribute(componentShortId) {\n    return HOST_ATTR.replace(COMPONENT_REGEX, componentShortId);\n}\nfunction shimStylesContent(compId, styles) {\n    return styles.map(s => s.replace(COMPONENT_REGEX, compId));\n}\nclass DomRendererFactory2 {\n    constructor(eventManager, sharedStylesHost, appId, removeStylesOnCompDestroy, doc, platformId, ngZone, nonce = null) {\n        this.eventManager = eventManager;\n        this.sharedStylesHost = sharedStylesHost;\n        this.appId = appId;\n        this.removeStylesOnCompDestroy = removeStylesOnCompDestroy;\n        this.doc = doc;\n        this.platformId = platformId;\n        this.ngZone = ngZone;\n        this.nonce = nonce;\n        this.rendererByCompId = new Map();\n        this.platformIsServer = isPlatformServer(platformId);\n        this.defaultRenderer =\n            new DefaultDomRenderer2(eventManager, doc, ngZone, this.platformIsServer);\n    }\n    createRenderer(element, type) {\n        if (!element || !type) {\n            return this.defaultRenderer;\n        }\n        if (this.platformIsServer && type.encapsulation === ViewEncapsulation.ShadowDom) {\n            // Domino does not support shadow DOM.\n            type = { ...type, encapsulation: ViewEncapsulation.Emulated };\n        }\n        const renderer = this.getOrCreateRenderer(element, type);\n        // Renderers have different logic due to different encapsulation behaviours.\n        // Ex: for emulated, an attribute is added to the element.\n        if (renderer instanceof EmulatedEncapsulationDomRenderer2) {\n            renderer.applyToHost(element);\n        }\n        else if (renderer instanceof NoneEncapsulationDomRenderer) {\n            renderer.applyStyles();\n        }\n        return renderer;\n    }\n    getOrCreateRenderer(element, type) {\n        const rendererByCompId = this.rendererByCompId;\n        let renderer = rendererByCompId.get(type.id);\n        if (!renderer) {\n            const doc = this.doc;\n            const ngZone = this.ngZone;\n            const eventManager = this.eventManager;\n            const sharedStylesHost = this.sharedStylesHost;\n            const removeStylesOnCompDestroy = this.removeStylesOnCompDestroy;\n            const platformIsServer = this.platformIsServer;\n            switch (type.encapsulation) {\n                case ViewEncapsulation.Emulated:\n                    renderer = new EmulatedEncapsulationDomRenderer2(eventManager, sharedStylesHost, type, this.appId, removeStylesOnCompDestroy, doc, ngZone, platformIsServer);\n                    break;\n                case ViewEncapsulation.ShadowDom:\n                    return new ShadowDomRenderer(eventManager, sharedStylesHost, element, type, doc, ngZone, this.nonce, platformIsServer);\n                default:\n                    renderer = new NoneEncapsulationDomRenderer(eventManager, sharedStylesHost, type, removeStylesOnCompDestroy, doc, ngZone, platformIsServer);\n                    break;\n            }\n            rendererByCompId.set(type.id, renderer);\n        }\n        return renderer;\n    }\n    ngOnDestroy() {\n        this.rendererByCompId.clear();\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.3.8\", ngImport: i0, type: DomRendererFactory2, deps: [{ token: EventManager }, { token: SharedStylesHost }, { token: APP_ID }, { token: REMOVE_STYLES_ON_COMPONENT_DESTROY }, { token: DOCUMENT }, { token: PLATFORM_ID }, { token: i0.NgZone }, { token: CSP_NONCE }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"17.3.8\", ngImport: i0, type: DomRendererFactory2 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.3.8\", ngImport: i0, type: DomRendererFactory2, decorators: [{\n            type: Injectable\n        }], ctorParameters: () => [{ type: EventManager }, { type: SharedStylesHost }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [APP_ID]\n                }] }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [REMOVE_STYLES_ON_COMPONENT_DESTROY]\n                }] }, { type: Document, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }, { type: Object, decorators: [{\n                    type: Inject,\n                    args: [PLATFORM_ID]\n                }] }, { type: i0.NgZone }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [CSP_NONCE]\n                }] }] });\nclass DefaultDomRenderer2 {\n    constructor(eventManager, doc, ngZone, platformIsServer) {\n        this.eventManager = eventManager;\n        this.doc = doc;\n        this.ngZone = ngZone;\n        this.platformIsServer = platformIsServer;\n        this.data = Object.create(null);\n        /**\n         * By default this renderer throws when encountering synthetic properties\n         * This can be disabled for example by the AsyncAnimationRendererFactory\n         */\n        this.throwOnSyntheticProps = true;\n        this.destroyNode = null;\n    }\n    destroy() { }\n    createElement(name, namespace) {\n        if (namespace) {\n            // TODO: `|| namespace` was added in\n            // https://github.com/angular/angular/commit/2b9cc8503d48173492c29f5a271b61126104fbdb to\n            // support how Ivy passed around the namespace URI rather than short name at the time. It did\n            // not, however extend the support to other parts of the system (setAttribute, setAttribute,\n            // and the ServerRenderer). We should decide what exactly the semantics for dealing with\n            // namespaces should be and make it consistent.\n            // Related issues:\n            // https://github.com/angular/angular/issues/44028\n            // https://github.com/angular/angular/issues/44883\n            return this.doc.createElementNS(NAMESPACE_URIS[namespace] || namespace, name);\n        }\n        return this.doc.createElement(name);\n    }\n    createComment(value) {\n        return this.doc.createComment(value);\n    }\n    createText(value) {\n        return this.doc.createTextNode(value);\n    }\n    appendChild(parent, newChild) {\n        const targetParent = isTemplateNode(parent) ? parent.content : parent;\n        targetParent.appendChild(newChild);\n    }\n    insertBefore(parent, newChild, refChild) {\n        if (parent) {\n            const targetParent = isTemplateNode(parent) ? parent.content : parent;\n            targetParent.insertBefore(newChild, refChild);\n        }\n    }\n    removeChild(parent, oldChild) {\n        if (parent) {\n            parent.removeChild(oldChild);\n        }\n    }\n    selectRootElement(selectorOrNode, preserveContent) {\n        let el = typeof selectorOrNode === 'string' ? this.doc.querySelector(selectorOrNode) :\n            selectorOrNode;\n        if (!el) {\n            throw new ɵRuntimeError(-5104 /* RuntimeErrorCode.ROOT_NODE_NOT_FOUND */, (typeof ngDevMode === 'undefined' || ngDevMode) &&\n                `The selector \"${selectorOrNode}\" did not match any elements`);\n        }\n        if (!preserveContent) {\n            el.textContent = '';\n        }\n        return el;\n    }\n    parentNode(node) {\n        return node.parentNode;\n    }\n    nextSibling(node) {\n        return node.nextSibling;\n    }\n    setAttribute(el, name, value, namespace) {\n        if (namespace) {\n            name = namespace + ':' + name;\n            const namespaceUri = NAMESPACE_URIS[namespace];\n            if (namespaceUri) {\n                el.setAttributeNS(namespaceUri, name, value);\n            }\n            else {\n                el.setAttribute(name, value);\n            }\n        }\n        else {\n            el.setAttribute(name, value);\n        }\n    }\n    removeAttribute(el, name, namespace) {\n        if (namespace) {\n            const namespaceUri = NAMESPACE_URIS[namespace];\n            if (namespaceUri) {\n                el.removeAttributeNS(namespaceUri, name);\n            }\n            else {\n                el.removeAttribute(`${namespace}:${name}`);\n            }\n        }\n        else {\n            el.removeAttribute(name);\n        }\n    }\n    addClass(el, name) {\n        el.classList.add(name);\n    }\n    removeClass(el, name) {\n        el.classList.remove(name);\n    }\n    setStyle(el, style, value, flags) {\n        if (flags & (RendererStyleFlags2.DashCase | RendererStyleFlags2.Important)) {\n            el.style.setProperty(style, value, flags & RendererStyleFlags2.Important ? 'important' : '');\n        }\n        else {\n            el.style[style] = value;\n        }\n    }\n    removeStyle(el, style, flags) {\n        if (flags & RendererStyleFlags2.DashCase) {\n            // removeProperty has no effect when used on camelCased properties.\n            el.style.removeProperty(style);\n        }\n        else {\n            el.style[style] = '';\n        }\n    }\n    setProperty(el, name, value) {\n        if (el == null) {\n            return;\n        }\n        (typeof ngDevMode === 'undefined' || ngDevMode) && this.throwOnSyntheticProps &&\n            checkNoSyntheticProp(name, 'property');\n        el[name] = value;\n    }\n    setValue(node, value) {\n        node.nodeValue = value;\n    }\n    listen(target, event, callback) {\n        (typeof ngDevMode === 'undefined' || ngDevMode) && this.throwOnSyntheticProps &&\n            checkNoSyntheticProp(event, 'listener');\n        if (typeof target === 'string') {\n            target = ɵgetDOM().getGlobalEventTarget(this.doc, target);\n            if (!target) {\n                throw new Error(`Unsupported event target ${target} for event ${event}`);\n            }\n        }\n        return this.eventManager.addEventListener(target, event, this.decoratePreventDefault(callback));\n    }\n    decoratePreventDefault(eventHandler) {\n        // `DebugNode.triggerEventHandler` needs to know if the listener was created with\n        // decoratePreventDefault or is a listener added outside the Angular context so it can handle\n        // the two differently. In the first case, the special '__ngUnwrap__' token is passed to the\n        // unwrap the listener (see below).\n        return (event) => {\n            // Ivy uses '__ngUnwrap__' as a special token that allows us to unwrap the function\n            // so that it can be invoked programmatically by `DebugNode.triggerEventHandler`. The\n            // debug_node can inspect the listener toString contents for the existence of this special\n            // token. Because the token is a string literal, it is ensured to not be modified by compiled\n            // code.\n            if (event === '__ngUnwrap__') {\n                return eventHandler;\n            }\n            // Run the event handler inside the ngZone because event handlers are not patched\n            // by Zone on the server. This is required only for tests.\n            const allowDefaultBehavior = this.platformIsServer ?\n                this.ngZone.runGuarded(() => eventHandler(event)) :\n                eventHandler(event);\n            if (allowDefaultBehavior === false) {\n                event.preventDefault();\n            }\n            return undefined;\n        };\n    }\n}\nconst AT_CHARCODE = (() => '@'.charCodeAt(0))();\nfunction checkNoSyntheticProp(name, nameKind) {\n    if (name.charCodeAt(0) === AT_CHARCODE) {\n        throw new ɵRuntimeError(5105 /* RuntimeErrorCode.UNEXPECTED_SYNTHETIC_PROPERTY */, `Unexpected synthetic ${nameKind} ${name} found. Please make sure that:\n  - Either \\`BrowserAnimationsModule\\` or \\`NoopAnimationsModule\\` are imported in your application.\n  - There is corresponding configuration for the animation named \\`${name}\\` defined in the \\`animations\\` field of the \\`@Component\\` decorator (see https://angular.io/api/core/Component#animations).`);\n    }\n}\nfunction isTemplateNode(node) {\n    return node.tagName === 'TEMPLATE' && node.content !== undefined;\n}\nclass ShadowDomRenderer extends DefaultDomRenderer2 {\n    constructor(eventManager, sharedStylesHost, hostEl, component, doc, ngZone, nonce, platformIsServer) {\n        super(eventManager, doc, ngZone, platformIsServer);\n        this.sharedStylesHost = sharedStylesHost;\n        this.hostEl = hostEl;\n        this.shadowRoot = hostEl.attachShadow({ mode: 'open' });\n        this.sharedStylesHost.addHost(this.shadowRoot);\n        const styles = shimStylesContent(component.id, component.styles);\n        for (const style of styles) {\n            const styleEl = document.createElement('style');\n            if (nonce) {\n                styleEl.setAttribute('nonce', nonce);\n            }\n            styleEl.textContent = style;\n            this.shadowRoot.appendChild(styleEl);\n        }\n    }\n    nodeOrShadowRoot(node) {\n        return node === this.hostEl ? this.shadowRoot : node;\n    }\n    appendChild(parent, newChild) {\n        return super.appendChild(this.nodeOrShadowRoot(parent), newChild);\n    }\n    insertBefore(parent, newChild, refChild) {\n        return super.insertBefore(this.nodeOrShadowRoot(parent), newChild, refChild);\n    }\n    removeChild(parent, oldChild) {\n        return super.removeChild(this.nodeOrShadowRoot(parent), oldChild);\n    }\n    parentNode(node) {\n        return this.nodeOrShadowRoot(super.parentNode(this.nodeOrShadowRoot(node)));\n    }\n    destroy() {\n        this.sharedStylesHost.removeHost(this.shadowRoot);\n    }\n}\nclass NoneEncapsulationDomRenderer extends DefaultDomRenderer2 {\n    constructor(eventManager, sharedStylesHost, component, removeStylesOnCompDestroy, doc, ngZone, platformIsServer, compId) {\n        super(eventManager, doc, ngZone, platformIsServer);\n        this.sharedStylesHost = sharedStylesHost;\n        this.removeStylesOnCompDestroy = removeStylesOnCompDestroy;\n        this.styles = compId ? shimStylesContent(compId, component.styles) : component.styles;\n    }\n    applyStyles() {\n        this.sharedStylesHost.addStyles(this.styles);\n    }\n    destroy() {\n        if (!this.removeStylesOnCompDestroy) {\n            return;\n        }\n        this.sharedStylesHost.removeStyles(this.styles);\n    }\n}\nclass EmulatedEncapsulationDomRenderer2 extends NoneEncapsulationDomRenderer {\n    constructor(eventManager, sharedStylesHost, component, appId, removeStylesOnCompDestroy, doc, ngZone, platformIsServer) {\n        const compId = appId + '-' + component.id;\n        super(eventManager, sharedStylesHost, component, removeStylesOnCompDestroy, doc, ngZone, platformIsServer, compId);\n        this.contentAttr = shimContentAttribute(compId);\n        this.hostAttr = shimHostAttribute(compId);\n    }\n    applyToHost(element) {\n        this.applyStyles();\n        this.setAttribute(element, this.hostAttr, '');\n    }\n    createElement(parent, name) {\n        const el = super.createElement(parent, name);\n        super.setAttribute(el, this.contentAttr, '');\n        return el;\n    }\n}\n\nclass DomEventsPlugin extends EventManagerPlugin {\n    constructor(doc) {\n        super(doc);\n    }\n    // This plugin should come last in the list of plugins, because it accepts all\n    // events.\n    supports(eventName) {\n        return true;\n    }\n    addEventListener(element, eventName, handler) {\n        element.addEventListener(eventName, handler, false);\n        return () => this.removeEventListener(element, eventName, handler);\n    }\n    removeEventListener(target, eventName, callback) {\n        return target.removeEventListener(eventName, callback);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.3.8\", ngImport: i0, type: DomEventsPlugin, deps: [{ token: DOCUMENT }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"17.3.8\", ngImport: i0, type: DomEventsPlugin }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.3.8\", ngImport: i0, type: DomEventsPlugin, decorators: [{\n            type: Injectable\n        }], ctorParameters: () => [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }] });\n\n/**\n * Defines supported modifiers for key events.\n */\nconst MODIFIER_KEYS = ['alt', 'control', 'meta', 'shift'];\n// The following values are here for cross-browser compatibility and to match the W3C standard\n// cf https://www.w3.org/TR/DOM-Level-3-Events-key/\nconst _keyMap = {\n    '\\b': 'Backspace',\n    '\\t': 'Tab',\n    '\\x7F': 'Delete',\n    '\\x1B': 'Escape',\n    'Del': 'Delete',\n    'Esc': 'Escape',\n    'Left': 'ArrowLeft',\n    'Right': 'ArrowRight',\n    'Up': 'ArrowUp',\n    'Down': 'ArrowDown',\n    'Menu': 'ContextMenu',\n    'Scroll': 'ScrollLock',\n    'Win': 'OS'\n};\n/**\n * Retrieves modifiers from key-event objects.\n */\nconst MODIFIER_KEY_GETTERS = {\n    'alt': (event) => event.altKey,\n    'control': (event) => event.ctrlKey,\n    'meta': (event) => event.metaKey,\n    'shift': (event) => event.shiftKey\n};\n/**\n * A browser plug-in that provides support for handling of key events in Angular.\n */\nclass KeyEventsPlugin extends EventManagerPlugin {\n    /**\n     * Initializes an instance of the browser plug-in.\n     * @param doc The document in which key events will be detected.\n     */\n    constructor(doc) {\n        super(doc);\n    }\n    /**\n     * Reports whether a named key event is supported.\n     * @param eventName The event name to query.\n     * @return True if the named key event is supported.\n     */\n    supports(eventName) {\n        return KeyEventsPlugin.parseEventName(eventName) != null;\n    }\n    /**\n     * Registers a handler for a specific element and key event.\n     * @param element The HTML element to receive event notifications.\n     * @param eventName The name of the key event to listen for.\n     * @param handler A function to call when the notification occurs. Receives the\n     * event object as an argument.\n     * @returns The key event that was registered.\n     */\n    addEventListener(element, eventName, handler) {\n        const parsedEvent = KeyEventsPlugin.parseEventName(eventName);\n        const outsideHandler = KeyEventsPlugin.eventCallback(parsedEvent['fullKey'], handler, this.manager.getZone());\n        return this.manager.getZone().runOutsideAngular(() => {\n            return ɵgetDOM().onAndCancel(element, parsedEvent['domEventName'], outsideHandler);\n        });\n    }\n    /**\n     * Parses the user provided full keyboard event definition and normalizes it for\n     * later internal use. It ensures the string is all lowercase, converts special\n     * characters to a standard spelling, and orders all the values consistently.\n     *\n     * @param eventName The name of the key event to listen for.\n     * @returns an object with the full, normalized string, and the dom event name\n     * or null in the case when the event doesn't match a keyboard event.\n     */\n    static parseEventName(eventName) {\n        const parts = eventName.toLowerCase().split('.');\n        const domEventName = parts.shift();\n        if ((parts.length === 0) || !(domEventName === 'keydown' || domEventName === 'keyup')) {\n            return null;\n        }\n        const key = KeyEventsPlugin._normalizeKey(parts.pop());\n        let fullKey = '';\n        let codeIX = parts.indexOf('code');\n        if (codeIX > -1) {\n            parts.splice(codeIX, 1);\n            fullKey = 'code.';\n        }\n        MODIFIER_KEYS.forEach(modifierName => {\n            const index = parts.indexOf(modifierName);\n            if (index > -1) {\n                parts.splice(index, 1);\n                fullKey += modifierName + '.';\n            }\n        });\n        fullKey += key;\n        if (parts.length != 0 || key.length === 0) {\n            // returning null instead of throwing to let another plugin process the event\n            return null;\n        }\n        // NOTE: Please don't rewrite this as so, as it will break JSCompiler property renaming.\n        //       The code must remain in the `result['domEventName']` form.\n        // return {domEventName, fullKey};\n        const result = {};\n        result['domEventName'] = domEventName;\n        result['fullKey'] = fullKey;\n        return result;\n    }\n    /**\n     * Determines whether the actual keys pressed match the configured key code string.\n     * The `fullKeyCode` event is normalized in the `parseEventName` method when the\n     * event is attached to the DOM during the `addEventListener` call. This is unseen\n     * by the end user and is normalized for internal consistency and parsing.\n     *\n     * @param event The keyboard event.\n     * @param fullKeyCode The normalized user defined expected key event string\n     * @returns boolean.\n     */\n    static matchEventFullKeyCode(event, fullKeyCode) {\n        let keycode = _keyMap[event.key] || event.key;\n        let key = '';\n        if (fullKeyCode.indexOf('code.') > -1) {\n            keycode = event.code;\n            key = 'code.';\n        }\n        // the keycode could be unidentified so we have to check here\n        if (keycode == null || !keycode)\n            return false;\n        keycode = keycode.toLowerCase();\n        if (keycode === ' ') {\n            keycode = 'space'; // for readability\n        }\n        else if (keycode === '.') {\n            keycode = 'dot'; // because '.' is used as a separator in event names\n        }\n        MODIFIER_KEYS.forEach(modifierName => {\n            if (modifierName !== keycode) {\n                const modifierGetter = MODIFIER_KEY_GETTERS[modifierName];\n                if (modifierGetter(event)) {\n                    key += modifierName + '.';\n                }\n            }\n        });\n        key += keycode;\n        return key === fullKeyCode;\n    }\n    /**\n     * Configures a handler callback for a key event.\n     * @param fullKey The event name that combines all simultaneous keystrokes.\n     * @param handler The function that responds to the key event.\n     * @param zone The zone in which the event occurred.\n     * @returns A callback function.\n     */\n    static eventCallback(fullKey, handler, zone) {\n        return (event) => {\n            if (KeyEventsPlugin.matchEventFullKeyCode(event, fullKey)) {\n                zone.runGuarded(() => handler(event));\n            }\n        };\n    }\n    /** @internal */\n    static _normalizeKey(keyName) {\n        return keyName === 'esc' ? 'escape' : keyName;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.3.8\", ngImport: i0, type: KeyEventsPlugin, deps: [{ token: DOCUMENT }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"17.3.8\", ngImport: i0, type: KeyEventsPlugin }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.3.8\", ngImport: i0, type: KeyEventsPlugin, decorators: [{\n            type: Injectable\n        }], ctorParameters: () => [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }] });\n\n/**\n * Bootstraps an instance of an Angular application and renders a standalone component as the\n * application's root component. More information about standalone components can be found in [this\n * guide](guide/standalone-components).\n *\n * @usageNotes\n * The root component passed into this function *must* be a standalone one (should have the\n * `standalone: true` flag in the `@Component` decorator config).\n *\n * ```typescript\n * @Component({\n *   standalone: true,\n *   template: 'Hello world!'\n * })\n * class RootComponent {}\n *\n * const appRef: ApplicationRef = await bootstrapApplication(RootComponent);\n * ```\n *\n * You can add the list of providers that should be available in the application injector by\n * specifying the `providers` field in an object passed as the second argument:\n *\n * ```typescript\n * await bootstrapApplication(RootComponent, {\n *   providers: [\n *     {provide: BACKEND_URL, useValue: 'https://yourdomain.com/api'}\n *   ]\n * });\n * ```\n *\n * The `importProvidersFrom` helper method can be used to collect all providers from any\n * existing NgModule (and transitively from all NgModules that it imports):\n *\n * ```typescript\n * await bootstrapApplication(RootComponent, {\n *   providers: [\n *     importProvidersFrom(SomeNgModule)\n *   ]\n * });\n * ```\n *\n * Note: the `bootstrapApplication` method doesn't include [Testability](api/core/Testability) by\n * default. You can add [Testability](api/core/Testability) by getting the list of necessary\n * providers using `provideProtractorTestingSupport()` function and adding them into the `providers`\n * array, for example:\n *\n * ```typescript\n * import {provideProtractorTestingSupport} from '@angular/platform-browser';\n *\n * await bootstrapApplication(RootComponent, {providers: [provideProtractorTestingSupport()]});\n * ```\n *\n * @param rootComponent A reference to a standalone component that should be rendered.\n * @param options Extra configuration for the bootstrap operation, see `ApplicationConfig` for\n *     additional info.\n * @returns A promise that returns an `ApplicationRef` instance once resolved.\n *\n * @publicApi\n */\nfunction bootstrapApplication(rootComponent, options) {\n    return ɵinternalCreateApplication({ rootComponent, ...createProvidersConfig(options) });\n}\n/**\n * Create an instance of an Angular application without bootstrapping any components. This is useful\n * for the situation where one wants to decouple application environment creation (a platform and\n * associated injectors) from rendering components on a screen. Components can be subsequently\n * bootstrapped on the returned `ApplicationRef`.\n *\n * @param options Extra configuration for the application environment, see `ApplicationConfig` for\n *     additional info.\n * @returns A promise that returns an `ApplicationRef` instance once resolved.\n *\n * @publicApi\n */\nfunction createApplication(options) {\n    return ɵinternalCreateApplication(createProvidersConfig(options));\n}\nfunction createProvidersConfig(options) {\n    return {\n        appProviders: [\n            ...BROWSER_MODULE_PROVIDERS,\n            ...(options?.providers ?? []),\n        ],\n        platformProviders: INTERNAL_BROWSER_PLATFORM_PROVIDERS\n    };\n}\n/**\n * Returns a set of providers required to setup [Testability](api/core/Testability) for an\n * application bootstrapped using the `bootstrapApplication` function. The set of providers is\n * needed to support testing an application with Protractor (which relies on the Testability APIs\n * to be present).\n *\n * @returns An array of providers required to setup Testability for an application and make it\n *     available for testing using Protractor.\n *\n * @publicApi\n */\nfunction provideProtractorTestingSupport() {\n    // Return a copy to prevent changes to the original array in case any in-place\n    // alterations are performed to the `provideProtractorTestingSupport` call results in app\n    // code.\n    return [...TESTABILITY_PROVIDERS];\n}\nfunction initDomAdapter() {\n    BrowserDomAdapter.makeCurrent();\n}\nfunction errorHandler() {\n    return new ErrorHandler();\n}\nfunction _document() {\n    // Tell ivy about the global document\n    ɵsetDocument(document);\n    return document;\n}\nconst INTERNAL_BROWSER_PLATFORM_PROVIDERS = [\n    { provide: PLATFORM_ID, useValue: ɵPLATFORM_BROWSER_ID },\n    { provide: PLATFORM_INITIALIZER, useValue: initDomAdapter, multi: true },\n    { provide: DOCUMENT, useFactory: _document, deps: [] },\n];\n/**\n * A factory function that returns a `PlatformRef` instance associated with browser service\n * providers.\n *\n * @publicApi\n */\nconst platformBrowser = createPlatformFactory(platformCore, 'browser', INTERNAL_BROWSER_PLATFORM_PROVIDERS);\n/**\n * Internal marker to signal whether providers from the `BrowserModule` are already present in DI.\n * This is needed to avoid loading `BrowserModule` providers twice. We can't rely on the\n * `BrowserModule` presence itself, since the standalone-based bootstrap just imports\n * `BrowserModule` providers without referencing the module itself.\n */\nconst BROWSER_MODULE_PROVIDERS_MARKER = new InjectionToken((typeof ngDevMode === 'undefined' || ngDevMode) ? 'BrowserModule Providers Marker' : '');\nconst TESTABILITY_PROVIDERS = [\n    {\n        provide: ɵTESTABILITY_GETTER,\n        useClass: BrowserGetTestability,\n        deps: [],\n    },\n    {\n        provide: ɵTESTABILITY,\n        useClass: Testability,\n        deps: [NgZone, TestabilityRegistry, ɵTESTABILITY_GETTER]\n    },\n    {\n        provide: Testability, // Also provide as `Testability` for backwards-compatibility.\n        useClass: Testability,\n        deps: [NgZone, TestabilityRegistry, ɵTESTABILITY_GETTER]\n    }\n];\nconst BROWSER_MODULE_PROVIDERS = [\n    { provide: ɵINJECTOR_SCOPE, useValue: 'root' },\n    { provide: ErrorHandler, useFactory: errorHandler, deps: [] }, {\n        provide: EVENT_MANAGER_PLUGINS,\n        useClass: DomEventsPlugin,\n        multi: true,\n        deps: [DOCUMENT, NgZone, PLATFORM_ID]\n    },\n    { provide: EVENT_MANAGER_PLUGINS, useClass: KeyEventsPlugin, multi: true, deps: [DOCUMENT] },\n    DomRendererFactory2, SharedStylesHost, EventManager,\n    { provide: RendererFactory2, useExisting: DomRendererFactory2 },\n    { provide: XhrFactory, useClass: BrowserXhr, deps: [] },\n    (typeof ngDevMode === 'undefined' || ngDevMode) ?\n        { provide: BROWSER_MODULE_PROVIDERS_MARKER, useValue: true } :\n        []\n];\n/**\n * Exports required infrastructure for all Angular apps.\n * Included by default in all Angular apps created with the CLI\n * `new` command.\n * Re-exports `CommonModule` and `ApplicationModule`, making their\n * exports and providers available to all apps.\n *\n * @publicApi\n */\nclass BrowserModule {\n    constructor(providersAlreadyPresent) {\n        if ((typeof ngDevMode === 'undefined' || ngDevMode) && providersAlreadyPresent) {\n            throw new ɵRuntimeError(5100 /* RuntimeErrorCode.BROWSER_MODULE_ALREADY_LOADED */, `Providers from the \\`BrowserModule\\` have already been loaded. If you need access ` +\n                `to common directives such as NgIf and NgFor, import the \\`CommonModule\\` instead.`);\n        }\n    }\n    /**\n     * Configures a browser-based app to transition from a server-rendered app, if\n     * one is present on the page.\n     *\n     * @param params An object containing an identifier for the app to transition.\n     * The ID must match between the client and server versions of the app.\n     * @returns The reconfigured `BrowserModule` to import into the app's root `AppModule`.\n     *\n     * @deprecated Use {@link APP_ID} instead to set the application ID.\n     */\n    static withServerTransition(params) {\n        return {\n            ngModule: BrowserModule,\n            providers: [\n                { provide: APP_ID, useValue: params.appId },\n            ],\n        };\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.3.8\", ngImport: i0, type: BrowserModule, deps: [{ token: BROWSER_MODULE_PROVIDERS_MARKER, optional: true, skipSelf: true }], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"17.3.8\", ngImport: i0, type: BrowserModule, exports: [CommonModule, ApplicationModule] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"17.3.8\", ngImport: i0, type: BrowserModule, providers: [...BROWSER_MODULE_PROVIDERS, ...TESTABILITY_PROVIDERS], imports: [CommonModule, ApplicationModule] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.3.8\", ngImport: i0, type: BrowserModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    providers: [...BROWSER_MODULE_PROVIDERS, ...TESTABILITY_PROVIDERS],\n                    exports: [CommonModule, ApplicationModule],\n                }]\n        }], ctorParameters: () => [{ type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: SkipSelf\n                }, {\n                    type: Inject,\n                    args: [BROWSER_MODULE_PROVIDERS_MARKER]\n                }] }] });\n\n/**\n * A service for managing HTML `<meta>` tags.\n *\n * Properties of the `MetaDefinition` object match the attributes of the\n * HTML `<meta>` tag. These tags define document metadata that is important for\n * things like configuring a Content Security Policy, defining browser compatibility\n * and security settings, setting HTTP Headers, defining rich content for social sharing,\n * and Search Engine Optimization (SEO).\n *\n * To identify specific `<meta>` tags in a document, use an attribute selection\n * string in the format `\"tag_attribute='value string'\"`.\n * For example, an `attrSelector` value of `\"name='description'\"` matches a tag\n * whose `name` attribute has the value `\"description\"`.\n * Selectors are used with the `querySelector()` Document method,\n * in the format `meta[{attrSelector}]`.\n *\n * @see [HTML meta tag](https://developer.mozilla.org/docs/Web/HTML/Element/meta)\n * @see [Document.querySelector()](https://developer.mozilla.org/docs/Web/API/Document/querySelector)\n *\n *\n * @publicApi\n */\nclass Meta {\n    constructor(_doc) {\n        this._doc = _doc;\n        this._dom = ɵgetDOM();\n    }\n    /**\n     * Retrieves or creates a specific `<meta>` tag element in the current HTML document.\n     * In searching for an existing tag, Angular attempts to match the `name` or `property` attribute\n     * values in the provided tag definition, and verifies that all other attribute values are equal.\n     * If an existing element is found, it is returned and is not modified in any way.\n     * @param tag The definition of a `<meta>` element to match or create.\n     * @param forceCreation True to create a new element without checking whether one already exists.\n     * @returns The existing element with the same attributes and values if found,\n     * the new element if no match is found, or `null` if the tag parameter is not defined.\n     */\n    addTag(tag, forceCreation = false) {\n        if (!tag)\n            return null;\n        return this._getOrCreateElement(tag, forceCreation);\n    }\n    /**\n     * Retrieves or creates a set of `<meta>` tag elements in the current HTML document.\n     * In searching for an existing tag, Angular attempts to match the `name` or `property` attribute\n     * values in the provided tag definition, and verifies that all other attribute values are equal.\n     * @param tags An array of tag definitions to match or create.\n     * @param forceCreation True to create new elements without checking whether they already exist.\n     * @returns The matching elements if found, or the new elements.\n     */\n    addTags(tags, forceCreation = false) {\n        if (!tags)\n            return [];\n        return tags.reduce((result, tag) => {\n            if (tag) {\n                result.push(this._getOrCreateElement(tag, forceCreation));\n            }\n            return result;\n        }, []);\n    }\n    /**\n     * Retrieves a `<meta>` tag element in the current HTML document.\n     * @param attrSelector The tag attribute and value to match against, in the format\n     * `\"tag_attribute='value string'\"`.\n     * @returns The matching element, if any.\n     */\n    getTag(attrSelector) {\n        if (!attrSelector)\n            return null;\n        return this._doc.querySelector(`meta[${attrSelector}]`) || null;\n    }\n    /**\n     * Retrieves a set of `<meta>` tag elements in the current HTML document.\n     * @param attrSelector The tag attribute and value to match against, in the format\n     * `\"tag_attribute='value string'\"`.\n     * @returns The matching elements, if any.\n     */\n    getTags(attrSelector) {\n        if (!attrSelector)\n            return [];\n        const list /*NodeList*/ = this._doc.querySelectorAll(`meta[${attrSelector}]`);\n        return list ? [].slice.call(list) : [];\n    }\n    /**\n     * Modifies an existing `<meta>` tag element in the current HTML document.\n     * @param tag The tag description with which to replace the existing tag content.\n     * @param selector A tag attribute and value to match against, to identify\n     * an existing tag. A string in the format `\"tag_attribute=`value string`\"`.\n     * If not supplied, matches a tag with the same `name` or `property` attribute value as the\n     * replacement tag.\n     * @return The modified element.\n     */\n    updateTag(tag, selector) {\n        if (!tag)\n            return null;\n        selector = selector || this._parseSelector(tag);\n        const meta = this.getTag(selector);\n        if (meta) {\n            return this._setMetaElementAttributes(tag, meta);\n        }\n        return this._getOrCreateElement(tag, true);\n    }\n    /**\n     * Removes an existing `<meta>` tag element from the current HTML document.\n     * @param attrSelector A tag attribute and value to match against, to identify\n     * an existing tag. A string in the format `\"tag_attribute=`value string`\"`.\n     */\n    removeTag(attrSelector) {\n        this.removeTagElement(this.getTag(attrSelector));\n    }\n    /**\n     * Removes an existing `<meta>` tag element from the current HTML document.\n     * @param meta The tag definition to match against to identify an existing tag.\n     */\n    removeTagElement(meta) {\n        if (meta) {\n            this._dom.remove(meta);\n        }\n    }\n    _getOrCreateElement(meta, forceCreation = false) {\n        if (!forceCreation) {\n            const selector = this._parseSelector(meta);\n            // It's allowed to have multiple elements with the same name so it's not enough to\n            // just check that element with the same name already present on the page. We also need to\n            // check if element has tag attributes\n            const elem = this.getTags(selector).filter(elem => this._containsAttributes(meta, elem))[0];\n            if (elem !== undefined)\n                return elem;\n        }\n        const element = this._dom.createElement('meta');\n        this._setMetaElementAttributes(meta, element);\n        const head = this._doc.getElementsByTagName('head')[0];\n        head.appendChild(element);\n        return element;\n    }\n    _setMetaElementAttributes(tag, el) {\n        Object.keys(tag).forEach((prop) => el.setAttribute(this._getMetaKeyMap(prop), tag[prop]));\n        return el;\n    }\n    _parseSelector(tag) {\n        const attr = tag.name ? 'name' : 'property';\n        return `${attr}=\"${tag[attr]}\"`;\n    }\n    _containsAttributes(tag, elem) {\n        return Object.keys(tag).every((key) => elem.getAttribute(this._getMetaKeyMap(key)) === tag[key]);\n    }\n    _getMetaKeyMap(prop) {\n        return META_KEYS_MAP[prop] || prop;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.3.8\", ngImport: i0, type: Meta, deps: [{ token: DOCUMENT }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"17.3.8\", ngImport: i0, type: Meta, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.3.8\", ngImport: i0, type: Meta, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: () => [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }] });\n/**\n * Mapping for MetaDefinition properties with their correct meta attribute names\n */\nconst META_KEYS_MAP = {\n    httpEquiv: 'http-equiv'\n};\n\n/**\n * A service that can be used to get and set the title of a current HTML document.\n *\n * Since an Angular application can't be bootstrapped on the entire HTML document (`<html>` tag)\n * it is not possible to bind to the `text` property of the `HTMLTitleElement` elements\n * (representing the `<title>` tag). Instead, this service can be used to set and get the current\n * title value.\n *\n * @publicApi\n */\nclass Title {\n    constructor(_doc) {\n        this._doc = _doc;\n    }\n    /**\n     * Get the title of the current HTML document.\n     */\n    getTitle() {\n        return this._doc.title;\n    }\n    /**\n     * Set the title of the current HTML document.\n     * @param newTitle\n     */\n    setTitle(newTitle) {\n        this._doc.title = newTitle || '';\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.3.8\", ngImport: i0, type: Title, deps: [{ token: DOCUMENT }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"17.3.8\", ngImport: i0, type: Title, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.3.8\", ngImport: i0, type: Title, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: () => [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }] });\n\n/**\n * Exports the value under a given `name` in the global property `ng`. For example `ng.probe` if\n * `name` is `'probe'`.\n * @param name Name under which it will be exported. Keep in mind this will be a property of the\n * global `ng` object.\n * @param value The value to export.\n */\nfunction exportNgVar(name, value) {\n    if (typeof COMPILED === 'undefined' || !COMPILED) {\n        // Note: we can't export `ng` when using closure enhanced optimization as:\n        // - closure declares globals itself for minified names, which sometimes clobber our `ng` global\n        // - we can't declare a closure extern as the namespace `ng` is already used within Google\n        //   for typings for angularJS (via `goog.provide('ng....')`).\n        const ng = ɵglobal['ng'] = ɵglobal['ng'] || {};\n        ng[name] = value;\n    }\n}\n\nclass ChangeDetectionPerfRecord {\n    constructor(msPerTick, numTicks) {\n        this.msPerTick = msPerTick;\n        this.numTicks = numTicks;\n    }\n}\n/**\n * Entry point for all Angular profiling-related debug tools. This object\n * corresponds to the `ng.profiler` in the dev console.\n */\nclass AngularProfiler {\n    constructor(ref) {\n        this.appRef = ref.injector.get(ApplicationRef);\n    }\n    // tslint:disable:no-console\n    /**\n     * Exercises change detection in a loop and then prints the average amount of\n     * time in milliseconds how long a single round of change detection takes for\n     * the current state of the UI. It runs a minimum of 5 rounds for a minimum\n     * of 500 milliseconds.\n     *\n     * Optionally, a user may pass a `config` parameter containing a map of\n     * options. Supported options are:\n     *\n     * `record` (boolean) - causes the profiler to record a CPU profile while\n     * it exercises the change detector. Example:\n     *\n     * ```\n     * ng.profiler.timeChangeDetection({record: true})\n     * ```\n     */\n    timeChangeDetection(config) {\n        const record = config && config['record'];\n        const profileName = 'Change Detection';\n        // Profiler is not available in Android browsers without dev tools opened\n        if (record && 'profile' in console && typeof console.profile === 'function') {\n            console.profile(profileName);\n        }\n        const start = performance.now();\n        let numTicks = 0;\n        while (numTicks < 5 || (performance.now() - start) < 500) {\n            this.appRef.tick();\n            numTicks++;\n        }\n        const end = performance.now();\n        if (record && 'profileEnd' in console && typeof console.profileEnd === 'function') {\n            console.profileEnd(profileName);\n        }\n        const msPerTick = (end - start) / numTicks;\n        console.log(`ran ${numTicks} change detection cycles`);\n        console.log(`${msPerTick.toFixed(2)} ms per check`);\n        return new ChangeDetectionPerfRecord(msPerTick, numTicks);\n    }\n}\n\nconst PROFILER_GLOBAL_NAME = 'profiler';\n/**\n * Enabled Angular debug tools that are accessible via your browser's\n * developer console.\n *\n * Usage:\n *\n * 1. Open developer console (e.g. in Chrome Ctrl + Shift + j)\n * 1. Type `ng.` (usually the console will show auto-complete suggestion)\n * 1. Try the change detection profiler `ng.profiler.timeChangeDetection()`\n *    then hit Enter.\n *\n * @publicApi\n */\nfunction enableDebugTools(ref) {\n    exportNgVar(PROFILER_GLOBAL_NAME, new AngularProfiler(ref));\n    return ref;\n}\n/**\n * Disables Angular tools.\n *\n * @publicApi\n */\nfunction disableDebugTools() {\n    exportNgVar(PROFILER_GLOBAL_NAME, null);\n}\n\n/**\n * Predicates for use with {@link DebugElement}'s query functions.\n *\n * @publicApi\n */\nclass By {\n    /**\n     * Match all nodes.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example platform-browser/dom/debug/ts/by/by.ts region='by_all'}\n     */\n    static all() {\n        return () => true;\n    }\n    /**\n     * Match elements by the given CSS selector.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example platform-browser/dom/debug/ts/by/by.ts region='by_css'}\n     */\n    static css(selector) {\n        return (debugElement) => {\n            return debugElement.nativeElement != null ?\n                elementMatches(debugElement.nativeElement, selector) :\n                false;\n        };\n    }\n    /**\n     * Match nodes that have the given directive present.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example platform-browser/dom/debug/ts/by/by.ts region='by_directive'}\n     */\n    static directive(type) {\n        return (debugNode) => debugNode.providerTokens.indexOf(type) !== -1;\n    }\n}\nfunction elementMatches(n, selector) {\n    if (ɵgetDOM().isElementNode(n)) {\n        return n.matches && n.matches(selector) ||\n            n.msMatchesSelector && n.msMatchesSelector(selector) ||\n            n.webkitMatchesSelector && n.webkitMatchesSelector(selector);\n    }\n    return false;\n}\n\n/**\n * Supported HammerJS recognizer event names.\n */\nconst EVENT_NAMES = {\n    // pan\n    'pan': true,\n    'panstart': true,\n    'panmove': true,\n    'panend': true,\n    'pancancel': true,\n    'panleft': true,\n    'panright': true,\n    'panup': true,\n    'pandown': true,\n    // pinch\n    'pinch': true,\n    'pinchstart': true,\n    'pinchmove': true,\n    'pinchend': true,\n    'pinchcancel': true,\n    'pinchin': true,\n    'pinchout': true,\n    // press\n    'press': true,\n    'pressup': true,\n    // rotate\n    'rotate': true,\n    'rotatestart': true,\n    'rotatemove': true,\n    'rotateend': true,\n    'rotatecancel': true,\n    // swipe\n    'swipe': true,\n    'swipeleft': true,\n    'swiperight': true,\n    'swipeup': true,\n    'swipedown': true,\n    // tap\n    'tap': true,\n    'doubletap': true\n};\n/**\n * DI token for providing [HammerJS](https://hammerjs.github.io/) support to Angular.\n * @see {@link HammerGestureConfig}\n *\n * @ngModule HammerModule\n * @publicApi\n */\nconst HAMMER_GESTURE_CONFIG = new InjectionToken('HammerGestureConfig');\n/**\n * Injection token used to provide a {@link HammerLoader} to Angular.\n *\n * @publicApi\n */\nconst HAMMER_LOADER = new InjectionToken('HammerLoader');\n/**\n * An injectable [HammerJS Manager](https://hammerjs.github.io/api/#hammermanager)\n * for gesture recognition. Configures specific event recognition.\n * @publicApi\n */\nclass HammerGestureConfig {\n    constructor() {\n        /**\n         * A set of supported event names for gestures to be used in Angular.\n         * Angular supports all built-in recognizers, as listed in\n         * [HammerJS documentation](https://hammerjs.github.io/).\n         */\n        this.events = [];\n        /**\n         * Maps gesture event names to a set of configuration options\n         * that specify overrides to the default values for specific properties.\n         *\n         * The key is a supported event name to be configured,\n         * and the options object contains a set of properties, with override values\n         * to be applied to the named recognizer event.\n         * For example, to disable recognition of the rotate event, specify\n         *  `{\"rotate\": {\"enable\": false}}`.\n         *\n         * Properties that are not present take the HammerJS default values.\n         * For information about which properties are supported for which events,\n         * and their allowed and default values, see\n         * [HammerJS documentation](https://hammerjs.github.io/).\n         *\n         */\n        this.overrides = {};\n    }\n    /**\n     * Creates a [HammerJS Manager](https://hammerjs.github.io/api/#hammermanager)\n     * and attaches it to a given HTML element.\n     * @param element The element that will recognize gestures.\n     * @returns A HammerJS event-manager object.\n     */\n    buildHammer(element) {\n        const mc = new Hammer(element, this.options);\n        mc.get('pinch').set({ enable: true });\n        mc.get('rotate').set({ enable: true });\n        for (const eventName in this.overrides) {\n            mc.get(eventName).set(this.overrides[eventName]);\n        }\n        return mc;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.3.8\", ngImport: i0, type: HammerGestureConfig, deps: [], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"17.3.8\", ngImport: i0, type: HammerGestureConfig }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.3.8\", ngImport: i0, type: HammerGestureConfig, decorators: [{\n            type: Injectable\n        }] });\n/**\n * Event plugin that adds Hammer support to an application.\n *\n * @ngModule HammerModule\n */\nclass HammerGesturesPlugin extends EventManagerPlugin {\n    constructor(doc, _config, console, loader) {\n        super(doc);\n        this._config = _config;\n        this.console = console;\n        this.loader = loader;\n        this._loaderPromise = null;\n    }\n    supports(eventName) {\n        if (!EVENT_NAMES.hasOwnProperty(eventName.toLowerCase()) && !this.isCustomEvent(eventName)) {\n            return false;\n        }\n        if (!window.Hammer && !this.loader) {\n            if (typeof ngDevMode === 'undefined' || ngDevMode) {\n                this.console.warn(`The \"${eventName}\" event cannot be bound because Hammer.JS is not ` +\n                    `loaded and no custom loader has been specified.`);\n            }\n            return false;\n        }\n        return true;\n    }\n    addEventListener(element, eventName, handler) {\n        const zone = this.manager.getZone();\n        eventName = eventName.toLowerCase();\n        // If Hammer is not present but a loader is specified, we defer adding the event listener\n        // until Hammer is loaded.\n        if (!window.Hammer && this.loader) {\n            this._loaderPromise = this._loaderPromise || zone.runOutsideAngular(() => this.loader());\n            // This `addEventListener` method returns a function to remove the added listener.\n            // Until Hammer is loaded, the returned function needs to *cancel* the registration rather\n            // than remove anything.\n            let cancelRegistration = false;\n            let deregister = () => {\n                cancelRegistration = true;\n            };\n            zone.runOutsideAngular(() => this._loaderPromise\n                .then(() => {\n                // If Hammer isn't actually loaded when the custom loader resolves, give up.\n                if (!window.Hammer) {\n                    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n                        this.console.warn(`The custom HAMMER_LOADER completed, but Hammer.JS is not present.`);\n                    }\n                    deregister = () => { };\n                    return;\n                }\n                if (!cancelRegistration) {\n                    // Now that Hammer is loaded and the listener is being loaded for real,\n                    // the deregistration function changes from canceling registration to\n                    // removal.\n                    deregister = this.addEventListener(element, eventName, handler);\n                }\n            })\n                .catch(() => {\n                if (typeof ngDevMode === 'undefined' || ngDevMode) {\n                    this.console.warn(`The \"${eventName}\" event cannot be bound because the custom ` +\n                        `Hammer.JS loader failed.`);\n                }\n                deregister = () => { };\n            }));\n            // Return a function that *executes* `deregister` (and not `deregister` itself) so that we\n            // can change the behavior of `deregister` once the listener is added. Using a closure in\n            // this way allows us to avoid any additional data structures to track listener removal.\n            return () => {\n                deregister();\n            };\n        }\n        return zone.runOutsideAngular(() => {\n            // Creating the manager bind events, must be done outside of angular\n            const mc = this._config.buildHammer(element);\n            const callback = function (eventObj) {\n                zone.runGuarded(function () {\n                    handler(eventObj);\n                });\n            };\n            mc.on(eventName, callback);\n            return () => {\n                mc.off(eventName, callback);\n                // destroy mc to prevent memory leak\n                if (typeof mc.destroy === 'function') {\n                    mc.destroy();\n                }\n            };\n        });\n    }\n    isCustomEvent(eventName) {\n        return this._config.events.indexOf(eventName) > -1;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.3.8\", ngImport: i0, type: HammerGesturesPlugin, deps: [{ token: DOCUMENT }, { token: HAMMER_GESTURE_CONFIG }, { token: i0.ɵConsole }, { token: HAMMER_LOADER, optional: true }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"17.3.8\", ngImport: i0, type: HammerGesturesPlugin }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.3.8\", ngImport: i0, type: HammerGesturesPlugin, decorators: [{\n            type: Injectable\n        }], ctorParameters: () => [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }, { type: HammerGestureConfig, decorators: [{\n                    type: Inject,\n                    args: [HAMMER_GESTURE_CONFIG]\n                }] }, { type: i0.ɵConsole }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [HAMMER_LOADER]\n                }] }] });\n/**\n * Adds support for HammerJS.\n *\n * Import this module at the root of your application so that Angular can work with\n * HammerJS to detect gesture events.\n *\n * Note that applications still need to include the HammerJS script itself. This module\n * simply sets up the coordination layer between HammerJS and Angular's `EventManager`.\n *\n * @publicApi\n */\nclass HammerModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.3.8\", ngImport: i0, type: HammerModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"17.3.8\", ngImport: i0, type: HammerModule }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"17.3.8\", ngImport: i0, type: HammerModule, providers: [\n            {\n                provide: EVENT_MANAGER_PLUGINS,\n                useClass: HammerGesturesPlugin,\n                multi: true,\n                deps: [DOCUMENT, HAMMER_GESTURE_CONFIG, ɵConsole, [new Optional(), HAMMER_LOADER]]\n            },\n            { provide: HAMMER_GESTURE_CONFIG, useClass: HammerGestureConfig, deps: [] },\n        ] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.3.8\", ngImport: i0, type: HammerModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    providers: [\n                        {\n                            provide: EVENT_MANAGER_PLUGINS,\n                            useClass: HammerGesturesPlugin,\n                            multi: true,\n                            deps: [DOCUMENT, HAMMER_GESTURE_CONFIG, ɵConsole, [new Optional(), HAMMER_LOADER]]\n                        },\n                        { provide: HAMMER_GESTURE_CONFIG, useClass: HammerGestureConfig, deps: [] },\n                    ]\n                }]\n        }] });\n\n/**\n * DomSanitizer helps preventing Cross Site Scripting Security bugs (XSS) by sanitizing\n * values to be safe to use in the different DOM contexts.\n *\n * For example, when binding a URL in an `<a [href]=\"someValue\">` hyperlink, `someValue` will be\n * sanitized so that an attacker cannot inject e.g. a `javascript:` URL that would execute code on\n * the website.\n *\n * In specific situations, it might be necessary to disable sanitization, for example if the\n * application genuinely needs to produce a `javascript:` style link with a dynamic value in it.\n * Users can bypass security by constructing a value with one of the `bypassSecurityTrust...`\n * methods, and then binding to that value from the template.\n *\n * These situations should be very rare, and extraordinary care must be taken to avoid creating a\n * Cross Site Scripting (XSS) security bug!\n *\n * When using `bypassSecurityTrust...`, make sure to call the method as early as possible and as\n * close as possible to the source of the value, to make it easy to verify no security bug is\n * created by its use.\n *\n * It is not required (and not recommended) to bypass security if the value is safe, e.g. a URL that\n * does not start with a suspicious protocol, or an HTML snippet that does not contain dangerous\n * code. The sanitizer leaves safe values intact.\n *\n * @security Calling any of the `bypassSecurityTrust...` APIs disables Angular's built-in\n * sanitization for the value passed in. Carefully check and audit all values and code paths going\n * into this call. Make sure any user data is appropriately escaped for this security context.\n * For more detail, see the [Security Guide](https://g.co/ng/security).\n *\n * @publicApi\n */\nclass DomSanitizer {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.3.8\", ngImport: i0, type: DomSanitizer, deps: [], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"17.3.8\", ngImport: i0, type: DomSanitizer, providedIn: 'root', useExisting: i0.forwardRef(() => DomSanitizerImpl) }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.3.8\", ngImport: i0, type: DomSanitizer, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root', useExisting: forwardRef(() => DomSanitizerImpl) }]\n        }] });\nclass DomSanitizerImpl extends DomSanitizer {\n    constructor(_doc) {\n        super();\n        this._doc = _doc;\n    }\n    sanitize(ctx, value) {\n        if (value == null)\n            return null;\n        switch (ctx) {\n            case SecurityContext.NONE:\n                return value;\n            case SecurityContext.HTML:\n                if (ɵallowSanitizationBypassAndThrow(value, \"HTML\" /* BypassType.Html */)) {\n                    return ɵunwrapSafeValue(value);\n                }\n                return ɵ_sanitizeHtml(this._doc, String(value)).toString();\n            case SecurityContext.STYLE:\n                if (ɵallowSanitizationBypassAndThrow(value, \"Style\" /* BypassType.Style */)) {\n                    return ɵunwrapSafeValue(value);\n                }\n                return value;\n            case SecurityContext.SCRIPT:\n                if (ɵallowSanitizationBypassAndThrow(value, \"Script\" /* BypassType.Script */)) {\n                    return ɵunwrapSafeValue(value);\n                }\n                throw new ɵRuntimeError(5200 /* RuntimeErrorCode.SANITIZATION_UNSAFE_SCRIPT */, (typeof ngDevMode === 'undefined' || ngDevMode) &&\n                    'unsafe value used in a script context');\n            case SecurityContext.URL:\n                if (ɵallowSanitizationBypassAndThrow(value, \"URL\" /* BypassType.Url */)) {\n                    return ɵunwrapSafeValue(value);\n                }\n                return ɵ_sanitizeUrl(String(value));\n            case SecurityContext.RESOURCE_URL:\n                if (ɵallowSanitizationBypassAndThrow(value, \"ResourceURL\" /* BypassType.ResourceUrl */)) {\n                    return ɵunwrapSafeValue(value);\n                }\n                throw new ɵRuntimeError(5201 /* RuntimeErrorCode.SANITIZATION_UNSAFE_RESOURCE_URL */, (typeof ngDevMode === 'undefined' || ngDevMode) &&\n                    `unsafe value used in a resource URL context (see ${ɵXSS_SECURITY_URL})`);\n            default:\n                throw new ɵRuntimeError(5202 /* RuntimeErrorCode.SANITIZATION_UNEXPECTED_CTX */, (typeof ngDevMode === 'undefined' || ngDevMode) &&\n                    `Unexpected SecurityContext ${ctx} (see ${ɵXSS_SECURITY_URL})`);\n        }\n    }\n    bypassSecurityTrustHtml(value) {\n        return ɵbypassSanitizationTrustHtml(value);\n    }\n    bypassSecurityTrustStyle(value) {\n        return ɵbypassSanitizationTrustStyle(value);\n    }\n    bypassSecurityTrustScript(value) {\n        return ɵbypassSanitizationTrustScript(value);\n    }\n    bypassSecurityTrustUrl(value) {\n        return ɵbypassSanitizationTrustUrl(value);\n    }\n    bypassSecurityTrustResourceUrl(value) {\n        return ɵbypassSanitizationTrustResourceUrl(value);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.3.8\", ngImport: i0, type: DomSanitizerImpl, deps: [{ token: DOCUMENT }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"17.3.8\", ngImport: i0, type: DomSanitizerImpl, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.3.8\", ngImport: i0, type: DomSanitizerImpl, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: () => [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }] });\n\n/**\n * The list of features as an enum to uniquely type each `HydrationFeature`.\n * @see {@link HydrationFeature}\n *\n * @publicApi\n */\nvar HydrationFeatureKind;\n(function (HydrationFeatureKind) {\n    HydrationFeatureKind[HydrationFeatureKind[\"NoHttpTransferCache\"] = 0] = \"NoHttpTransferCache\";\n    HydrationFeatureKind[HydrationFeatureKind[\"HttpTransferCacheOptions\"] = 1] = \"HttpTransferCacheOptions\";\n})(HydrationFeatureKind || (HydrationFeatureKind = {}));\n/**\n * Helper function to create an object that represents a Hydration feature.\n */\nfunction hydrationFeature(ɵkind, ɵproviders = [], ɵoptions = {}) {\n    return { ɵkind, ɵproviders };\n}\n/**\n * Disables HTTP transfer cache. Effectively causes HTTP requests to be performed twice: once on the\n * server and other one on the browser.\n *\n * @publicApi\n */\nfunction withNoHttpTransferCache() {\n    // This feature has no providers and acts as a flag that turns off\n    // HTTP transfer cache (which otherwise is turned on by default).\n    return hydrationFeature(HydrationFeatureKind.NoHttpTransferCache);\n}\n/**\n * The function accepts a an object, which allows to configure cache parameters,\n * such as which headers should be included (no headers are included by default),\n * wether POST requests should be cached or a callback function to determine if a\n * particular request should be cached.\n *\n * @publicApi\n */\nfunction withHttpTransferCacheOptions(options) {\n    // This feature has no providers and acts as a flag to pass options to the HTTP transfer cache.\n    return hydrationFeature(HydrationFeatureKind.HttpTransferCacheOptions, ɵwithHttpTransferCache(options));\n}\n/**\n * Returns an `ENVIRONMENT_INITIALIZER` token setup with a function\n * that verifies whether compatible ZoneJS was used in an application\n * and logs a warning in a console if it's not the case.\n */\nfunction provideZoneJsCompatibilityDetector() {\n    return [{\n            provide: ENVIRONMENT_INITIALIZER,\n            useValue: () => {\n                const ngZone = inject(NgZone);\n                // Checking `ngZone instanceof NgZone` would be insufficient here,\n                // because custom implementations might use NgZone as a base class.\n                if (ngZone.constructor !== NgZone) {\n                    const console = inject(ɵConsole);\n                    const message = ɵformatRuntimeError(-5000 /* RuntimeErrorCode.UNSUPPORTED_ZONEJS_INSTANCE */, 'Angular detected that hydration was enabled for an application ' +\n                        'that uses a custom or a noop Zone.js implementation. ' +\n                        'This is not yet a fully supported configuration.');\n                    // tslint:disable-next-line:no-console\n                    console.warn(message);\n                }\n            },\n            multi: true,\n        }];\n}\n/**\n * Sets up providers necessary to enable hydration functionality for the application.\n *\n * By default, the function enables the recommended set of features for the optimal\n * performance for most of the applications. It includes the following features:\n *\n * * Reconciling DOM hydration. Learn more about it [here](guide/hydration).\n * * [`HttpClient`](api/common/http/HttpClient) response caching while running on the server and\n * transferring this cache to the client to avoid extra HTTP requests. Learn more about data caching\n * [here](/guide/ssr#caching-data-when-using-httpclient).\n *\n * These functions allow you to disable some of the default features or configure features\n * * {@link withNoHttpTransferCache} to disable HTTP transfer cache\n * * {@link withHttpTransferCacheOptions} to configure some HTTP transfer cache options\n *\n * @usageNotes\n *\n * Basic example of how you can enable hydration in your application when\n * `bootstrapApplication` function is used:\n * ```\n * bootstrapApplication(AppComponent, {\n *   providers: [provideClientHydration()]\n * });\n * ```\n *\n * Alternatively if you are using NgModules, you would add `provideClientHydration`\n * to your root app module's provider list.\n * ```\n * @NgModule({\n *   declarations: [RootCmp],\n *   bootstrap: [RootCmp],\n *   providers: [provideClientHydration()],\n * })\n * export class AppModule {}\n * ```\n *\n * @see {@link withNoHttpTransferCache}\n * @see {@link withHttpTransferCacheOptions}\n *\n * @param features Optional features to configure additional router behaviors.\n * @returns A set of providers to enable hydration.\n *\n * @publicApi\n */\nfunction provideClientHydration(...features) {\n    const providers = [];\n    const featuresKind = new Set();\n    const hasHttpTransferCacheOptions = featuresKind.has(HydrationFeatureKind.HttpTransferCacheOptions);\n    for (const { ɵproviders, ɵkind } of features) {\n        featuresKind.add(ɵkind);\n        if (ɵproviders.length) {\n            providers.push(ɵproviders);\n        }\n    }\n    if (typeof ngDevMode !== 'undefined' && ngDevMode &&\n        featuresKind.has(HydrationFeatureKind.NoHttpTransferCache) && hasHttpTransferCacheOptions) {\n        // TODO: Make this a runtime error\n        throw new Error('Configuration error: found both withHttpTransferCacheOptions() and withNoHttpTransferCache() in the same call to provideClientHydration(), which is a contradiction.');\n    }\n    return makeEnvironmentProviders([\n        (typeof ngDevMode !== 'undefined' && ngDevMode) ? provideZoneJsCompatibilityDetector() : [],\n        ɵwithDomHydration(),\n        ((featuresKind.has(HydrationFeatureKind.NoHttpTransferCache) || hasHttpTransferCacheOptions) ?\n            [] :\n            ɵwithHttpTransferCache({})),\n        providers,\n    ]);\n}\n\n/**\n * @module\n * @description\n * Entry point for all public APIs of the platform-browser package.\n */\n/**\n * @publicApi\n */\nconst VERSION = new Version('17.3.8');\n\n// Re-export TransferState to the public API of the `platform-browser` for backwards-compatibility.\n/**\n * Create a `StateKey<T>` that can be used to store value of type T with `TransferState`.\n *\n * Example:\n *\n * ```\n * const COUNTER_KEY = makeStateKey<number>('counter');\n * let value = 10;\n *\n * transferState.set(COUNTER_KEY, value);\n * ```\n *\n * @publicApi\n * @deprecated `makeStateKey` has moved, please import `makeStateKey` from `@angular/core` instead.\n */\n// The below is a workaround to add a deprecated message.\nconst makeStateKey = makeStateKey$1;\n// The below type is needed for G3 due to JSC_CONFORMANCE_VIOLATION.\nconst TransferState = TransferState$1;\n\n/**\n * @module\n * @description\n * Entry point for all public APIs of this package.\n */\n// This file only reexports content of the `src` folder. Keep it that way.\n\n// This file is not used to build this module. It is only used during editing\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { BrowserModule, By, DomSanitizer, EVENT_MANAGER_PLUGINS, EventManager, EventManagerPlugin, HAMMER_GESTURE_CONFIG, HAMMER_LOADER, HammerGestureConfig, HammerModule, HydrationFeatureKind, Meta, REMOVE_STYLES_ON_COMPONENT_DESTROY, Title, TransferState, VERSION, bootstrapApplication, createApplication, disableDebugTools, enableDebugTools, makeStateKey, platformBrowser, provideClientHydration, provideProtractorTestingSupport, withHttpTransferCacheOptions, withNoHttpTransferCache, BrowserDomAdapter as ɵBrowserDomAdapter, BrowserGetTestability as ɵBrowserGetTestability, DomEventsPlugin as ɵDomEventsPlugin, DomRendererFactory2 as ɵDomRendererFactory2, DomSanitizerImpl as ɵDomSanitizerImpl, HammerGesturesPlugin as ɵHammerGesturesPlugin, INTERNAL_BROWSER_PLATFORM_PROVIDERS as ɵINTERNAL_BROWSER_PLATFORM_PROVIDERS, KeyEventsPlugin as ɵKeyEventsPlugin, SharedStylesHost as ɵSharedStylesHost, initDomAdapter as ɵinitDomAdapter };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}