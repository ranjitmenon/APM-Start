{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { ProductService } from './product.service';\nimport { map, tap } from 'rxjs';\nlet ProductListComponent = class ProductListComponent {\n  get listFilter() {\n    return this._listFiter;\n  }\n\n  set listFilter(value) {\n    this.filteredProducts$ = this.performFilter(value);\n    console.log('In setter:', value);\n  }\n\n  constructor(productService) {\n    this.productService = productService;\n    this.pageTitle = 'Product List';\n    this.imageWidth = 50;\n    this.imageMargin = 2;\n    this.showImage = false; //filteredProducts: IProduct[] = [];\n\n    this.errorMessage = '';\n    this._listFiter = '';\n  }\n\n  toggleImage() {\n    this.showImage = !this.showImage;\n  }\n\n  ngOnInit() {\n    //  this.sub =  this.productService.getProducts().subscribe({\n    //     next: products=> {\n    //       this.products = products;\n    //       this.filteredProducts = this.products;\n    //     },\n    //     error: err => this.errorMessage = err\n    //   });\n    this.products$ = this.productService.getProducts();\n    this.products$.pipe(map(x => x), tap(x => console.log(`The value of product$ is ${x}`)));\n    this.filteredProducts$ = this.products$; // this.filteredProducts$ .pipe(\n    //   map(x=> x),\n    //   tap(x=> console.log(`The value of filteredProducts$ is ${x}`)))\n  }\n\n  onRatingClicked(mesage) {\n    this.pageTitle = 'Product List: ' + mesage;\n  }\n\n  performFilter(filterBy) {\n    filterBy = filterBy.toLocaleLowerCase();\n    return this.products$?.pipe(map(products => products.filter(product => product.productName.toLocaleLowerCase().includes(filterBy))));\n  }\n\n};\nProductListComponent = __decorate([Component({\n  templateUrl: './product-list.component.html',\n  styleUrl: './product-list.component.css',\n  providers: [ProductService]\n})], ProductListComponent);\nexport { ProductListComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAT,QAAkC,eAAlC;AAEA,SAASC,cAAT,QAA+B,mBAA/B;AACA,SAAmCC,GAAnC,EAAwCC,GAAxC,QAAmD,MAAnD;AAOO,IAAMC,oBAAoB,GAA1B,MAAMA,oBAAN,CAA0B;EAUjB,IAAVC,UAAU;IACZ,OAAO,KAAKC,UAAZ;EACD;;EAEa,IAAVD,UAAU,CAACE,KAAD,EAAc;IAC1B,KAAKC,iBAAL,GAAyB,KAAKC,aAAL,CAAmBF,KAAnB,CAAzB;IACAG,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BJ,KAA1B;EACD;;EAEDK,YAAoBC,cAApB,EAAkD;IAA9B;IAlBpB,iBAAoB,cAApB;IACA,kBAAqB,EAArB;IACA,mBAAsB,CAAtB;IACA,iBAAqB,KAArB,CAekD,CAdlD;;IACA,oBAAuB,EAAvB;IACQ,kBAAqB,EAArB;EAcP;;EAMDC,WAAW;IACT,KAAKC,SAAL,GAAiB,CAAC,KAAKA,SAAvB;EACD;;EAEDC,QAAQ;IACR;IACA;IACA;IACA;IACA;IACA;IACA;IAEA,KAAKC,SAAL,GAAiB,KAAKJ,cAAL,CAAoBK,WAApB,EAAjB;IACA,KAAKD,SAAL,CAAgBE,IAAhB,CACEjB,GAAG,CAACkB,CAAC,IAAGA,CAAL,CADL,EAEEjB,GAAG,CAACiB,CAAC,IAAGV,OAAO,CAACC,GAAR,CAAY,4BAA4BS,CAAC,EAAzC,CAAL,CAFL;IAIA,KAAKZ,iBAAL,GAAyB,KAAKS,SAA9B,CAdQ,CAgBR;IACA;IACA;EACC;;EAEDI,eAAe,CAACC,MAAD,EAAe;IAC5B,KAAKC,SAAL,GAAiB,mBAAmBD,MAApC;EACD;;EAEDb,aAAa,CAACe,QAAD,EAAiB;IAC5BA,QAAQ,GAAGA,QAAQ,CAACC,iBAAT,EAAX;IACA,OAAO,KAAKR,SAAL,EAAgBE,IAAhB,CAAqBjB,GAAG,CAACwB,QAAQ,IAAIA,QAAQ,CAACC,MAAT,CAAiBC,OAAD,IAC1DA,OAAO,CAACC,WAAR,CAAoBJ,iBAApB,GAAwCK,QAAxC,CAAiDN,QAAjD,CAD0C,CAAb,CAAxB,CAAP;EAED;;AA5D8B,CAA1B;AAAMpB,oBAAoB,eALhCJ,SAAS,CAAC;EACT+B,WAAW,EAAE,+BADJ;EAETC,QAAQ,EAAE,8BAFD;EAGTC,SAAS,EAAE,CAAChC,cAAD;AAHF,CAAD,CAKuB,GAApBG,oBAAoB,CAApB","names":["Component","ProductService","map","tap","ProductListComponent","listFilter","_listFiter","value","filteredProducts$","performFilter","console","log","constructor","productService","toggleImage","showImage","ngOnInit","products$","getProducts","pipe","x","onRatingClicked","mesage","pageTitle","filterBy","toLocaleLowerCase","products","filter","product","productName","includes","templateUrl","styleUrl","providers"],"sourceRoot":"","sources":["/home/ranjitmenon/APM-Start/APM-Start/src/app/product/product-list.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { IProduct } from './product';\r\nimport { ProductService } from './product.service';\r\nimport { Observable, Subscription, map, tap } from 'rxjs';\r\n\r\n@Component({\r\n  templateUrl: './product-list.component.html',\r\n  styleUrl: './product-list.component.css',\r\n  providers: [ProductService]\r\n})\r\nexport class ProductListComponent implements OnInit {\r\n  pageTitle: string = 'Product List';\r\n  imageWidth: number = 50;\r\n  imageMargin: number = 2;\r\n  showImage: boolean = false;\r\n  //filteredProducts: IProduct[] = [];\r\n  errorMessage: string = '';\r\n  private _listFiter: string = '';\r\n  sub!: Subscription;\r\n\r\n  get listFilter(): string {\r\n    return this._listFiter;\r\n  }\r\n\r\n  set listFilter(value: string) {\r\n    this.filteredProducts$ = this.performFilter(value);\r\n    console.log('In setter:', value);\r\n  }\r\n\r\n  constructor(private productService: ProductService) {\r\n\r\n  }\r\n\r\n  //products: IProduct[] = [];\r\n products$!: Observable<IProduct[]>\r\n filteredProducts$!: Observable<IProduct[]> ;\r\n\r\n  toggleImage(): void {\r\n    this.showImage = !this.showImage;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  //  this.sub =  this.productService.getProducts().subscribe({\r\n  //     next: products=> {\r\n  //       this.products = products;\r\n  //       this.filteredProducts = this.products;\r\n  //     },\r\n  //     error: err => this.errorMessage = err\r\n  //   });\r\n\r\n  this.products$ = this.productService.getProducts();\r\n  this.products$ .pipe(\r\n    map(x=> x),\r\n    tap(x=> console.log(`The value of product$ is ${x}`))\r\n  )\r\n  this.filteredProducts$ = this.products$;\r\n\r\n  // this.filteredProducts$ .pipe(\r\n  //   map(x=> x),\r\n  //   tap(x=> console.log(`The value of filteredProducts$ is ${x}`)))\r\n  }\r\n\r\n  onRatingClicked(mesage: string): void {\r\n    this.pageTitle = 'Product List: ' + mesage;\r\n  }\r\n\r\n  performFilter(filterBy: string): Observable<IProduct[]>   {\r\n    filterBy = filterBy.toLocaleLowerCase();\r\n    return this.products$?.pipe(map(products => products.filter((product: IProduct) =>\r\n      product.productName.toLocaleLowerCase().includes(filterBy))));\r\n  }\r\n\r\n  // ngOnDestroy() {\r\n  //   this.sub.unsubscribe();\r\n  // }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}