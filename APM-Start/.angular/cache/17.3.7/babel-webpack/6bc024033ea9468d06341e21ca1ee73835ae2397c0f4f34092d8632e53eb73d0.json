{"ast":null,"code":"'use strict';\n/**\n * @license Angular v<unknown>\n * (c) 2010-2024 Google LLC. https://angular.io/\n * License: MIT\n */\n\nconst global = globalThis; // __Zone_symbol_prefix global can be used to override the default zone\n// symbol prefix with a custom one if needed.\n\nfunction __symbol__(name) {\n  const symbolPrefix = global['__Zone_symbol_prefix'] || '__zone_symbol__';\n  return symbolPrefix + name;\n}\n\nfunction initZone() {\n  const performance = global['performance'];\n\n  function mark(name) {\n    performance && performance['mark'] && performance['mark'](name);\n  }\n\n  function performanceMeasure(name, label) {\n    performance && performance['measure'] && performance['measure'](name, label);\n  }\n\n  mark('Zone');\n\n  class ZoneImpl {\n    // tslint:disable-next-line:require-internal-with-underscore\n    static #_ = this.__symbol__ = __symbol__;\n\n    static assertZonePatched() {\n      if (global['Promise'] !== patches['ZoneAwarePromise']) {\n        throw new Error('Zone.js has detected that ZoneAwarePromise `(window|global).Promise` ' + 'has been overwritten.\\n' + 'Most likely cause is that a Promise polyfill has been loaded ' + 'after Zone.js (Polyfilling Promise api is not necessary when zone.js is loaded. ' + 'If you must load one, do so before loading zone.js.)');\n      }\n    }\n\n    static get root() {\n      let zone = ZoneImpl.current;\n\n      while (zone.parent) {\n        zone = zone.parent;\n      }\n\n      return zone;\n    }\n\n    static get current() {\n      return _currentZoneFrame.zone;\n    }\n\n    static get currentTask() {\n      return _currentTask;\n    } // tslint:disable-next-line:require-internal-with-underscore\n\n\n    static __load_patch(name, fn, ignoreDuplicate = false) {\n      if (patches.hasOwnProperty(name)) {\n        // `checkDuplicate` option is defined from global variable\n        // so it works for all modules.\n        // `ignoreDuplicate` can work for the specified module\n        const checkDuplicate = global[__symbol__('forceDuplicateZoneCheck')] === true;\n\n        if (!ignoreDuplicate && checkDuplicate) {\n          throw Error('Already loaded patch: ' + name);\n        }\n      } else if (!global['__Zone_disable_' + name]) {\n        const perfName = 'Zone:' + name;\n        mark(perfName);\n        patches[name] = fn(global, ZoneImpl, _api);\n        performanceMeasure(perfName, perfName);\n      }\n    }\n\n    get parent() {\n      return this._parent;\n    }\n\n    get name() {\n      return this._name;\n    }\n\n    constructor(parent, zoneSpec) {\n      this._parent = parent;\n      this._name = zoneSpec ? zoneSpec.name || 'unnamed' : '<root>';\n      this._properties = zoneSpec && zoneSpec.properties || {};\n      this._zoneDelegate = new _ZoneDelegate(this, this._parent && this._parent._zoneDelegate, zoneSpec);\n    }\n\n    get(key) {\n      const zone = this.getZoneWith(key);\n      if (zone) return zone._properties[key];\n    }\n\n    getZoneWith(key) {\n      let current = this;\n\n      while (current) {\n        if (current._properties.hasOwnProperty(key)) {\n          return current;\n        }\n\n        current = current._parent;\n      }\n\n      return null;\n    }\n\n    fork(zoneSpec) {\n      if (!zoneSpec) throw new Error('ZoneSpec required!');\n      return this._zoneDelegate.fork(this, zoneSpec);\n    }\n\n    wrap(callback, source) {\n      if (typeof callback !== 'function') {\n        throw new Error('Expecting function got: ' + callback);\n      }\n\n      const _callback = this._zoneDelegate.intercept(this, callback, source);\n\n      const zone = this;\n      return function () {\n        return zone.runGuarded(_callback, this, arguments, source);\n      };\n    }\n\n    run(callback, applyThis, applyArgs, source) {\n      _currentZoneFrame = {\n        parent: _currentZoneFrame,\n        zone: this\n      };\n\n      try {\n        return this._zoneDelegate.invoke(this, callback, applyThis, applyArgs, source);\n      } finally {\n        _currentZoneFrame = _currentZoneFrame.parent;\n      }\n    }\n\n    runGuarded(callback, applyThis = null, applyArgs, source) {\n      _currentZoneFrame = {\n        parent: _currentZoneFrame,\n        zone: this\n      };\n\n      try {\n        try {\n          return this._zoneDelegate.invoke(this, callback, applyThis, applyArgs, source);\n        } catch (error) {\n          if (this._zoneDelegate.handleError(this, error)) {\n            throw error;\n          }\n        }\n      } finally {\n        _currentZoneFrame = _currentZoneFrame.parent;\n      }\n    }\n\n    runTask(task, applyThis, applyArgs) {\n      if (task.zone != this) {\n        throw new Error('A task can only be run in the zone of creation! (Creation: ' + (task.zone || NO_ZONE).name + '; Execution: ' + this.name + ')');\n      } // https://github.com/angular/zone.js/issues/778, sometimes eventTask\n      // will run in notScheduled(canceled) state, we should not try to\n      // run such kind of task but just return\n\n\n      if (task.state === notScheduled && (task.type === eventTask || task.type === macroTask)) {\n        return;\n      }\n\n      const reEntryGuard = task.state != running;\n      reEntryGuard && task._transitionTo(running, scheduled);\n      task.runCount++;\n      const previousTask = _currentTask;\n      _currentTask = task;\n      _currentZoneFrame = {\n        parent: _currentZoneFrame,\n        zone: this\n      };\n\n      try {\n        if (task.type == macroTask && task.data && !task.data.isPeriodic) {\n          task.cancelFn = undefined;\n        }\n\n        try {\n          return this._zoneDelegate.invokeTask(this, task, applyThis, applyArgs);\n        } catch (error) {\n          if (this._zoneDelegate.handleError(this, error)) {\n            throw error;\n          }\n        }\n      } finally {\n        // if the task's state is notScheduled or unknown, then it has already been cancelled\n        // we should not reset the state to scheduled\n        if (task.state !== notScheduled && task.state !== unknown) {\n          if (task.type == eventTask || task.data && task.data.isPeriodic) {\n            reEntryGuard && task._transitionTo(scheduled, running);\n          } else {\n            task.runCount = 0;\n\n            this._updateTaskCount(task, -1);\n\n            reEntryGuard && task._transitionTo(notScheduled, running, notScheduled);\n          }\n        }\n\n        _currentZoneFrame = _currentZoneFrame.parent;\n        _currentTask = previousTask;\n      }\n    }\n\n    scheduleTask(task) {\n      if (task.zone && task.zone !== this) {\n        // check if the task was rescheduled, the newZone\n        // should not be the children of the original zone\n        let newZone = this;\n\n        while (newZone) {\n          if (newZone === task.zone) {\n            throw Error(`can not reschedule task to ${this.name} which is descendants of the original zone ${task.zone.name}`);\n          }\n\n          newZone = newZone.parent;\n        }\n      }\n\n      task._transitionTo(scheduling, notScheduled);\n\n      const zoneDelegates = [];\n      task._zoneDelegates = zoneDelegates;\n      task._zone = this;\n\n      try {\n        task = this._zoneDelegate.scheduleTask(this, task);\n      } catch (err) {\n        // should set task's state to unknown when scheduleTask throw error\n        // because the err may from reschedule, so the fromState maybe notScheduled\n        task._transitionTo(unknown, scheduling, notScheduled); // TODO: @JiaLiPassion, should we check the result from handleError?\n\n\n        this._zoneDelegate.handleError(this, err);\n\n        throw err;\n      }\n\n      if (task._zoneDelegates === zoneDelegates) {\n        // we have to check because internally the delegate can reschedule the task.\n        this._updateTaskCount(task, 1);\n      }\n\n      if (task.state == scheduling) {\n        task._transitionTo(scheduled, scheduling);\n      }\n\n      return task;\n    }\n\n    scheduleMicroTask(source, callback, data, customSchedule) {\n      return this.scheduleTask(new ZoneTask(microTask, source, callback, data, customSchedule, undefined));\n    }\n\n    scheduleMacroTask(source, callback, data, customSchedule, customCancel) {\n      return this.scheduleTask(new ZoneTask(macroTask, source, callback, data, customSchedule, customCancel));\n    }\n\n    scheduleEventTask(source, callback, data, customSchedule, customCancel) {\n      return this.scheduleTask(new ZoneTask(eventTask, source, callback, data, customSchedule, customCancel));\n    }\n\n    cancelTask(task) {\n      if (task.zone != this) throw new Error('A task can only be cancelled in the zone of creation! (Creation: ' + (task.zone || NO_ZONE).name + '; Execution: ' + this.name + ')');\n\n      if (task.state !== scheduled && task.state !== running) {\n        return;\n      }\n\n      task._transitionTo(canceling, scheduled, running);\n\n      try {\n        this._zoneDelegate.cancelTask(this, task);\n      } catch (err) {\n        // if error occurs when cancelTask, transit the state to unknown\n        task._transitionTo(unknown, canceling);\n\n        this._zoneDelegate.handleError(this, err);\n\n        throw err;\n      }\n\n      this._updateTaskCount(task, -1);\n\n      task._transitionTo(notScheduled, canceling);\n\n      task.runCount = 0;\n      return task;\n    }\n\n    _updateTaskCount(task, count) {\n      const zoneDelegates = task._zoneDelegates;\n\n      if (count == -1) {\n        task._zoneDelegates = null;\n      }\n\n      for (let i = 0; i < zoneDelegates.length; i++) {\n        zoneDelegates[i]._updateTaskCount(task.type, count);\n      }\n    }\n\n  }\n\n  const DELEGATE_ZS = {\n    name: '',\n    onHasTask: (delegate, _, target, hasTaskState) => delegate.hasTask(target, hasTaskState),\n    onScheduleTask: (delegate, _, target, task) => delegate.scheduleTask(target, task),\n    onInvokeTask: (delegate, _, target, task, applyThis, applyArgs) => delegate.invokeTask(target, task, applyThis, applyArgs),\n    onCancelTask: (delegate, _, target, task) => delegate.cancelTask(target, task)\n  };\n\n  class _ZoneDelegate {\n    get zone() {\n      return this._zone;\n    }\n\n    constructor(zone, parentDelegate, zoneSpec) {\n      this._taskCounts = {\n        'microTask': 0,\n        'macroTask': 0,\n        'eventTask': 0\n      };\n      this._zone = zone;\n      this._parentDelegate = parentDelegate;\n      this._forkZS = zoneSpec && (zoneSpec && zoneSpec.onFork ? zoneSpec : parentDelegate._forkZS);\n      this._forkDlgt = zoneSpec && (zoneSpec.onFork ? parentDelegate : parentDelegate._forkDlgt);\n      this._forkCurrZone = zoneSpec && (zoneSpec.onFork ? this._zone : parentDelegate._forkCurrZone);\n      this._interceptZS = zoneSpec && (zoneSpec.onIntercept ? zoneSpec : parentDelegate._interceptZS);\n      this._interceptDlgt = zoneSpec && (zoneSpec.onIntercept ? parentDelegate : parentDelegate._interceptDlgt);\n      this._interceptCurrZone = zoneSpec && (zoneSpec.onIntercept ? this._zone : parentDelegate._interceptCurrZone);\n      this._invokeZS = zoneSpec && (zoneSpec.onInvoke ? zoneSpec : parentDelegate._invokeZS);\n      this._invokeDlgt = zoneSpec && (zoneSpec.onInvoke ? parentDelegate : parentDelegate._invokeDlgt);\n      this._invokeCurrZone = zoneSpec && (zoneSpec.onInvoke ? this._zone : parentDelegate._invokeCurrZone);\n      this._handleErrorZS = zoneSpec && (zoneSpec.onHandleError ? zoneSpec : parentDelegate._handleErrorZS);\n      this._handleErrorDlgt = zoneSpec && (zoneSpec.onHandleError ? parentDelegate : parentDelegate._handleErrorDlgt);\n      this._handleErrorCurrZone = zoneSpec && (zoneSpec.onHandleError ? this._zone : parentDelegate._handleErrorCurrZone);\n      this._scheduleTaskZS = zoneSpec && (zoneSpec.onScheduleTask ? zoneSpec : parentDelegate._scheduleTaskZS);\n      this._scheduleTaskDlgt = zoneSpec && (zoneSpec.onScheduleTask ? parentDelegate : parentDelegate._scheduleTaskDlgt);\n      this._scheduleTaskCurrZone = zoneSpec && (zoneSpec.onScheduleTask ? this._zone : parentDelegate._scheduleTaskCurrZone);\n      this._invokeTaskZS = zoneSpec && (zoneSpec.onInvokeTask ? zoneSpec : parentDelegate._invokeTaskZS);\n      this._invokeTaskDlgt = zoneSpec && (zoneSpec.onInvokeTask ? parentDelegate : parentDelegate._invokeTaskDlgt);\n      this._invokeTaskCurrZone = zoneSpec && (zoneSpec.onInvokeTask ? this._zone : parentDelegate._invokeTaskCurrZone);\n      this._cancelTaskZS = zoneSpec && (zoneSpec.onCancelTask ? zoneSpec : parentDelegate._cancelTaskZS);\n      this._cancelTaskDlgt = zoneSpec && (zoneSpec.onCancelTask ? parentDelegate : parentDelegate._cancelTaskDlgt);\n      this._cancelTaskCurrZone = zoneSpec && (zoneSpec.onCancelTask ? this._zone : parentDelegate._cancelTaskCurrZone);\n      this._hasTaskZS = null;\n      this._hasTaskDlgt = null;\n      this._hasTaskDlgtOwner = null;\n      this._hasTaskCurrZone = null;\n      const zoneSpecHasTask = zoneSpec && zoneSpec.onHasTask;\n      const parentHasTask = parentDelegate && parentDelegate._hasTaskZS;\n\n      if (zoneSpecHasTask || parentHasTask) {\n        // If we need to report hasTask, than this ZS needs to do ref counting on tasks. In such\n        // a case all task related interceptors must go through this ZD. We can't short circuit it.\n        this._hasTaskZS = zoneSpecHasTask ? zoneSpec : DELEGATE_ZS;\n        this._hasTaskDlgt = parentDelegate;\n        this._hasTaskDlgtOwner = this;\n        this._hasTaskCurrZone = this._zone;\n\n        if (!zoneSpec.onScheduleTask) {\n          this._scheduleTaskZS = DELEGATE_ZS;\n          this._scheduleTaskDlgt = parentDelegate;\n          this._scheduleTaskCurrZone = this._zone;\n        }\n\n        if (!zoneSpec.onInvokeTask) {\n          this._invokeTaskZS = DELEGATE_ZS;\n          this._invokeTaskDlgt = parentDelegate;\n          this._invokeTaskCurrZone = this._zone;\n        }\n\n        if (!zoneSpec.onCancelTask) {\n          this._cancelTaskZS = DELEGATE_ZS;\n          this._cancelTaskDlgt = parentDelegate;\n          this._cancelTaskCurrZone = this._zone;\n        }\n      }\n    }\n\n    fork(targetZone, zoneSpec) {\n      return this._forkZS ? this._forkZS.onFork(this._forkDlgt, this.zone, targetZone, zoneSpec) : new ZoneImpl(targetZone, zoneSpec);\n    }\n\n    intercept(targetZone, callback, source) {\n      return this._interceptZS ? this._interceptZS.onIntercept(this._interceptDlgt, this._interceptCurrZone, targetZone, callback, source) : callback;\n    }\n\n    invoke(targetZone, callback, applyThis, applyArgs, source) {\n      return this._invokeZS ? this._invokeZS.onInvoke(this._invokeDlgt, this._invokeCurrZone, targetZone, callback, applyThis, applyArgs, source) : callback.apply(applyThis, applyArgs);\n    }\n\n    handleError(targetZone, error) {\n      return this._handleErrorZS ? this._handleErrorZS.onHandleError(this._handleErrorDlgt, this._handleErrorCurrZone, targetZone, error) : true;\n    }\n\n    scheduleTask(targetZone, task) {\n      let returnTask = task;\n\n      if (this._scheduleTaskZS) {\n        if (this._hasTaskZS) {\n          returnTask._zoneDelegates.push(this._hasTaskDlgtOwner);\n        } // clang-format off\n\n\n        returnTask = this._scheduleTaskZS.onScheduleTask(this._scheduleTaskDlgt, this._scheduleTaskCurrZone, targetZone, task); // clang-format on\n\n        if (!returnTask) returnTask = task;\n      } else {\n        if (task.scheduleFn) {\n          task.scheduleFn(task);\n        } else if (task.type == microTask) {\n          scheduleMicroTask(task);\n        } else {\n          throw new Error('Task is missing scheduleFn.');\n        }\n      }\n\n      return returnTask;\n    }\n\n    invokeTask(targetZone, task, applyThis, applyArgs) {\n      return this._invokeTaskZS ? this._invokeTaskZS.onInvokeTask(this._invokeTaskDlgt, this._invokeTaskCurrZone, targetZone, task, applyThis, applyArgs) : task.callback.apply(applyThis, applyArgs);\n    }\n\n    cancelTask(targetZone, task) {\n      let value;\n\n      if (this._cancelTaskZS) {\n        value = this._cancelTaskZS.onCancelTask(this._cancelTaskDlgt, this._cancelTaskCurrZone, targetZone, task);\n      } else {\n        if (!task.cancelFn) {\n          throw Error('Task is not cancelable');\n        }\n\n        value = task.cancelFn(task);\n      }\n\n      return value;\n    }\n\n    hasTask(targetZone, isEmpty) {\n      // hasTask should not throw error so other ZoneDelegate\n      // can still trigger hasTask callback\n      try {\n        this._hasTaskZS && this._hasTaskZS.onHasTask(this._hasTaskDlgt, this._hasTaskCurrZone, targetZone, isEmpty);\n      } catch (err) {\n        this.handleError(targetZone, err);\n      }\n    } // tslint:disable-next-line:require-internal-with-underscore\n\n\n    _updateTaskCount(type, count) {\n      const counts = this._taskCounts;\n      const prev = counts[type];\n      const next = counts[type] = prev + count;\n\n      if (next < 0) {\n        throw new Error('More tasks executed then were scheduled.');\n      }\n\n      if (prev == 0 || next == 0) {\n        const isEmpty = {\n          microTask: counts['microTask'] > 0,\n          macroTask: counts['macroTask'] > 0,\n          eventTask: counts['eventTask'] > 0,\n          change: type\n        };\n        this.hasTask(this._zone, isEmpty);\n      }\n    }\n\n  }\n\n  class ZoneTask {\n    constructor(type, source, callback, options, scheduleFn, cancelFn) {\n      // tslint:disable-next-line:require-internal-with-underscore\n      this._zone = null;\n      this.runCount = 0; // tslint:disable-next-line:require-internal-with-underscore\n\n      this._zoneDelegates = null; // tslint:disable-next-line:require-internal-with-underscore\n\n      this._state = 'notScheduled';\n      this.type = type;\n      this.source = source;\n      this.data = options;\n      this.scheduleFn = scheduleFn;\n      this.cancelFn = cancelFn;\n\n      if (!callback) {\n        throw new Error('callback is not defined');\n      }\n\n      this.callback = callback;\n      const self = this; // TODO: @JiaLiPassion options should have interface\n\n      if (type === eventTask && options && options.useG) {\n        this.invoke = ZoneTask.invokeTask;\n      } else {\n        this.invoke = function () {\n          return ZoneTask.invokeTask.call(global, self, this, arguments);\n        };\n      }\n    }\n\n    static invokeTask(task, target, args) {\n      if (!task) {\n        task = this;\n      }\n\n      _numberOfNestedTaskFrames++;\n\n      try {\n        task.runCount++;\n        return task.zone.runTask(task, target, args);\n      } finally {\n        if (_numberOfNestedTaskFrames == 1) {\n          drainMicroTaskQueue();\n        }\n\n        _numberOfNestedTaskFrames--;\n      }\n    }\n\n    get zone() {\n      return this._zone;\n    }\n\n    get state() {\n      return this._state;\n    }\n\n    cancelScheduleRequest() {\n      this._transitionTo(notScheduled, scheduling);\n    } // tslint:disable-next-line:require-internal-with-underscore\n\n\n    _transitionTo(toState, fromState1, fromState2) {\n      if (this._state === fromState1 || this._state === fromState2) {\n        this._state = toState;\n\n        if (toState == notScheduled) {\n          this._zoneDelegates = null;\n        }\n      } else {\n        throw new Error(`${this.type} '${this.source}': can not transition to '${toState}', expecting state '${fromState1}'${fromState2 ? \" or '\" + fromState2 + \"'\" : ''}, was '${this._state}'.`);\n      }\n    }\n\n    toString() {\n      if (this.data && typeof this.data.handleId !== 'undefined') {\n        return this.data.handleId.toString();\n      } else {\n        return Object.prototype.toString.call(this);\n      }\n    } // add toJSON method to prevent cyclic error when\n    // call JSON.stringify(zoneTask)\n\n\n    toJSON() {\n      return {\n        type: this.type,\n        state: this.state,\n        source: this.source,\n        zone: this.zone.name,\n        runCount: this.runCount\n      };\n    }\n\n  } //////////////////////////////////////////////////////\n  //////////////////////////////////////////////////////\n  ///  MICROTASK QUEUE\n  //////////////////////////////////////////////////////\n  //////////////////////////////////////////////////////\n\n\n  const symbolSetTimeout = __symbol__('setTimeout');\n\n  const symbolPromise = __symbol__('Promise');\n\n  const symbolThen = __symbol__('then');\n\n  let _microTaskQueue = [];\n  let _isDrainingMicrotaskQueue = false;\n  let nativeMicroTaskQueuePromise;\n\n  function nativeScheduleMicroTask(func) {\n    if (!nativeMicroTaskQueuePromise) {\n      if (global[symbolPromise]) {\n        nativeMicroTaskQueuePromise = global[symbolPromise].resolve(0);\n      }\n    }\n\n    if (nativeMicroTaskQueuePromise) {\n      let nativeThen = nativeMicroTaskQueuePromise[symbolThen];\n\n      if (!nativeThen) {\n        // native Promise is not patchable, we need to use `then` directly\n        // issue 1078\n        nativeThen = nativeMicroTaskQueuePromise['then'];\n      }\n\n      nativeThen.call(nativeMicroTaskQueuePromise, func);\n    } else {\n      global[symbolSetTimeout](func, 0);\n    }\n  }\n\n  function scheduleMicroTask(task) {\n    // if we are not running in any task, and there has not been anything scheduled\n    // we must bootstrap the initial task creation by manually scheduling the drain\n    if (_numberOfNestedTaskFrames === 0 && _microTaskQueue.length === 0) {\n      // We are not running in Task, so we need to kickstart the microtask queue.\n      nativeScheduleMicroTask(drainMicroTaskQueue);\n    }\n\n    task && _microTaskQueue.push(task);\n  }\n\n  function drainMicroTaskQueue() {\n    if (!_isDrainingMicrotaskQueue) {\n      _isDrainingMicrotaskQueue = true;\n\n      while (_microTaskQueue.length) {\n        const queue = _microTaskQueue;\n        _microTaskQueue = [];\n\n        for (let i = 0; i < queue.length; i++) {\n          const task = queue[i];\n\n          try {\n            task.zone.runTask(task, null, null);\n          } catch (error) {\n            _api.onUnhandledError(error);\n          }\n        }\n      }\n\n      _api.microtaskDrainDone();\n\n      _isDrainingMicrotaskQueue = false;\n    }\n  } //////////////////////////////////////////////////////\n  //////////////////////////////////////////////////////\n  ///  BOOTSTRAP\n  //////////////////////////////////////////////////////\n  //////////////////////////////////////////////////////\n\n\n  const NO_ZONE = {\n    name: 'NO ZONE'\n  };\n  const notScheduled = 'notScheduled',\n        scheduling = 'scheduling',\n        scheduled = 'scheduled',\n        running = 'running',\n        canceling = 'canceling',\n        unknown = 'unknown';\n  const microTask = 'microTask',\n        macroTask = 'macroTask',\n        eventTask = 'eventTask';\n  const patches = {};\n  const _api = {\n    symbol: __symbol__,\n    currentZoneFrame: () => _currentZoneFrame,\n    onUnhandledError: noop,\n    microtaskDrainDone: noop,\n    scheduleMicroTask: scheduleMicroTask,\n    showUncaughtError: () => !ZoneImpl[__symbol__('ignoreConsoleErrorUncaughtError')],\n    patchEventTarget: () => [],\n    patchOnProperties: noop,\n    patchMethod: () => noop,\n    bindArguments: () => [],\n    patchThen: () => noop,\n    patchMacroTask: () => noop,\n    patchEventPrototype: () => noop,\n    isIEOrEdge: () => false,\n    getGlobalObjects: () => undefined,\n    ObjectDefineProperty: () => noop,\n    ObjectGetOwnPropertyDescriptor: () => undefined,\n    ObjectCreate: () => undefined,\n    ArraySlice: () => [],\n    patchClass: () => noop,\n    wrapWithCurrentZone: () => noop,\n    filterProperties: () => [],\n    attachOriginToPatched: () => noop,\n    _redefineProperty: () => noop,\n    patchCallbacks: () => noop,\n    nativeScheduleMicroTask: nativeScheduleMicroTask\n  };\n  let _currentZoneFrame = {\n    parent: null,\n    zone: new ZoneImpl(null, null)\n  };\n  let _currentTask = null;\n  let _numberOfNestedTaskFrames = 0;\n\n  function noop() {}\n\n  performanceMeasure('Zone', 'Zone');\n  return ZoneImpl;\n}\n\nfunction loadZone() {\n  // if global['Zone'] already exists (maybe zone.js was already loaded or\n  // some other lib also registered a global object named Zone), we may need\n  // to throw an error, but sometimes user may not want this error.\n  // For example,\n  // we have two web pages, page1 includes zone.js, page2 doesn't.\n  // and the 1st time user load page1 and page2, everything work fine,\n  // but when user load page2 again, error occurs because global['Zone'] already exists.\n  // so we add a flag to let user choose whether to throw this error or not.\n  // By default, if existing Zone is from zone.js, we will not throw the error.\n  const global = globalThis;\n  const checkDuplicate = global[__symbol__('forceDuplicateZoneCheck')] === true;\n\n  if (global['Zone'] && (checkDuplicate || typeof global['Zone'].__symbol__ !== 'function')) {\n    throw new Error('Zone already loaded.');\n  } // Initialize global `Zone` constant.\n\n\n  global['Zone'] ??= initZone();\n  return global['Zone'];\n}\n/**\n * Suppress closure compiler errors about unknown 'Zone' variable\n * @fileoverview\n * @suppress {undefinedVars,globalThis,missingRequire}\n */\n// issue #989, to reduce bundle size, use short name\n\n/** Object.getOwnPropertyDescriptor */\n\n\nconst ObjectGetOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n/** Object.defineProperty */\n\nconst ObjectDefineProperty = Object.defineProperty;\n/** Object.getPrototypeOf */\n\nconst ObjectGetPrototypeOf = Object.getPrototypeOf;\n/** Object.create */\n\nconst ObjectCreate = Object.create;\n/** Array.prototype.slice */\n\nconst ArraySlice = Array.prototype.slice;\n/** addEventListener string const */\n\nconst ADD_EVENT_LISTENER_STR = 'addEventListener';\n/** removeEventListener string const */\n\nconst REMOVE_EVENT_LISTENER_STR = 'removeEventListener';\n/** zoneSymbol addEventListener */\n\nconst ZONE_SYMBOL_ADD_EVENT_LISTENER = __symbol__(ADD_EVENT_LISTENER_STR);\n/** zoneSymbol removeEventListener */\n\n\nconst ZONE_SYMBOL_REMOVE_EVENT_LISTENER = __symbol__(REMOVE_EVENT_LISTENER_STR);\n/** true string const */\n\n\nconst TRUE_STR = 'true';\n/** false string const */\n\nconst FALSE_STR = 'false';\n/** Zone symbol prefix string const. */\n\nconst ZONE_SYMBOL_PREFIX = __symbol__('');\n\nfunction wrapWithCurrentZone(callback, source) {\n  return Zone.current.wrap(callback, source);\n}\n\nfunction scheduleMacroTaskWithCurrentZone(source, callback, data, customSchedule, customCancel) {\n  return Zone.current.scheduleMacroTask(source, callback, data, customSchedule, customCancel);\n}\n\nconst zoneSymbol = __symbol__;\nconst isWindowExists = typeof window !== 'undefined';\nconst internalWindow = isWindowExists ? window : undefined;\n\nconst _global = isWindowExists && internalWindow || globalThis;\n\nconst REMOVE_ATTRIBUTE = 'removeAttribute';\n\nfunction bindArguments(args, source) {\n  for (let i = args.length - 1; i >= 0; i--) {\n    if (typeof args[i] === 'function') {\n      args[i] = wrapWithCurrentZone(args[i], source + '_' + i);\n    }\n  }\n\n  return args;\n}\n\nfunction patchPrototype(prototype, fnNames) {\n  const source = prototype.constructor['name'];\n\n  for (let i = 0; i < fnNames.length; i++) {\n    const name = fnNames[i];\n    const delegate = prototype[name];\n\n    if (delegate) {\n      const prototypeDesc = ObjectGetOwnPropertyDescriptor(prototype, name);\n\n      if (!isPropertyWritable(prototypeDesc)) {\n        continue;\n      }\n\n      prototype[name] = (delegate => {\n        const patched = function () {\n          return delegate.apply(this, bindArguments(arguments, source + '.' + name));\n        };\n\n        attachOriginToPatched(patched, delegate);\n        return patched;\n      })(delegate);\n    }\n  }\n}\n\nfunction isPropertyWritable(propertyDesc) {\n  if (!propertyDesc) {\n    return true;\n  }\n\n  if (propertyDesc.writable === false) {\n    return false;\n  }\n\n  return !(typeof propertyDesc.get === 'function' && typeof propertyDesc.set === 'undefined');\n}\n\nconst isWebWorker = typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope; // Make sure to access `process` through `_global` so that WebPack does not accidentally browserify\n// this code.\n\nconst isNode = !('nw' in _global) && typeof _global.process !== 'undefined' && {}.toString.call(_global.process) === '[object process]';\nconst isBrowser = !isNode && !isWebWorker && !!(isWindowExists && internalWindow['HTMLElement']); // we are in electron of nw, so we are both browser and nodejs\n// Make sure to access `process` through `_global` so that WebPack does not accidentally browserify\n// this code.\n\nconst isMix = typeof _global.process !== 'undefined' && {}.toString.call(_global.process) === '[object process]' && !isWebWorker && !!(isWindowExists && internalWindow['HTMLElement']);\nconst zoneSymbolEventNames$1 = {};\n\nconst wrapFn = function (event) {\n  // https://github.com/angular/zone.js/issues/911, in IE, sometimes\n  // event will be undefined, so we need to use window.event\n  event = event || _global.event;\n\n  if (!event) {\n    return;\n  }\n\n  let eventNameSymbol = zoneSymbolEventNames$1[event.type];\n\n  if (!eventNameSymbol) {\n    eventNameSymbol = zoneSymbolEventNames$1[event.type] = zoneSymbol('ON_PROPERTY' + event.type);\n  }\n\n  const target = this || event.target || _global;\n  const listener = target[eventNameSymbol];\n  let result;\n\n  if (isBrowser && target === internalWindow && event.type === 'error') {\n    // window.onerror have different signature\n    // https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onerror#window.onerror\n    // and onerror callback will prevent default when callback return true\n    const errorEvent = event;\n    result = listener && listener.call(this, errorEvent.message, errorEvent.filename, errorEvent.lineno, errorEvent.colno, errorEvent.error);\n\n    if (result === true) {\n      event.preventDefault();\n    }\n  } else {\n    result = listener && listener.apply(this, arguments);\n\n    if (result != undefined && !result) {\n      event.preventDefault();\n    }\n  }\n\n  return result;\n};\n\nfunction patchProperty(obj, prop, prototype) {\n  let desc = ObjectGetOwnPropertyDescriptor(obj, prop);\n\n  if (!desc && prototype) {\n    // when patch window object, use prototype to check prop exist or not\n    const prototypeDesc = ObjectGetOwnPropertyDescriptor(prototype, prop);\n\n    if (prototypeDesc) {\n      desc = {\n        enumerable: true,\n        configurable: true\n      };\n    }\n  } // if the descriptor not exists or is not configurable\n  // just return\n\n\n  if (!desc || !desc.configurable) {\n    return;\n  }\n\n  const onPropPatchedSymbol = zoneSymbol('on' + prop + 'patched');\n\n  if (obj.hasOwnProperty(onPropPatchedSymbol) && obj[onPropPatchedSymbol]) {\n    return;\n  } // A property descriptor cannot have getter/setter and be writable\n  // deleting the writable and value properties avoids this error:\n  //\n  // TypeError: property descriptors must not specify a value or be writable when a\n  // getter or setter has been specified\n\n\n  delete desc.writable;\n  delete desc.value;\n  const originalDescGet = desc.get;\n  const originalDescSet = desc.set; // slice(2) cuz 'onclick' -> 'click', etc\n\n  const eventName = prop.slice(2);\n  let eventNameSymbol = zoneSymbolEventNames$1[eventName];\n\n  if (!eventNameSymbol) {\n    eventNameSymbol = zoneSymbolEventNames$1[eventName] = zoneSymbol('ON_PROPERTY' + eventName);\n  }\n\n  desc.set = function (newValue) {\n    // in some of windows's onproperty callback, this is undefined\n    // so we need to check it\n    let target = this;\n\n    if (!target && obj === _global) {\n      target = _global;\n    }\n\n    if (!target) {\n      return;\n    }\n\n    const previousValue = target[eventNameSymbol];\n\n    if (typeof previousValue === 'function') {\n      target.removeEventListener(eventName, wrapFn);\n    } // issue #978, when onload handler was added before loading zone.js\n    // we should remove it with originalDescSet\n\n\n    originalDescSet && originalDescSet.call(target, null);\n    target[eventNameSymbol] = newValue;\n\n    if (typeof newValue === 'function') {\n      target.addEventListener(eventName, wrapFn, false);\n    }\n  }; // The getter would return undefined for unassigned properties but the default value of an\n  // unassigned property is null\n\n\n  desc.get = function () {\n    // in some of windows's onproperty callback, this is undefined\n    // so we need to check it\n    let target = this;\n\n    if (!target && obj === _global) {\n      target = _global;\n    }\n\n    if (!target) {\n      return null;\n    }\n\n    const listener = target[eventNameSymbol];\n\n    if (listener) {\n      return listener;\n    } else if (originalDescGet) {\n      // result will be null when use inline event attribute,\n      // such as <button onclick=\"func();\">OK</button>\n      // because the onclick function is internal raw uncompiled handler\n      // the onclick will be evaluated when first time event was triggered or\n      // the property is accessed, https://github.com/angular/zone.js/issues/525\n      // so we should use original native get to retrieve the handler\n      let value = originalDescGet.call(this);\n\n      if (value) {\n        desc.set.call(this, value);\n\n        if (typeof target[REMOVE_ATTRIBUTE] === 'function') {\n          target.removeAttribute(prop);\n        }\n\n        return value;\n      }\n    }\n\n    return null;\n  };\n\n  ObjectDefineProperty(obj, prop, desc);\n  obj[onPropPatchedSymbol] = true;\n}\n\nfunction patchOnProperties(obj, properties, prototype) {\n  if (properties) {\n    for (let i = 0; i < properties.length; i++) {\n      patchProperty(obj, 'on' + properties[i], prototype);\n    }\n  } else {\n    const onProperties = [];\n\n    for (const prop in obj) {\n      if (prop.slice(0, 2) == 'on') {\n        onProperties.push(prop);\n      }\n    }\n\n    for (let j = 0; j < onProperties.length; j++) {\n      patchProperty(obj, onProperties[j], prototype);\n    }\n  }\n}\n\nconst originalInstanceKey = zoneSymbol('originalInstance'); // wrap some native API on `window`\n\nfunction patchClass(className) {\n  const OriginalClass = _global[className];\n  if (!OriginalClass) return; // keep original class in global\n\n  _global[zoneSymbol(className)] = OriginalClass;\n\n  _global[className] = function () {\n    const a = bindArguments(arguments, className);\n\n    switch (a.length) {\n      case 0:\n        this[originalInstanceKey] = new OriginalClass();\n        break;\n\n      case 1:\n        this[originalInstanceKey] = new OriginalClass(a[0]);\n        break;\n\n      case 2:\n        this[originalInstanceKey] = new OriginalClass(a[0], a[1]);\n        break;\n\n      case 3:\n        this[originalInstanceKey] = new OriginalClass(a[0], a[1], a[2]);\n        break;\n\n      case 4:\n        this[originalInstanceKey] = new OriginalClass(a[0], a[1], a[2], a[3]);\n        break;\n\n      default:\n        throw new Error('Arg list too long.');\n    }\n  }; // attach original delegate to patched function\n\n\n  attachOriginToPatched(_global[className], OriginalClass);\n  const instance = new OriginalClass(function () {});\n  let prop;\n\n  for (prop in instance) {\n    // https://bugs.webkit.org/show_bug.cgi?id=44721\n    if (className === 'XMLHttpRequest' && prop === 'responseBlob') continue;\n\n    (function (prop) {\n      if (typeof instance[prop] === 'function') {\n        _global[className].prototype[prop] = function () {\n          return this[originalInstanceKey][prop].apply(this[originalInstanceKey], arguments);\n        };\n      } else {\n        ObjectDefineProperty(_global[className].prototype, prop, {\n          set: function (fn) {\n            if (typeof fn === 'function') {\n              this[originalInstanceKey][prop] = wrapWithCurrentZone(fn, className + '.' + prop); // keep callback in wrapped function so we can\n              // use it in Function.prototype.toString to return\n              // the native one.\n\n              attachOriginToPatched(this[originalInstanceKey][prop], fn);\n            } else {\n              this[originalInstanceKey][prop] = fn;\n            }\n          },\n          get: function () {\n            return this[originalInstanceKey][prop];\n          }\n        });\n      }\n    })(prop);\n  }\n\n  for (prop in OriginalClass) {\n    if (prop !== 'prototype' && OriginalClass.hasOwnProperty(prop)) {\n      _global[className][prop] = OriginalClass[prop];\n    }\n  }\n}\n\nfunction patchMethod(target, name, patchFn) {\n  let proto = target;\n\n  while (proto && !proto.hasOwnProperty(name)) {\n    proto = ObjectGetPrototypeOf(proto);\n  }\n\n  if (!proto && target[name]) {\n    // somehow we did not find it, but we can see it. This happens on IE for Window properties.\n    proto = target;\n  }\n\n  const delegateName = zoneSymbol(name);\n  let delegate = null;\n\n  if (proto && (!(delegate = proto[delegateName]) || !proto.hasOwnProperty(delegateName))) {\n    delegate = proto[delegateName] = proto[name]; // check whether proto[name] is writable\n    // some property is readonly in safari, such as HtmlCanvasElement.prototype.toBlob\n\n    const desc = proto && ObjectGetOwnPropertyDescriptor(proto, name);\n\n    if (isPropertyWritable(desc)) {\n      const patchDelegate = patchFn(delegate, delegateName, name);\n\n      proto[name] = function () {\n        return patchDelegate(this, arguments);\n      };\n\n      attachOriginToPatched(proto[name], delegate);\n    }\n  }\n\n  return delegate;\n} // TODO: @JiaLiPassion, support cancel task later if necessary\n\n\nfunction patchMacroTask(obj, funcName, metaCreator) {\n  let setNative = null;\n\n  function scheduleTask(task) {\n    const data = task.data;\n\n    data.args[data.cbIdx] = function () {\n      task.invoke.apply(this, arguments);\n    };\n\n    setNative.apply(data.target, data.args);\n    return task;\n  }\n\n  setNative = patchMethod(obj, funcName, delegate => function (self, args) {\n    const meta = metaCreator(self, args);\n\n    if (meta.cbIdx >= 0 && typeof args[meta.cbIdx] === 'function') {\n      return scheduleMacroTaskWithCurrentZone(meta.name, args[meta.cbIdx], meta, scheduleTask);\n    } else {\n      // cause an error by calling it directly.\n      return delegate.apply(self, args);\n    }\n  });\n}\n\nfunction attachOriginToPatched(patched, original) {\n  patched[zoneSymbol('OriginalDelegate')] = original;\n}\n\nlet isDetectedIEOrEdge = false;\nlet ieOrEdge = false;\n\nfunction isIE() {\n  try {\n    const ua = internalWindow.navigator.userAgent;\n\n    if (ua.indexOf('MSIE ') !== -1 || ua.indexOf('Trident/') !== -1) {\n      return true;\n    }\n  } catch (error) {}\n\n  return false;\n}\n\nfunction isIEOrEdge() {\n  if (isDetectedIEOrEdge) {\n    return ieOrEdge;\n  }\n\n  isDetectedIEOrEdge = true;\n\n  try {\n    const ua = internalWindow.navigator.userAgent;\n\n    if (ua.indexOf('MSIE ') !== -1 || ua.indexOf('Trident/') !== -1 || ua.indexOf('Edge/') !== -1) {\n      ieOrEdge = true;\n    }\n  } catch (error) {}\n\n  return ieOrEdge;\n}\n/**\n * @fileoverview\n * @suppress {missingRequire}\n */\n\n\nlet passiveSupported = false;\n\nif (typeof window !== 'undefined') {\n  try {\n    const options = Object.defineProperty({}, 'passive', {\n      get: function () {\n        passiveSupported = true;\n      }\n    }); // Note: We pass the `options` object as the event handler too. This is not compatible with the\n    // signature of `addEventListener` or `removeEventListener` but enables us to remove the handler\n    // without an actual handler.\n\n    window.addEventListener('test', options, options);\n    window.removeEventListener('test', options, options);\n  } catch (err) {\n    passiveSupported = false;\n  }\n} // an identifier to tell ZoneTask do not create a new invoke closure\n\n\nconst OPTIMIZED_ZONE_EVENT_TASK_DATA = {\n  useG: true\n};\nconst zoneSymbolEventNames = {};\nconst globalSources = {};\nconst EVENT_NAME_SYMBOL_REGX = new RegExp('^' + ZONE_SYMBOL_PREFIX + '(\\\\w+)(true|false)$');\nconst IMMEDIATE_PROPAGATION_SYMBOL = zoneSymbol('propagationStopped');\n\nfunction prepareEventNames(eventName, eventNameToString) {\n  const falseEventName = (eventNameToString ? eventNameToString(eventName) : eventName) + FALSE_STR;\n  const trueEventName = (eventNameToString ? eventNameToString(eventName) : eventName) + TRUE_STR;\n  const symbol = ZONE_SYMBOL_PREFIX + falseEventName;\n  const symbolCapture = ZONE_SYMBOL_PREFIX + trueEventName;\n  zoneSymbolEventNames[eventName] = {};\n  zoneSymbolEventNames[eventName][FALSE_STR] = symbol;\n  zoneSymbolEventNames[eventName][TRUE_STR] = symbolCapture;\n}\n\nfunction patchEventTarget(_global, api, apis, patchOptions) {\n  const ADD_EVENT_LISTENER = patchOptions && patchOptions.add || ADD_EVENT_LISTENER_STR;\n  const REMOVE_EVENT_LISTENER = patchOptions && patchOptions.rm || REMOVE_EVENT_LISTENER_STR;\n  const LISTENERS_EVENT_LISTENER = patchOptions && patchOptions.listeners || 'eventListeners';\n  const REMOVE_ALL_LISTENERS_EVENT_LISTENER = patchOptions && patchOptions.rmAll || 'removeAllListeners';\n  const zoneSymbolAddEventListener = zoneSymbol(ADD_EVENT_LISTENER);\n  const ADD_EVENT_LISTENER_SOURCE = '.' + ADD_EVENT_LISTENER + ':';\n  const PREPEND_EVENT_LISTENER = 'prependListener';\n  const PREPEND_EVENT_LISTENER_SOURCE = '.' + PREPEND_EVENT_LISTENER + ':';\n\n  const invokeTask = function (task, target, event) {\n    // for better performance, check isRemoved which is set\n    // by removeEventListener\n    if (task.isRemoved) {\n      return;\n    }\n\n    const delegate = task.callback;\n\n    if (typeof delegate === 'object' && delegate.handleEvent) {\n      // create the bind version of handleEvent when invoke\n      task.callback = event => delegate.handleEvent(event);\n\n      task.originalDelegate = delegate;\n    } // invoke static task.invoke\n    // need to try/catch error here, otherwise, the error in one event listener\n    // will break the executions of the other event listeners. Also error will\n    // not remove the event listener when `once` options is true.\n\n\n    let error;\n\n    try {\n      task.invoke(task, target, [event]);\n    } catch (err) {\n      error = err;\n    }\n\n    const options = task.options;\n\n    if (options && typeof options === 'object' && options.once) {\n      // if options.once is true, after invoke once remove listener here\n      // only browser need to do this, nodejs eventEmitter will cal removeListener\n      // inside EventEmitter.once\n      const delegate = task.originalDelegate ? task.originalDelegate : task.callback;\n      target[REMOVE_EVENT_LISTENER].call(target, event.type, delegate, options);\n    }\n\n    return error;\n  };\n\n  function globalCallback(context, event, isCapture) {\n    // https://github.com/angular/zone.js/issues/911, in IE, sometimes\n    // event will be undefined, so we need to use window.event\n    event = event || _global.event;\n\n    if (!event) {\n      return;\n    } // event.target is needed for Samsung TV and SourceBuffer\n    // || global is needed https://github.com/angular/zone.js/issues/190\n\n\n    const target = context || event.target || _global;\n    const tasks = target[zoneSymbolEventNames[event.type][isCapture ? TRUE_STR : FALSE_STR]];\n\n    if (tasks) {\n      const errors = []; // invoke all tasks which attached to current target with given event.type and capture = false\n      // for performance concern, if task.length === 1, just invoke\n\n      if (tasks.length === 1) {\n        const err = invokeTask(tasks[0], target, event);\n        err && errors.push(err);\n      } else {\n        // https://github.com/angular/zone.js/issues/836\n        // copy the tasks array before invoke, to avoid\n        // the callback will remove itself or other listener\n        const copyTasks = tasks.slice();\n\n        for (let i = 0; i < copyTasks.length; i++) {\n          if (event && event[IMMEDIATE_PROPAGATION_SYMBOL] === true) {\n            break;\n          }\n\n          const err = invokeTask(copyTasks[i], target, event);\n          err && errors.push(err);\n        }\n      } // Since there is only one error, we don't need to schedule microTask\n      // to throw the error.\n\n\n      if (errors.length === 1) {\n        throw errors[0];\n      } else {\n        for (let i = 0; i < errors.length; i++) {\n          const err = errors[i];\n          api.nativeScheduleMicroTask(() => {\n            throw err;\n          });\n        }\n      }\n    }\n  } // global shared zoneAwareCallback to handle all event callback with capture = false\n\n\n  const globalZoneAwareCallback = function (event) {\n    return globalCallback(this, event, false);\n  }; // global shared zoneAwareCallback to handle all event callback with capture = true\n\n\n  const globalZoneAwareCaptureCallback = function (event) {\n    return globalCallback(this, event, true);\n  };\n\n  function patchEventTargetMethods(obj, patchOptions) {\n    if (!obj) {\n      return false;\n    }\n\n    let useGlobalCallback = true;\n\n    if (patchOptions && patchOptions.useG !== undefined) {\n      useGlobalCallback = patchOptions.useG;\n    }\n\n    const validateHandler = patchOptions && patchOptions.vh;\n    let checkDuplicate = true;\n\n    if (patchOptions && patchOptions.chkDup !== undefined) {\n      checkDuplicate = patchOptions.chkDup;\n    }\n\n    let returnTarget = false;\n\n    if (patchOptions && patchOptions.rt !== undefined) {\n      returnTarget = patchOptions.rt;\n    }\n\n    let proto = obj;\n\n    while (proto && !proto.hasOwnProperty(ADD_EVENT_LISTENER)) {\n      proto = ObjectGetPrototypeOf(proto);\n    }\n\n    if (!proto && obj[ADD_EVENT_LISTENER]) {\n      // somehow we did not find it, but we can see it. This happens on IE for Window properties.\n      proto = obj;\n    }\n\n    if (!proto) {\n      return false;\n    }\n\n    if (proto[zoneSymbolAddEventListener]) {\n      return false;\n    }\n\n    const eventNameToString = patchOptions && patchOptions.eventNameToString; // a shared global taskData to pass data for scheduleEventTask\n    // so we do not need to create a new object just for pass some data\n\n    const taskData = {};\n    const nativeAddEventListener = proto[zoneSymbolAddEventListener] = proto[ADD_EVENT_LISTENER];\n    const nativeRemoveEventListener = proto[zoneSymbol(REMOVE_EVENT_LISTENER)] = proto[REMOVE_EVENT_LISTENER];\n    const nativeListeners = proto[zoneSymbol(LISTENERS_EVENT_LISTENER)] = proto[LISTENERS_EVENT_LISTENER];\n    const nativeRemoveAllListeners = proto[zoneSymbol(REMOVE_ALL_LISTENERS_EVENT_LISTENER)] = proto[REMOVE_ALL_LISTENERS_EVENT_LISTENER];\n    let nativePrependEventListener;\n\n    if (patchOptions && patchOptions.prepend) {\n      nativePrependEventListener = proto[zoneSymbol(patchOptions.prepend)] = proto[patchOptions.prepend];\n    }\n    /**\n     * This util function will build an option object with passive option\n     * to handle all possible input from the user.\n     */\n\n\n    function buildEventListenerOptions(options, passive) {\n      if (!passiveSupported && typeof options === 'object' && options) {\n        // doesn't support passive but user want to pass an object as options.\n        // this will not work on some old browser, so we just pass a boolean\n        // as useCapture parameter\n        return !!options.capture;\n      }\n\n      if (!passiveSupported || !passive) {\n        return options;\n      }\n\n      if (typeof options === 'boolean') {\n        return {\n          capture: options,\n          passive: true\n        };\n      }\n\n      if (!options) {\n        return {\n          passive: true\n        };\n      }\n\n      if (typeof options === 'object' && options.passive !== false) {\n        return { ...options,\n          passive: true\n        };\n      }\n\n      return options;\n    }\n\n    const customScheduleGlobal = function (task) {\n      // if there is already a task for the eventName + capture,\n      // just return, because we use the shared globalZoneAwareCallback here.\n      if (taskData.isExisting) {\n        return;\n      }\n\n      return nativeAddEventListener.call(taskData.target, taskData.eventName, taskData.capture ? globalZoneAwareCaptureCallback : globalZoneAwareCallback, taskData.options);\n    };\n\n    const customCancelGlobal = function (task) {\n      // if task is not marked as isRemoved, this call is directly\n      // from Zone.prototype.cancelTask, we should remove the task\n      // from tasksList of target first\n      if (!task.isRemoved) {\n        const symbolEventNames = zoneSymbolEventNames[task.eventName];\n        let symbolEventName;\n\n        if (symbolEventNames) {\n          symbolEventName = symbolEventNames[task.capture ? TRUE_STR : FALSE_STR];\n        }\n\n        const existingTasks = symbolEventName && task.target[symbolEventName];\n\n        if (existingTasks) {\n          for (let i = 0; i < existingTasks.length; i++) {\n            const existingTask = existingTasks[i];\n\n            if (existingTask === task) {\n              existingTasks.splice(i, 1); // set isRemoved to data for faster invokeTask check\n\n              task.isRemoved = true;\n\n              if (existingTasks.length === 0) {\n                // all tasks for the eventName + capture have gone,\n                // remove globalZoneAwareCallback and remove the task cache from target\n                task.allRemoved = true;\n                task.target[symbolEventName] = null;\n              }\n\n              break;\n            }\n          }\n        }\n      } // if all tasks for the eventName + capture have gone,\n      // we will really remove the global event callback,\n      // if not, return\n\n\n      if (!task.allRemoved) {\n        return;\n      }\n\n      return nativeRemoveEventListener.call(task.target, task.eventName, task.capture ? globalZoneAwareCaptureCallback : globalZoneAwareCallback, task.options);\n    };\n\n    const customScheduleNonGlobal = function (task) {\n      return nativeAddEventListener.call(taskData.target, taskData.eventName, task.invoke, taskData.options);\n    };\n\n    const customSchedulePrepend = function (task) {\n      return nativePrependEventListener.call(taskData.target, taskData.eventName, task.invoke, taskData.options);\n    };\n\n    const customCancelNonGlobal = function (task) {\n      return nativeRemoveEventListener.call(task.target, task.eventName, task.invoke, task.options);\n    };\n\n    const customSchedule = useGlobalCallback ? customScheduleGlobal : customScheduleNonGlobal;\n    const customCancel = useGlobalCallback ? customCancelGlobal : customCancelNonGlobal;\n\n    const compareTaskCallbackVsDelegate = function (task, delegate) {\n      const typeOfDelegate = typeof delegate;\n      return typeOfDelegate === 'function' && task.callback === delegate || typeOfDelegate === 'object' && task.originalDelegate === delegate;\n    };\n\n    const compare = patchOptions && patchOptions.diff ? patchOptions.diff : compareTaskCallbackVsDelegate;\n    const unpatchedEvents = Zone[zoneSymbol('UNPATCHED_EVENTS')];\n\n    const passiveEvents = _global[zoneSymbol('PASSIVE_EVENTS')];\n\n    const makeAddListener = function (nativeListener, addSource, customScheduleFn, customCancelFn, returnTarget = false, prepend = false) {\n      return function () {\n        const target = this || _global;\n        let eventName = arguments[0];\n\n        if (patchOptions && patchOptions.transferEventName) {\n          eventName = patchOptions.transferEventName(eventName);\n        }\n\n        let delegate = arguments[1];\n\n        if (!delegate) {\n          return nativeListener.apply(this, arguments);\n        }\n\n        if (isNode && eventName === 'uncaughtException') {\n          // don't patch uncaughtException of nodejs to prevent endless loop\n          return nativeListener.apply(this, arguments);\n        } // don't create the bind delegate function for handleEvent\n        // case here to improve addEventListener performance\n        // we will create the bind delegate when invoke\n\n\n        let isHandleEvent = false;\n\n        if (typeof delegate !== 'function') {\n          if (!delegate.handleEvent) {\n            return nativeListener.apply(this, arguments);\n          }\n\n          isHandleEvent = true;\n        }\n\n        if (validateHandler && !validateHandler(nativeListener, delegate, target, arguments)) {\n          return;\n        }\n\n        const passive = passiveSupported && !!passiveEvents && passiveEvents.indexOf(eventName) !== -1;\n        const options = buildEventListenerOptions(arguments[2], passive);\n        const signal = options && typeof options === 'object' && options.signal && typeof options.signal === 'object' ? options.signal : undefined;\n\n        if (signal?.aborted) {\n          // the signal is an aborted one, just return without attaching the event listener.\n          return;\n        }\n\n        if (unpatchedEvents) {\n          // check unpatched list\n          for (let i = 0; i < unpatchedEvents.length; i++) {\n            if (eventName === unpatchedEvents[i]) {\n              if (passive) {\n                return nativeListener.call(target, eventName, delegate, options);\n              } else {\n                return nativeListener.apply(this, arguments);\n              }\n            }\n          }\n        }\n\n        const capture = !options ? false : typeof options === 'boolean' ? true : options.capture;\n        const once = options && typeof options === 'object' ? options.once : false;\n        const zone = Zone.current;\n        let symbolEventNames = zoneSymbolEventNames[eventName];\n\n        if (!symbolEventNames) {\n          prepareEventNames(eventName, eventNameToString);\n          symbolEventNames = zoneSymbolEventNames[eventName];\n        }\n\n        const symbolEventName = symbolEventNames[capture ? TRUE_STR : FALSE_STR];\n        let existingTasks = target[symbolEventName];\n        let isExisting = false;\n\n        if (existingTasks) {\n          // already have task registered\n          isExisting = true;\n\n          if (checkDuplicate) {\n            for (let i = 0; i < existingTasks.length; i++) {\n              if (compare(existingTasks[i], delegate)) {\n                // same callback, same capture, same event name, just return\n                return;\n              }\n            }\n          }\n        } else {\n          existingTasks = target[symbolEventName] = [];\n        }\n\n        let source;\n        const constructorName = target.constructor['name'];\n        const targetSource = globalSources[constructorName];\n\n        if (targetSource) {\n          source = targetSource[eventName];\n        }\n\n        if (!source) {\n          source = constructorName + addSource + (eventNameToString ? eventNameToString(eventName) : eventName);\n        } // do not create a new object as task.data to pass those things\n        // just use the global shared one\n\n\n        taskData.options = options;\n\n        if (once) {\n          // if addEventListener with once options, we don't pass it to\n          // native addEventListener, instead we keep the once setting\n          // and handle ourselves.\n          taskData.options.once = false;\n        }\n\n        taskData.target = target;\n        taskData.capture = capture;\n        taskData.eventName = eventName;\n        taskData.isExisting = isExisting;\n        const data = useGlobalCallback ? OPTIMIZED_ZONE_EVENT_TASK_DATA : undefined; // keep taskData into data to allow onScheduleEventTask to access the task information\n\n        if (data) {\n          data.taskData = taskData;\n        }\n\n        if (signal) {\n          // if addEventListener with signal options, we don't pass it to\n          // native addEventListener, instead we keep the signal setting\n          // and handle ourselves.\n          taskData.options.signal = undefined;\n        }\n\n        const task = zone.scheduleEventTask(source, delegate, data, customScheduleFn, customCancelFn);\n\n        if (signal) {\n          // after task is scheduled, we need to store the signal back to task.options\n          taskData.options.signal = signal;\n          nativeListener.call(signal, 'abort', () => {\n            task.zone.cancelTask(task);\n          }, {\n            once: true\n          });\n        } // should clear taskData.target to avoid memory leak\n        // issue, https://github.com/angular/angular/issues/20442\n\n\n        taskData.target = null; // need to clear up taskData because it is a global object\n\n        if (data) {\n          data.taskData = null;\n        } // have to save those information to task in case\n        // application may call task.zone.cancelTask() directly\n\n\n        if (once) {\n          options.once = true;\n        }\n\n        if (!(!passiveSupported && typeof task.options === 'boolean')) {\n          // if not support passive, and we pass an option object\n          // to addEventListener, we should save the options to task\n          task.options = options;\n        }\n\n        task.target = target;\n        task.capture = capture;\n        task.eventName = eventName;\n\n        if (isHandleEvent) {\n          // save original delegate for compare to check duplicate\n          task.originalDelegate = delegate;\n        }\n\n        if (!prepend) {\n          existingTasks.push(task);\n        } else {\n          existingTasks.unshift(task);\n        }\n\n        if (returnTarget) {\n          return target;\n        }\n      };\n    };\n\n    proto[ADD_EVENT_LISTENER] = makeAddListener(nativeAddEventListener, ADD_EVENT_LISTENER_SOURCE, customSchedule, customCancel, returnTarget);\n\n    if (nativePrependEventListener) {\n      proto[PREPEND_EVENT_LISTENER] = makeAddListener(nativePrependEventListener, PREPEND_EVENT_LISTENER_SOURCE, customSchedulePrepend, customCancel, returnTarget, true);\n    }\n\n    proto[REMOVE_EVENT_LISTENER] = function () {\n      const target = this || _global;\n      let eventName = arguments[0];\n\n      if (patchOptions && patchOptions.transferEventName) {\n        eventName = patchOptions.transferEventName(eventName);\n      }\n\n      const options = arguments[2];\n      const capture = !options ? false : typeof options === 'boolean' ? true : options.capture;\n      const delegate = arguments[1];\n\n      if (!delegate) {\n        return nativeRemoveEventListener.apply(this, arguments);\n      }\n\n      if (validateHandler && !validateHandler(nativeRemoveEventListener, delegate, target, arguments)) {\n        return;\n      }\n\n      const symbolEventNames = zoneSymbolEventNames[eventName];\n      let symbolEventName;\n\n      if (symbolEventNames) {\n        symbolEventName = symbolEventNames[capture ? TRUE_STR : FALSE_STR];\n      }\n\n      const existingTasks = symbolEventName && target[symbolEventName];\n\n      if (existingTasks) {\n        for (let i = 0; i < existingTasks.length; i++) {\n          const existingTask = existingTasks[i];\n\n          if (compare(existingTask, delegate)) {\n            existingTasks.splice(i, 1); // set isRemoved to data for faster invokeTask check\n\n            existingTask.isRemoved = true;\n\n            if (existingTasks.length === 0) {\n              // all tasks for the eventName + capture have gone,\n              // remove globalZoneAwareCallback and remove the task cache from target\n              existingTask.allRemoved = true;\n              target[symbolEventName] = null; // in the target, we have an event listener which is added by on_property\n              // such as target.onclick = function() {}, so we need to clear this internal\n              // property too if all delegates with capture=false were removed\n              // https:// github.com/angular/angular/issues/31643\n              // https://github.com/angular/angular/issues/54581\n\n              if (!capture && typeof eventName === 'string') {\n                const onPropertySymbol = ZONE_SYMBOL_PREFIX + 'ON_PROPERTY' + eventName;\n                target[onPropertySymbol] = null;\n              }\n            }\n\n            existingTask.zone.cancelTask(existingTask);\n\n            if (returnTarget) {\n              return target;\n            }\n\n            return;\n          }\n        }\n      } // issue 930, didn't find the event name or callback\n      // from zone kept existingTasks, the callback maybe\n      // added outside of zone, we need to call native removeEventListener\n      // to try to remove it.\n\n\n      return nativeRemoveEventListener.apply(this, arguments);\n    };\n\n    proto[LISTENERS_EVENT_LISTENER] = function () {\n      const target = this || _global;\n      let eventName = arguments[0];\n\n      if (patchOptions && patchOptions.transferEventName) {\n        eventName = patchOptions.transferEventName(eventName);\n      }\n\n      const listeners = [];\n      const tasks = findEventTasks(target, eventNameToString ? eventNameToString(eventName) : eventName);\n\n      for (let i = 0; i < tasks.length; i++) {\n        const task = tasks[i];\n        let delegate = task.originalDelegate ? task.originalDelegate : task.callback;\n        listeners.push(delegate);\n      }\n\n      return listeners;\n    };\n\n    proto[REMOVE_ALL_LISTENERS_EVENT_LISTENER] = function () {\n      const target = this || _global;\n      let eventName = arguments[0];\n\n      if (!eventName) {\n        const keys = Object.keys(target);\n\n        for (let i = 0; i < keys.length; i++) {\n          const prop = keys[i];\n          const match = EVENT_NAME_SYMBOL_REGX.exec(prop);\n          let evtName = match && match[1]; // in nodejs EventEmitter, removeListener event is\n          // used for monitoring the removeListener call,\n          // so just keep removeListener eventListener until\n          // all other eventListeners are removed\n\n          if (evtName && evtName !== 'removeListener') {\n            this[REMOVE_ALL_LISTENERS_EVENT_LISTENER].call(this, evtName);\n          }\n        } // remove removeListener listener finally\n\n\n        this[REMOVE_ALL_LISTENERS_EVENT_LISTENER].call(this, 'removeListener');\n      } else {\n        if (patchOptions && patchOptions.transferEventName) {\n          eventName = patchOptions.transferEventName(eventName);\n        }\n\n        const symbolEventNames = zoneSymbolEventNames[eventName];\n\n        if (symbolEventNames) {\n          const symbolEventName = symbolEventNames[FALSE_STR];\n          const symbolCaptureEventName = symbolEventNames[TRUE_STR];\n          const tasks = target[symbolEventName];\n          const captureTasks = target[symbolCaptureEventName];\n\n          if (tasks) {\n            const removeTasks = tasks.slice();\n\n            for (let i = 0; i < removeTasks.length; i++) {\n              const task = removeTasks[i];\n              let delegate = task.originalDelegate ? task.originalDelegate : task.callback;\n              this[REMOVE_EVENT_LISTENER].call(this, eventName, delegate, task.options);\n            }\n          }\n\n          if (captureTasks) {\n            const removeTasks = captureTasks.slice();\n\n            for (let i = 0; i < removeTasks.length; i++) {\n              const task = removeTasks[i];\n              let delegate = task.originalDelegate ? task.originalDelegate : task.callback;\n              this[REMOVE_EVENT_LISTENER].call(this, eventName, delegate, task.options);\n            }\n          }\n        }\n      }\n\n      if (returnTarget) {\n        return this;\n      }\n    }; // for native toString patch\n\n\n    attachOriginToPatched(proto[ADD_EVENT_LISTENER], nativeAddEventListener);\n    attachOriginToPatched(proto[REMOVE_EVENT_LISTENER], nativeRemoveEventListener);\n\n    if (nativeRemoveAllListeners) {\n      attachOriginToPatched(proto[REMOVE_ALL_LISTENERS_EVENT_LISTENER], nativeRemoveAllListeners);\n    }\n\n    if (nativeListeners) {\n      attachOriginToPatched(proto[LISTENERS_EVENT_LISTENER], nativeListeners);\n    }\n\n    return true;\n  }\n\n  let results = [];\n\n  for (let i = 0; i < apis.length; i++) {\n    results[i] = patchEventTargetMethods(apis[i], patchOptions);\n  }\n\n  return results;\n}\n\nfunction findEventTasks(target, eventName) {\n  if (!eventName) {\n    const foundTasks = [];\n\n    for (let prop in target) {\n      const match = EVENT_NAME_SYMBOL_REGX.exec(prop);\n      let evtName = match && match[1];\n\n      if (evtName && (!eventName || evtName === eventName)) {\n        const tasks = target[prop];\n\n        if (tasks) {\n          for (let i = 0; i < tasks.length; i++) {\n            foundTasks.push(tasks[i]);\n          }\n        }\n      }\n    }\n\n    return foundTasks;\n  }\n\n  let symbolEventName = zoneSymbolEventNames[eventName];\n\n  if (!symbolEventName) {\n    prepareEventNames(eventName);\n    symbolEventName = zoneSymbolEventNames[eventName];\n  }\n\n  const captureFalseTasks = target[symbolEventName[FALSE_STR]];\n  const captureTrueTasks = target[symbolEventName[TRUE_STR]];\n\n  if (!captureFalseTasks) {\n    return captureTrueTasks ? captureTrueTasks.slice() : [];\n  } else {\n    return captureTrueTasks ? captureFalseTasks.concat(captureTrueTasks) : captureFalseTasks.slice();\n  }\n}\n\nfunction patchEventPrototype(global, api) {\n  const Event = global['Event'];\n\n  if (Event && Event.prototype) {\n    api.patchMethod(Event.prototype, 'stopImmediatePropagation', delegate => function (self, args) {\n      self[IMMEDIATE_PROPAGATION_SYMBOL] = true; // we need to call the native stopImmediatePropagation\n      // in case in some hybrid application, some part of\n      // application will be controlled by zone, some are not\n\n      delegate && delegate.apply(self, args);\n    });\n  }\n}\n/**\n * @fileoverview\n * @suppress {missingRequire}\n */\n\n\nfunction patchQueueMicrotask(global, api) {\n  api.patchMethod(global, 'queueMicrotask', delegate => {\n    return function (self, args) {\n      Zone.current.scheduleMicroTask('queueMicrotask', args[0]);\n    };\n  });\n}\n/**\n * @fileoverview\n * @suppress {missingRequire}\n */\n\n\nconst taskSymbol = zoneSymbol('zoneTask');\n\nfunction patchTimer(window, setName, cancelName, nameSuffix) {\n  let setNative = null;\n  let clearNative = null;\n  setName += nameSuffix;\n  cancelName += nameSuffix;\n  const tasksByHandleId = {};\n\n  function scheduleTask(task) {\n    const data = task.data;\n\n    data.args[0] = function () {\n      return task.invoke.apply(this, arguments);\n    };\n\n    data.handleId = setNative.apply(window, data.args);\n    return task;\n  }\n\n  function clearTask(task) {\n    return clearNative.call(window, task.data.handleId);\n  }\n\n  setNative = patchMethod(window, setName, delegate => function (self, args) {\n    if (typeof args[0] === 'function') {\n      const options = {\n        isPeriodic: nameSuffix === 'Interval',\n        delay: nameSuffix === 'Timeout' || nameSuffix === 'Interval' ? args[1] || 0 : undefined,\n        args: args\n      };\n      const callback = args[0];\n\n      args[0] = function timer() {\n        try {\n          return callback.apply(this, arguments);\n        } finally {\n          // issue-934, task will be cancelled\n          // even it is a periodic task such as\n          // setInterval\n          // https://github.com/angular/angular/issues/40387\n          // Cleanup tasksByHandleId should be handled before scheduleTask\n          // Since some zoneSpec may intercept and doesn't trigger\n          // scheduleFn(scheduleTask) provided here.\n          if (!options.isPeriodic) {\n            if (typeof options.handleId === 'number') {\n              // in non-nodejs env, we remove timerId\n              // from local cache\n              delete tasksByHandleId[options.handleId];\n            } else if (options.handleId) {\n              // Node returns complex objects as handleIds\n              // we remove task reference from timer object\n              options.handleId[taskSymbol] = null;\n            }\n          }\n        }\n      };\n\n      const task = scheduleMacroTaskWithCurrentZone(setName, args[0], options, scheduleTask, clearTask);\n\n      if (!task) {\n        return task;\n      } // Node.js must additionally support the ref and unref functions.\n\n\n      const handle = task.data.handleId;\n\n      if (typeof handle === 'number') {\n        // for non nodejs env, we save handleId: task\n        // mapping in local cache for clearTimeout\n        tasksByHandleId[handle] = task;\n      } else if (handle) {\n        // for nodejs env, we save task\n        // reference in timerId Object for clearTimeout\n        handle[taskSymbol] = task;\n      } // check whether handle is null, because some polyfill or browser\n      // may return undefined from setTimeout/setInterval/setImmediate/requestAnimationFrame\n\n\n      if (handle && handle.ref && handle.unref && typeof handle.ref === 'function' && typeof handle.unref === 'function') {\n        task.ref = handle.ref.bind(handle);\n        task.unref = handle.unref.bind(handle);\n      }\n\n      if (typeof handle === 'number' || handle) {\n        return handle;\n      }\n\n      return task;\n    } else {\n      // cause an error by calling it directly.\n      return delegate.apply(window, args);\n    }\n  });\n  clearNative = patchMethod(window, cancelName, delegate => function (self, args) {\n    const id = args[0];\n    let task;\n\n    if (typeof id === 'number') {\n      // non nodejs env.\n      task = tasksByHandleId[id];\n    } else {\n      // nodejs env.\n      task = id && id[taskSymbol]; // other environments.\n\n      if (!task) {\n        task = id;\n      }\n    }\n\n    if (task && typeof task.type === 'string') {\n      if (task.state !== 'notScheduled' && (task.cancelFn && task.data.isPeriodic || task.runCount === 0)) {\n        if (typeof id === 'number') {\n          delete tasksByHandleId[id];\n        } else if (id) {\n          id[taskSymbol] = null;\n        } // Do not cancel already canceled functions\n\n\n        task.zone.cancelTask(task);\n      }\n    } else {\n      // cause an error by calling it directly.\n      delegate.apply(window, args);\n    }\n  });\n}\n\nfunction patchCustomElements(_global, api) {\n  const {\n    isBrowser,\n    isMix\n  } = api.getGlobalObjects();\n\n  if (!isBrowser && !isMix || !_global['customElements'] || !('customElements' in _global)) {\n    return;\n  } // https://html.spec.whatwg.org/multipage/custom-elements.html#concept-custom-element-definition-lifecycle-callbacks\n\n\n  const callbacks = ['connectedCallback', 'disconnectedCallback', 'adoptedCallback', 'attributeChangedCallback', 'formAssociatedCallback', 'formDisabledCallback', 'formResetCallback', 'formStateRestoreCallback'];\n  api.patchCallbacks(api, _global.customElements, 'customElements', 'define', callbacks);\n}\n\nfunction eventTargetPatch(_global, api) {\n  if (Zone[api.symbol('patchEventTarget')]) {\n    // EventTarget is already patched.\n    return;\n  }\n\n  const {\n    eventNames,\n    zoneSymbolEventNames,\n    TRUE_STR,\n    FALSE_STR,\n    ZONE_SYMBOL_PREFIX\n  } = api.getGlobalObjects(); //  predefine all __zone_symbol__ + eventName + true/false string\n\n  for (let i = 0; i < eventNames.length; i++) {\n    const eventName = eventNames[i];\n    const falseEventName = eventName + FALSE_STR;\n    const trueEventName = eventName + TRUE_STR;\n    const symbol = ZONE_SYMBOL_PREFIX + falseEventName;\n    const symbolCapture = ZONE_SYMBOL_PREFIX + trueEventName;\n    zoneSymbolEventNames[eventName] = {};\n    zoneSymbolEventNames[eventName][FALSE_STR] = symbol;\n    zoneSymbolEventNames[eventName][TRUE_STR] = symbolCapture;\n  }\n\n  const EVENT_TARGET = _global['EventTarget'];\n\n  if (!EVENT_TARGET || !EVENT_TARGET.prototype) {\n    return;\n  }\n\n  api.patchEventTarget(_global, api, [EVENT_TARGET && EVENT_TARGET.prototype]);\n  return true;\n}\n\nfunction patchEvent(global, api) {\n  api.patchEventPrototype(global, api);\n}\n/**\n * @fileoverview\n * @suppress {globalThis}\n */\n\n\nfunction filterProperties(target, onProperties, ignoreProperties) {\n  if (!ignoreProperties || ignoreProperties.length === 0) {\n    return onProperties;\n  }\n\n  const tip = ignoreProperties.filter(ip => ip.target === target);\n\n  if (!tip || tip.length === 0) {\n    return onProperties;\n  }\n\n  const targetIgnoreProperties = tip[0].ignoreProperties;\n  return onProperties.filter(op => targetIgnoreProperties.indexOf(op) === -1);\n}\n\nfunction patchFilteredProperties(target, onProperties, ignoreProperties, prototype) {\n  // check whether target is available, sometimes target will be undefined\n  // because different browser or some 3rd party plugin.\n  if (!target) {\n    return;\n  }\n\n  const filteredProperties = filterProperties(target, onProperties, ignoreProperties);\n  patchOnProperties(target, filteredProperties, prototype);\n}\n/**\n * Get all event name properties which the event name startsWith `on`\n * from the target object itself, inherited properties are not considered.\n */\n\n\nfunction getOnEventNames(target) {\n  return Object.getOwnPropertyNames(target).filter(name => name.startsWith('on') && name.length > 2).map(name => name.substring(2));\n}\n\nfunction propertyDescriptorPatch(api, _global) {\n  if (isNode && !isMix) {\n    return;\n  }\n\n  if (Zone[api.symbol('patchEvents')]) {\n    // events are already been patched by legacy patch.\n    return;\n  }\n\n  const ignoreProperties = _global['__Zone_ignore_on_properties']; // for browsers that we can patch the descriptor:  Chrome & Firefox\n\n  let patchTargets = [];\n\n  if (isBrowser) {\n    const internalWindow = window;\n    patchTargets = patchTargets.concat(['Document', 'SVGElement', 'Element', 'HTMLElement', 'HTMLBodyElement', 'HTMLMediaElement', 'HTMLFrameSetElement', 'HTMLFrameElement', 'HTMLIFrameElement', 'HTMLMarqueeElement', 'Worker']);\n    const ignoreErrorProperties = isIE() ? [{\n      target: internalWindow,\n      ignoreProperties: ['error']\n    }] : []; // in IE/Edge, onProp not exist in window object, but in WindowPrototype\n    // so we need to pass WindowPrototype to check onProp exist or not\n\n    patchFilteredProperties(internalWindow, getOnEventNames(internalWindow), ignoreProperties ? ignoreProperties.concat(ignoreErrorProperties) : ignoreProperties, ObjectGetPrototypeOf(internalWindow));\n  }\n\n  patchTargets = patchTargets.concat(['XMLHttpRequest', 'XMLHttpRequestEventTarget', 'IDBIndex', 'IDBRequest', 'IDBOpenDBRequest', 'IDBDatabase', 'IDBTransaction', 'IDBCursor', 'WebSocket']);\n\n  for (let i = 0; i < patchTargets.length; i++) {\n    const target = _global[patchTargets[i]];\n    target && target.prototype && patchFilteredProperties(target.prototype, getOnEventNames(target.prototype), ignoreProperties);\n  }\n}\n/**\n * @fileoverview\n * @suppress {missingRequire}\n */\n\n\nfunction patchBrowser(Zone) {\n  Zone.__load_patch('legacy', global => {\n    const legacyPatch = global[Zone.__symbol__('legacyPatch')];\n\n    if (legacyPatch) {\n      legacyPatch();\n    }\n  });\n\n  Zone.__load_patch('timers', global => {\n    const set = 'set';\n    const clear = 'clear';\n    patchTimer(global, set, clear, 'Timeout');\n    patchTimer(global, set, clear, 'Interval');\n    patchTimer(global, set, clear, 'Immediate');\n  });\n\n  Zone.__load_patch('requestAnimationFrame', global => {\n    patchTimer(global, 'request', 'cancel', 'AnimationFrame');\n    patchTimer(global, 'mozRequest', 'mozCancel', 'AnimationFrame');\n    patchTimer(global, 'webkitRequest', 'webkitCancel', 'AnimationFrame');\n  });\n\n  Zone.__load_patch('blocking', (global, Zone) => {\n    const blockingMethods = ['alert', 'prompt', 'confirm'];\n\n    for (let i = 0; i < blockingMethods.length; i++) {\n      const name = blockingMethods[i];\n      patchMethod(global, name, (delegate, symbol, name) => {\n        return function (s, args) {\n          return Zone.current.run(delegate, global, args, name);\n        };\n      });\n    }\n  });\n\n  Zone.__load_patch('EventTarget', (global, Zone, api) => {\n    patchEvent(global, api);\n    eventTargetPatch(global, api); // patch XMLHttpRequestEventTarget's addEventListener/removeEventListener\n\n    const XMLHttpRequestEventTarget = global['XMLHttpRequestEventTarget'];\n\n    if (XMLHttpRequestEventTarget && XMLHttpRequestEventTarget.prototype) {\n      api.patchEventTarget(global, api, [XMLHttpRequestEventTarget.prototype]);\n    }\n  });\n\n  Zone.__load_patch('MutationObserver', (global, Zone, api) => {\n    patchClass('MutationObserver');\n    patchClass('WebKitMutationObserver');\n  });\n\n  Zone.__load_patch('IntersectionObserver', (global, Zone, api) => {\n    patchClass('IntersectionObserver');\n  });\n\n  Zone.__load_patch('FileReader', (global, Zone, api) => {\n    patchClass('FileReader');\n  });\n\n  Zone.__load_patch('on_property', (global, Zone, api) => {\n    propertyDescriptorPatch(api, global);\n  });\n\n  Zone.__load_patch('customElements', (global, Zone, api) => {\n    patchCustomElements(global, api);\n  });\n\n  Zone.__load_patch('XHR', (global, Zone) => {\n    // Treat XMLHttpRequest as a macrotask.\n    patchXHR(global);\n    const XHR_TASK = zoneSymbol('xhrTask');\n    const XHR_SYNC = zoneSymbol('xhrSync');\n    const XHR_LISTENER = zoneSymbol('xhrListener');\n    const XHR_SCHEDULED = zoneSymbol('xhrScheduled');\n    const XHR_URL = zoneSymbol('xhrURL');\n    const XHR_ERROR_BEFORE_SCHEDULED = zoneSymbol('xhrErrorBeforeScheduled');\n\n    function patchXHR(window) {\n      const XMLHttpRequest = window['XMLHttpRequest'];\n\n      if (!XMLHttpRequest) {\n        // XMLHttpRequest is not available in service worker\n        return;\n      }\n\n      const XMLHttpRequestPrototype = XMLHttpRequest.prototype;\n\n      function findPendingTask(target) {\n        return target[XHR_TASK];\n      }\n\n      let oriAddListener = XMLHttpRequestPrototype[ZONE_SYMBOL_ADD_EVENT_LISTENER];\n      let oriRemoveListener = XMLHttpRequestPrototype[ZONE_SYMBOL_REMOVE_EVENT_LISTENER];\n\n      if (!oriAddListener) {\n        const XMLHttpRequestEventTarget = window['XMLHttpRequestEventTarget'];\n\n        if (XMLHttpRequestEventTarget) {\n          const XMLHttpRequestEventTargetPrototype = XMLHttpRequestEventTarget.prototype;\n          oriAddListener = XMLHttpRequestEventTargetPrototype[ZONE_SYMBOL_ADD_EVENT_LISTENER];\n          oriRemoveListener = XMLHttpRequestEventTargetPrototype[ZONE_SYMBOL_REMOVE_EVENT_LISTENER];\n        }\n      }\n\n      const READY_STATE_CHANGE = 'readystatechange';\n      const SCHEDULED = 'scheduled';\n\n      function scheduleTask(task) {\n        const data = task.data;\n        const target = data.target;\n        target[XHR_SCHEDULED] = false;\n        target[XHR_ERROR_BEFORE_SCHEDULED] = false; // remove existing event listener\n\n        const listener = target[XHR_LISTENER];\n\n        if (!oriAddListener) {\n          oriAddListener = target[ZONE_SYMBOL_ADD_EVENT_LISTENER];\n          oriRemoveListener = target[ZONE_SYMBOL_REMOVE_EVENT_LISTENER];\n        }\n\n        if (listener) {\n          oriRemoveListener.call(target, READY_STATE_CHANGE, listener);\n        }\n\n        const newListener = target[XHR_LISTENER] = () => {\n          if (target.readyState === target.DONE) {\n            // sometimes on some browsers XMLHttpRequest will fire onreadystatechange with\n            // readyState=4 multiple times, so we need to check task state here\n            if (!data.aborted && target[XHR_SCHEDULED] && task.state === SCHEDULED) {\n              // check whether the xhr has registered onload listener\n              // if that is the case, the task should invoke after all\n              // onload listeners finish.\n              // Also if the request failed without response (status = 0), the load event handler\n              // will not be triggered, in that case, we should also invoke the placeholder callback\n              // to close the XMLHttpRequest::send macroTask.\n              // https://github.com/angular/angular/issues/38795\n              const loadTasks = target[Zone.__symbol__('loadfalse')];\n\n              if (target.status !== 0 && loadTasks && loadTasks.length > 0) {\n                const oriInvoke = task.invoke;\n\n                task.invoke = function () {\n                  // need to load the tasks again, because in other\n                  // load listener, they may remove themselves\n                  const loadTasks = target[Zone.__symbol__('loadfalse')];\n\n                  for (let i = 0; i < loadTasks.length; i++) {\n                    if (loadTasks[i] === task) {\n                      loadTasks.splice(i, 1);\n                    }\n                  }\n\n                  if (!data.aborted && task.state === SCHEDULED) {\n                    oriInvoke.call(task);\n                  }\n                };\n\n                loadTasks.push(task);\n              } else {\n                task.invoke();\n              }\n            } else if (!data.aborted && target[XHR_SCHEDULED] === false) {\n              // error occurs when xhr.send()\n              target[XHR_ERROR_BEFORE_SCHEDULED] = true;\n            }\n          }\n        };\n\n        oriAddListener.call(target, READY_STATE_CHANGE, newListener);\n        const storedTask = target[XHR_TASK];\n\n        if (!storedTask) {\n          target[XHR_TASK] = task;\n        }\n\n        sendNative.apply(target, data.args);\n        target[XHR_SCHEDULED] = true;\n        return task;\n      }\n\n      function placeholderCallback() {}\n\n      function clearTask(task) {\n        const data = task.data; // Note - ideally, we would call data.target.removeEventListener here, but it's too late\n        // to prevent it from firing. So instead, we store info for the event listener.\n\n        data.aborted = true;\n        return abortNative.apply(data.target, data.args);\n      }\n\n      const openNative = patchMethod(XMLHttpRequestPrototype, 'open', () => function (self, args) {\n        self[XHR_SYNC] = args[2] == false;\n        self[XHR_URL] = args[1];\n        return openNative.apply(self, args);\n      });\n      const XMLHTTPREQUEST_SOURCE = 'XMLHttpRequest.send';\n      const fetchTaskAborting = zoneSymbol('fetchTaskAborting');\n      const fetchTaskScheduling = zoneSymbol('fetchTaskScheduling');\n      const sendNative = patchMethod(XMLHttpRequestPrototype, 'send', () => function (self, args) {\n        if (Zone.current[fetchTaskScheduling] === true) {\n          // a fetch is scheduling, so we are using xhr to polyfill fetch\n          // and because we already schedule macroTask for fetch, we should\n          // not schedule a macroTask for xhr again\n          return sendNative.apply(self, args);\n        }\n\n        if (self[XHR_SYNC]) {\n          // if the XHR is sync there is no task to schedule, just execute the code.\n          return sendNative.apply(self, args);\n        } else {\n          const options = {\n            target: self,\n            url: self[XHR_URL],\n            isPeriodic: false,\n            args: args,\n            aborted: false\n          };\n          const task = scheduleMacroTaskWithCurrentZone(XMLHTTPREQUEST_SOURCE, placeholderCallback, options, scheduleTask, clearTask);\n\n          if (self && self[XHR_ERROR_BEFORE_SCHEDULED] === true && !options.aborted && task.state === SCHEDULED) {\n            // xhr request throw error when send\n            // we should invoke task instead of leaving a scheduled\n            // pending macroTask\n            task.invoke();\n          }\n        }\n      });\n      const abortNative = patchMethod(XMLHttpRequestPrototype, 'abort', () => function (self, args) {\n        const task = findPendingTask(self);\n\n        if (task && typeof task.type == 'string') {\n          // If the XHR has already completed, do nothing.\n          // If the XHR has already been aborted, do nothing.\n          // Fix #569, call abort multiple times before done will cause\n          // macroTask task count be negative number\n          if (task.cancelFn == null || task.data && task.data.aborted) {\n            return;\n          }\n\n          task.zone.cancelTask(task);\n        } else if (Zone.current[fetchTaskAborting] === true) {\n          // the abort is called from fetch polyfill, we need to call native abort of XHR.\n          return abortNative.apply(self, args);\n        } // Otherwise, we are trying to abort an XHR which has not yet been sent, so there is no\n        // task\n        // to cancel. Do nothing.\n\n      });\n    }\n  });\n\n  Zone.__load_patch('geolocation', global => {\n    /// GEO_LOCATION\n    if (global['navigator'] && global['navigator'].geolocation) {\n      patchPrototype(global['navigator'].geolocation, ['getCurrentPosition', 'watchPosition']);\n    }\n  });\n\n  Zone.__load_patch('PromiseRejectionEvent', (global, Zone) => {\n    // handle unhandled promise rejection\n    function findPromiseRejectionHandler(evtName) {\n      return function (e) {\n        const eventTasks = findEventTasks(global, evtName);\n        eventTasks.forEach(eventTask => {\n          // windows has added unhandledrejection event listener\n          // trigger the event listener\n          const PromiseRejectionEvent = global['PromiseRejectionEvent'];\n\n          if (PromiseRejectionEvent) {\n            const evt = new PromiseRejectionEvent(evtName, {\n              promise: e.promise,\n              reason: e.rejection\n            });\n            eventTask.invoke(evt);\n          }\n        });\n      };\n    }\n\n    if (global['PromiseRejectionEvent']) {\n      Zone[zoneSymbol('unhandledPromiseRejectionHandler')] = findPromiseRejectionHandler('unhandledrejection');\n      Zone[zoneSymbol('rejectionHandledHandler')] = findPromiseRejectionHandler('rejectionhandled');\n    }\n  });\n\n  Zone.__load_patch('queueMicrotask', (global, Zone, api) => {\n    patchQueueMicrotask(global, api);\n  });\n}\n\nfunction patchPromise(Zone) {\n  Zone.__load_patch('ZoneAwarePromise', (global, Zone, api) => {\n    const ObjectGetOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n    const ObjectDefineProperty = Object.defineProperty;\n\n    function readableObjectToString(obj) {\n      if (obj && obj.toString === Object.prototype.toString) {\n        const className = obj.constructor && obj.constructor.name;\n        return (className ? className : '') + ': ' + JSON.stringify(obj);\n      }\n\n      return obj ? obj.toString() : Object.prototype.toString.call(obj);\n    }\n\n    const __symbol__ = api.symbol;\n    const _uncaughtPromiseErrors = [];\n    const isDisableWrappingUncaughtPromiseRejection = global[__symbol__('DISABLE_WRAPPING_UNCAUGHT_PROMISE_REJECTION')] !== false;\n\n    const symbolPromise = __symbol__('Promise');\n\n    const symbolThen = __symbol__('then');\n\n    const creationTrace = '__creationTrace__';\n\n    api.onUnhandledError = e => {\n      if (api.showUncaughtError()) {\n        const rejection = e && e.rejection;\n\n        if (rejection) {\n          console.error('Unhandled Promise rejection:', rejection instanceof Error ? rejection.message : rejection, '; Zone:', e.zone.name, '; Task:', e.task && e.task.source, '; Value:', rejection, rejection instanceof Error ? rejection.stack : undefined);\n        } else {\n          console.error(e);\n        }\n      }\n    };\n\n    api.microtaskDrainDone = () => {\n      while (_uncaughtPromiseErrors.length) {\n        const uncaughtPromiseError = _uncaughtPromiseErrors.shift();\n\n        try {\n          uncaughtPromiseError.zone.runGuarded(() => {\n            if (uncaughtPromiseError.throwOriginal) {\n              throw uncaughtPromiseError.rejection;\n            }\n\n            throw uncaughtPromiseError;\n          });\n        } catch (error) {\n          handleUnhandledRejection(error);\n        }\n      }\n    };\n\n    const UNHANDLED_PROMISE_REJECTION_HANDLER_SYMBOL = __symbol__('unhandledPromiseRejectionHandler');\n\n    function handleUnhandledRejection(e) {\n      api.onUnhandledError(e);\n\n      try {\n        const handler = Zone[UNHANDLED_PROMISE_REJECTION_HANDLER_SYMBOL];\n\n        if (typeof handler === 'function') {\n          handler.call(this, e);\n        }\n      } catch (err) {}\n    }\n\n    function isThenable(value) {\n      return value && value.then;\n    }\n\n    function forwardResolution(value) {\n      return value;\n    }\n\n    function forwardRejection(rejection) {\n      return ZoneAwarePromise.reject(rejection);\n    }\n\n    const symbolState = __symbol__('state');\n\n    const symbolValue = __symbol__('value');\n\n    const symbolFinally = __symbol__('finally');\n\n    const symbolParentPromiseValue = __symbol__('parentPromiseValue');\n\n    const symbolParentPromiseState = __symbol__('parentPromiseState');\n\n    const source = 'Promise.then';\n    const UNRESOLVED = null;\n    const RESOLVED = true;\n    const REJECTED = false;\n    const REJECTED_NO_CATCH = 0;\n\n    function makeResolver(promise, state) {\n      return v => {\n        try {\n          resolvePromise(promise, state, v);\n        } catch (err) {\n          resolvePromise(promise, false, err);\n        } // Do not return value or you will break the Promise spec.\n\n      };\n    }\n\n    const once = function () {\n      let wasCalled = false;\n      return function wrapper(wrappedFunction) {\n        return function () {\n          if (wasCalled) {\n            return;\n          }\n\n          wasCalled = true;\n          wrappedFunction.apply(null, arguments);\n        };\n      };\n    };\n\n    const TYPE_ERROR = 'Promise resolved with itself';\n\n    const CURRENT_TASK_TRACE_SYMBOL = __symbol__('currentTaskTrace'); // Promise Resolution\n\n\n    function resolvePromise(promise, state, value) {\n      const onceWrapper = once();\n\n      if (promise === value) {\n        throw new TypeError(TYPE_ERROR);\n      }\n\n      if (promise[symbolState] === UNRESOLVED) {\n        // should only get value.then once based on promise spec.\n        let then = null;\n\n        try {\n          if (typeof value === 'object' || typeof value === 'function') {\n            then = value && value.then;\n          }\n        } catch (err) {\n          onceWrapper(() => {\n            resolvePromise(promise, false, err);\n          })();\n          return promise;\n        } // if (value instanceof ZoneAwarePromise) {\n\n\n        if (state !== REJECTED && value instanceof ZoneAwarePromise && value.hasOwnProperty(symbolState) && value.hasOwnProperty(symbolValue) && value[symbolState] !== UNRESOLVED) {\n          clearRejectedNoCatch(value);\n          resolvePromise(promise, value[symbolState], value[symbolValue]);\n        } else if (state !== REJECTED && typeof then === 'function') {\n          try {\n            then.call(value, onceWrapper(makeResolver(promise, state)), onceWrapper(makeResolver(promise, false)));\n          } catch (err) {\n            onceWrapper(() => {\n              resolvePromise(promise, false, err);\n            })();\n          }\n        } else {\n          promise[symbolState] = state;\n          const queue = promise[symbolValue];\n          promise[symbolValue] = value;\n\n          if (promise[symbolFinally] === symbolFinally) {\n            // the promise is generated by Promise.prototype.finally\n            if (state === RESOLVED) {\n              // the state is resolved, should ignore the value\n              // and use parent promise value\n              promise[symbolState] = promise[symbolParentPromiseState];\n              promise[symbolValue] = promise[symbolParentPromiseValue];\n            }\n          } // record task information in value when error occurs, so we can\n          // do some additional work such as render longStackTrace\n\n\n          if (state === REJECTED && value instanceof Error) {\n            // check if longStackTraceZone is here\n            const trace = Zone.currentTask && Zone.currentTask.data && Zone.currentTask.data[creationTrace];\n\n            if (trace) {\n              // only keep the long stack trace into error when in longStackTraceZone\n              ObjectDefineProperty(value, CURRENT_TASK_TRACE_SYMBOL, {\n                configurable: true,\n                enumerable: false,\n                writable: true,\n                value: trace\n              });\n            }\n          }\n\n          for (let i = 0; i < queue.length;) {\n            scheduleResolveOrReject(promise, queue[i++], queue[i++], queue[i++], queue[i++]);\n          }\n\n          if (queue.length == 0 && state == REJECTED) {\n            promise[symbolState] = REJECTED_NO_CATCH;\n            let uncaughtPromiseError = value;\n\n            try {\n              // Here we throws a new Error to print more readable error log\n              // and if the value is not an error, zone.js builds an `Error`\n              // Object here to attach the stack information.\n              throw new Error('Uncaught (in promise): ' + readableObjectToString(value) + (value && value.stack ? '\\n' + value.stack : ''));\n            } catch (err) {\n              uncaughtPromiseError = err;\n            }\n\n            if (isDisableWrappingUncaughtPromiseRejection) {\n              // If disable wrapping uncaught promise reject\n              // use the value instead of wrapping it.\n              uncaughtPromiseError.throwOriginal = true;\n            }\n\n            uncaughtPromiseError.rejection = value;\n            uncaughtPromiseError.promise = promise;\n            uncaughtPromiseError.zone = Zone.current;\n            uncaughtPromiseError.task = Zone.currentTask;\n\n            _uncaughtPromiseErrors.push(uncaughtPromiseError);\n\n            api.scheduleMicroTask(); // to make sure that it is running\n          }\n        }\n      } // Resolving an already resolved promise is a noop.\n\n\n      return promise;\n    }\n\n    const REJECTION_HANDLED_HANDLER = __symbol__('rejectionHandledHandler');\n\n    function clearRejectedNoCatch(promise) {\n      if (promise[symbolState] === REJECTED_NO_CATCH) {\n        // if the promise is rejected no catch status\n        // and queue.length > 0, means there is a error handler\n        // here to handle the rejected promise, we should trigger\n        // windows.rejectionhandled eventHandler or nodejs rejectionHandled\n        // eventHandler\n        try {\n          const handler = Zone[REJECTION_HANDLED_HANDLER];\n\n          if (handler && typeof handler === 'function') {\n            handler.call(this, {\n              rejection: promise[symbolValue],\n              promise: promise\n            });\n          }\n        } catch (err) {}\n\n        promise[symbolState] = REJECTED;\n\n        for (let i = 0; i < _uncaughtPromiseErrors.length; i++) {\n          if (promise === _uncaughtPromiseErrors[i].promise) {\n            _uncaughtPromiseErrors.splice(i, 1);\n          }\n        }\n      }\n    }\n\n    function scheduleResolveOrReject(promise, zone, chainPromise, onFulfilled, onRejected) {\n      clearRejectedNoCatch(promise);\n      const promiseState = promise[symbolState];\n      const delegate = promiseState ? typeof onFulfilled === 'function' ? onFulfilled : forwardResolution : typeof onRejected === 'function' ? onRejected : forwardRejection;\n      zone.scheduleMicroTask(source, () => {\n        try {\n          const parentPromiseValue = promise[symbolValue];\n          const isFinallyPromise = !!chainPromise && symbolFinally === chainPromise[symbolFinally];\n\n          if (isFinallyPromise) {\n            // if the promise is generated from finally call, keep parent promise's state and value\n            chainPromise[symbolParentPromiseValue] = parentPromiseValue;\n            chainPromise[symbolParentPromiseState] = promiseState;\n          } // should not pass value to finally callback\n\n\n          const value = zone.run(delegate, undefined, isFinallyPromise && delegate !== forwardRejection && delegate !== forwardResolution ? [] : [parentPromiseValue]);\n          resolvePromise(chainPromise, true, value);\n        } catch (error) {\n          // if error occurs, should always return this error\n          resolvePromise(chainPromise, false, error);\n        }\n      }, chainPromise);\n    }\n\n    const ZONE_AWARE_PROMISE_TO_STRING = 'function ZoneAwarePromise() { [native code] }';\n\n    const noop = function () {};\n\n    const AggregateError = global.AggregateError;\n\n    class ZoneAwarePromise {\n      static toString() {\n        return ZONE_AWARE_PROMISE_TO_STRING;\n      }\n\n      static resolve(value) {\n        if (value instanceof ZoneAwarePromise) {\n          return value;\n        }\n\n        return resolvePromise(new this(null), RESOLVED, value);\n      }\n\n      static reject(error) {\n        return resolvePromise(new this(null), REJECTED, error);\n      }\n\n      static withResolvers() {\n        const result = {};\n        result.promise = new ZoneAwarePromise((res, rej) => {\n          result.resolve = res;\n          result.reject = rej;\n        });\n        return result;\n      }\n\n      static any(values) {\n        if (!values || typeof values[Symbol.iterator] !== 'function') {\n          return Promise.reject(new AggregateError([], 'All promises were rejected'));\n        }\n\n        const promises = [];\n        let count = 0;\n\n        try {\n          for (let v of values) {\n            count++;\n            promises.push(ZoneAwarePromise.resolve(v));\n          }\n        } catch (err) {\n          return Promise.reject(new AggregateError([], 'All promises were rejected'));\n        }\n\n        if (count === 0) {\n          return Promise.reject(new AggregateError([], 'All promises were rejected'));\n        }\n\n        let finished = false;\n        const errors = [];\n        return new ZoneAwarePromise((resolve, reject) => {\n          for (let i = 0; i < promises.length; i++) {\n            promises[i].then(v => {\n              if (finished) {\n                return;\n              }\n\n              finished = true;\n              resolve(v);\n            }, err => {\n              errors.push(err);\n              count--;\n\n              if (count === 0) {\n                finished = true;\n                reject(new AggregateError(errors, 'All promises were rejected'));\n              }\n            });\n          }\n        });\n      }\n\n      static race(values) {\n        let resolve;\n        let reject;\n        let promise = new this((res, rej) => {\n          resolve = res;\n          reject = rej;\n        });\n\n        function onResolve(value) {\n          resolve(value);\n        }\n\n        function onReject(error) {\n          reject(error);\n        }\n\n        for (let value of values) {\n          if (!isThenable(value)) {\n            value = this.resolve(value);\n          }\n\n          value.then(onResolve, onReject);\n        }\n\n        return promise;\n      }\n\n      static all(values) {\n        return ZoneAwarePromise.allWithCallback(values);\n      }\n\n      static allSettled(values) {\n        const P = this && this.prototype instanceof ZoneAwarePromise ? this : ZoneAwarePromise;\n        return P.allWithCallback(values, {\n          thenCallback: value => ({\n            status: 'fulfilled',\n            value\n          }),\n          errorCallback: err => ({\n            status: 'rejected',\n            reason: err\n          })\n        });\n      }\n\n      static allWithCallback(values, callback) {\n        let resolve;\n        let reject;\n        let promise = new this((res, rej) => {\n          resolve = res;\n          reject = rej;\n        }); // Start at 2 to prevent prematurely resolving if .then is called immediately.\n\n        let unresolvedCount = 2;\n        let valueIndex = 0;\n        const resolvedValues = [];\n\n        for (let value of values) {\n          if (!isThenable(value)) {\n            value = this.resolve(value);\n          }\n\n          const curValueIndex = valueIndex;\n\n          try {\n            value.then(value => {\n              resolvedValues[curValueIndex] = callback ? callback.thenCallback(value) : value;\n              unresolvedCount--;\n\n              if (unresolvedCount === 0) {\n                resolve(resolvedValues);\n              }\n            }, err => {\n              if (!callback) {\n                reject(err);\n              } else {\n                resolvedValues[curValueIndex] = callback.errorCallback(err);\n                unresolvedCount--;\n\n                if (unresolvedCount === 0) {\n                  resolve(resolvedValues);\n                }\n              }\n            });\n          } catch (thenErr) {\n            reject(thenErr);\n          }\n\n          unresolvedCount++;\n          valueIndex++;\n        } // Make the unresolvedCount zero-based again.\n\n\n        unresolvedCount -= 2;\n\n        if (unresolvedCount === 0) {\n          resolve(resolvedValues);\n        }\n\n        return promise;\n      }\n\n      constructor(executor) {\n        const promise = this;\n\n        if (!(promise instanceof ZoneAwarePromise)) {\n          throw new Error('Must be an instanceof Promise.');\n        }\n\n        promise[symbolState] = UNRESOLVED;\n        promise[symbolValue] = []; // queue;\n\n        try {\n          const onceWrapper = once();\n          executor && executor(onceWrapper(makeResolver(promise, RESOLVED)), onceWrapper(makeResolver(promise, REJECTED)));\n        } catch (error) {\n          resolvePromise(promise, false, error);\n        }\n      }\n\n      get [Symbol.toStringTag]() {\n        return 'Promise';\n      }\n\n      get [Symbol.species]() {\n        return ZoneAwarePromise;\n      }\n\n      then(onFulfilled, onRejected) {\n        // We must read `Symbol.species` safely because `this` may be anything. For instance, `this`\n        // may be an object without a prototype (created through `Object.create(null)`); thus\n        // `this.constructor` will be undefined. One of the use cases is SystemJS creating\n        // prototype-less objects (modules) via `Object.create(null)`. The SystemJS creates an empty\n        // object and copies promise properties into that object (within the `getOrCreateLoad`\n        // function). The zone.js then checks if the resolved value has the `then` method and\n        // invokes it with the `value` context. Otherwise, this will throw an error: `TypeError:\n        // Cannot read properties of undefined (reading 'Symbol(Symbol.species)')`.\n        let C = this.constructor?.[Symbol.species];\n\n        if (!C || typeof C !== 'function') {\n          C = this.constructor || ZoneAwarePromise;\n        }\n\n        const chainPromise = new C(noop);\n        const zone = Zone.current;\n\n        if (this[symbolState] == UNRESOLVED) {\n          this[symbolValue].push(zone, chainPromise, onFulfilled, onRejected);\n        } else {\n          scheduleResolveOrReject(this, zone, chainPromise, onFulfilled, onRejected);\n        }\n\n        return chainPromise;\n      }\n\n      catch(onRejected) {\n        return this.then(null, onRejected);\n      }\n\n      finally(onFinally) {\n        // See comment on the call to `then` about why thee `Symbol.species` is safely accessed.\n        let C = this.constructor?.[Symbol.species];\n\n        if (!C || typeof C !== 'function') {\n          C = ZoneAwarePromise;\n        }\n\n        const chainPromise = new C(noop);\n        chainPromise[symbolFinally] = symbolFinally;\n        const zone = Zone.current;\n\n        if (this[symbolState] == UNRESOLVED) {\n          this[symbolValue].push(zone, chainPromise, onFinally, onFinally);\n        } else {\n          scheduleResolveOrReject(this, zone, chainPromise, onFinally, onFinally);\n        }\n\n        return chainPromise;\n      }\n\n    } // Protect against aggressive optimizers dropping seemingly unused properties.\n    // E.g. Closure Compiler in advanced mode.\n\n\n    ZoneAwarePromise['resolve'] = ZoneAwarePromise.resolve;\n    ZoneAwarePromise['reject'] = ZoneAwarePromise.reject;\n    ZoneAwarePromise['race'] = ZoneAwarePromise.race;\n    ZoneAwarePromise['all'] = ZoneAwarePromise.all;\n    const NativePromise = global[symbolPromise] = global['Promise'];\n    global['Promise'] = ZoneAwarePromise;\n\n    const symbolThenPatched = __symbol__('thenPatched');\n\n    function patchThen(Ctor) {\n      const proto = Ctor.prototype;\n      const prop = ObjectGetOwnPropertyDescriptor(proto, 'then');\n\n      if (prop && (prop.writable === false || !prop.configurable)) {\n        // check Ctor.prototype.then propertyDescriptor is writable or not\n        // in meteor env, writable is false, we should ignore such case\n        return;\n      }\n\n      const originalThen = proto.then; // Keep a reference to the original method.\n\n      proto[symbolThen] = originalThen;\n\n      Ctor.prototype.then = function (onResolve, onReject) {\n        const wrapped = new ZoneAwarePromise((resolve, reject) => {\n          originalThen.call(this, resolve, reject);\n        });\n        return wrapped.then(onResolve, onReject);\n      };\n\n      Ctor[symbolThenPatched] = true;\n    }\n\n    api.patchThen = patchThen;\n\n    function zoneify(fn) {\n      return function (self, args) {\n        let resultPromise = fn.apply(self, args);\n\n        if (resultPromise instanceof ZoneAwarePromise) {\n          return resultPromise;\n        }\n\n        let ctor = resultPromise.constructor;\n\n        if (!ctor[symbolThenPatched]) {\n          patchThen(ctor);\n        }\n\n        return resultPromise;\n      };\n    }\n\n    if (NativePromise) {\n      patchThen(NativePromise);\n      patchMethod(global, 'fetch', delegate => zoneify(delegate));\n    } // This is not part of public API, but it is useful for tests, so we expose it.\n\n\n    Promise[Zone.__symbol__('uncaughtPromiseErrors')] = _uncaughtPromiseErrors;\n    return ZoneAwarePromise;\n  });\n}\n\nfunction patchToString(Zone) {\n  // override Function.prototype.toString to make zone.js patched function\n  // look like native function\n  Zone.__load_patch('toString', global => {\n    // patch Func.prototype.toString to let them look like native\n    const originalFunctionToString = Function.prototype.toString;\n    const ORIGINAL_DELEGATE_SYMBOL = zoneSymbol('OriginalDelegate');\n    const PROMISE_SYMBOL = zoneSymbol('Promise');\n    const ERROR_SYMBOL = zoneSymbol('Error');\n\n    const newFunctionToString = function toString() {\n      if (typeof this === 'function') {\n        const originalDelegate = this[ORIGINAL_DELEGATE_SYMBOL];\n\n        if (originalDelegate) {\n          if (typeof originalDelegate === 'function') {\n            return originalFunctionToString.call(originalDelegate);\n          } else {\n            return Object.prototype.toString.call(originalDelegate);\n          }\n        }\n\n        if (this === Promise) {\n          const nativePromise = global[PROMISE_SYMBOL];\n\n          if (nativePromise) {\n            return originalFunctionToString.call(nativePromise);\n          }\n        }\n\n        if (this === Error) {\n          const nativeError = global[ERROR_SYMBOL];\n\n          if (nativeError) {\n            return originalFunctionToString.call(nativeError);\n          }\n        }\n      }\n\n      return originalFunctionToString.call(this);\n    };\n\n    newFunctionToString[ORIGINAL_DELEGATE_SYMBOL] = originalFunctionToString;\n    Function.prototype.toString = newFunctionToString; // patch Object.prototype.toString to let them look like native\n\n    const originalObjectToString = Object.prototype.toString;\n    const PROMISE_OBJECT_TO_STRING = '[object Promise]';\n\n    Object.prototype.toString = function () {\n      if (typeof Promise === 'function' && this instanceof Promise) {\n        return PROMISE_OBJECT_TO_STRING;\n      }\n\n      return originalObjectToString.call(this);\n    };\n  });\n}\n\nfunction patchCallbacks(api, target, targetName, method, callbacks) {\n  const symbol = Zone.__symbol__(method);\n\n  if (target[symbol]) {\n    return;\n  }\n\n  const nativeDelegate = target[symbol] = target[method];\n\n  target[method] = function (name, opts, options) {\n    if (opts && opts.prototype) {\n      callbacks.forEach(function (callback) {\n        const source = `${targetName}.${method}::` + callback;\n        const prototype = opts.prototype; // Note: the `patchCallbacks` is used for patching the `document.registerElement` and\n        // `customElements.define`. We explicitly wrap the patching code into try-catch since\n        // callbacks may be already patched by other web components frameworks (e.g. LWC), and they\n        // make those properties non-writable. This means that patching callback will throw an error\n        // `cannot assign to read-only property`. See this code as an example:\n        // https://github.com/salesforce/lwc/blob/master/packages/@lwc/engine-core/src/framework/base-bridge-element.ts#L180-L186\n        // We don't want to stop the application rendering if we couldn't patch some\n        // callback, e.g. `attributeChangedCallback`.\n\n        try {\n          if (prototype.hasOwnProperty(callback)) {\n            const descriptor = api.ObjectGetOwnPropertyDescriptor(prototype, callback);\n\n            if (descriptor && descriptor.value) {\n              descriptor.value = api.wrapWithCurrentZone(descriptor.value, source);\n\n              api._redefineProperty(opts.prototype, callback, descriptor);\n            } else if (prototype[callback]) {\n              prototype[callback] = api.wrapWithCurrentZone(prototype[callback], source);\n            }\n          } else if (prototype[callback]) {\n            prototype[callback] = api.wrapWithCurrentZone(prototype[callback], source);\n          }\n        } catch {// Note: we leave the catch block empty since there's no way to handle the error related\n          // to non-writable property.\n        }\n      });\n    }\n\n    return nativeDelegate.call(target, name, opts, options);\n  };\n\n  api.attachOriginToPatched(target[method], nativeDelegate);\n}\n\nfunction patchUtil(Zone) {\n  Zone.__load_patch('util', (global, Zone, api) => {\n    // Collect native event names by looking at properties\n    // on the global namespace, e.g. 'onclick'.\n    const eventNames = getOnEventNames(global);\n    api.patchOnProperties = patchOnProperties;\n    api.patchMethod = patchMethod;\n    api.bindArguments = bindArguments;\n    api.patchMacroTask = patchMacroTask; // In earlier version of zone.js (<0.9.0), we use env name `__zone_symbol__BLACK_LISTED_EVENTS`\n    // to define which events will not be patched by `Zone.js`. In newer version (>=0.9.0), we\n    // change the env name to `__zone_symbol__UNPATCHED_EVENTS` to keep the name consistent with\n    // angular repo. The  `__zone_symbol__BLACK_LISTED_EVENTS` is deprecated, but it is still be\n    // supported for backwards compatibility.\n\n    const SYMBOL_BLACK_LISTED_EVENTS = Zone.__symbol__('BLACK_LISTED_EVENTS');\n\n    const SYMBOL_UNPATCHED_EVENTS = Zone.__symbol__('UNPATCHED_EVENTS');\n\n    if (global[SYMBOL_UNPATCHED_EVENTS]) {\n      global[SYMBOL_BLACK_LISTED_EVENTS] = global[SYMBOL_UNPATCHED_EVENTS];\n    }\n\n    if (global[SYMBOL_BLACK_LISTED_EVENTS]) {\n      Zone[SYMBOL_BLACK_LISTED_EVENTS] = Zone[SYMBOL_UNPATCHED_EVENTS] = global[SYMBOL_BLACK_LISTED_EVENTS];\n    }\n\n    api.patchEventPrototype = patchEventPrototype;\n    api.patchEventTarget = patchEventTarget;\n    api.isIEOrEdge = isIEOrEdge;\n    api.ObjectDefineProperty = ObjectDefineProperty;\n    api.ObjectGetOwnPropertyDescriptor = ObjectGetOwnPropertyDescriptor;\n    api.ObjectCreate = ObjectCreate;\n    api.ArraySlice = ArraySlice;\n    api.patchClass = patchClass;\n    api.wrapWithCurrentZone = wrapWithCurrentZone;\n    api.filterProperties = filterProperties;\n    api.attachOriginToPatched = attachOriginToPatched;\n    api._redefineProperty = Object.defineProperty;\n    api.patchCallbacks = patchCallbacks;\n\n    api.getGlobalObjects = () => ({\n      globalSources,\n      zoneSymbolEventNames,\n      eventNames,\n      isBrowser,\n      isMix,\n      isNode,\n      TRUE_STR,\n      FALSE_STR,\n      ZONE_SYMBOL_PREFIX,\n      ADD_EVENT_LISTENER_STR,\n      REMOVE_EVENT_LISTENER_STR\n    });\n  });\n}\n\nfunction patchCommon(Zone) {\n  patchPromise(Zone);\n  patchToString(Zone);\n  patchUtil(Zone);\n}\n\nconst Zone$1 = loadZone();\npatchCommon(Zone$1);\npatchBrowser(Zone$1);","map":{"version":3,"names":["global","globalThis","__symbol__","name","symbolPrefix","initZone","performance","mark","performanceMeasure","label","ZoneImpl","assertZonePatched","patches","Error","root","zone","current","parent","_currentZoneFrame","currentTask","_currentTask","__load_patch","fn","ignoreDuplicate","hasOwnProperty","checkDuplicate","perfName","_api","_parent","_name","constructor","zoneSpec","_properties","properties","_zoneDelegate","_ZoneDelegate","get","key","getZoneWith","fork","wrap","callback","source","_callback","intercept","runGuarded","arguments","run","applyThis","applyArgs","invoke","error","handleError","runTask","task","NO_ZONE","state","notScheduled","type","eventTask","macroTask","reEntryGuard","running","_transitionTo","scheduled","runCount","previousTask","data","isPeriodic","cancelFn","undefined","invokeTask","unknown","_updateTaskCount","scheduleTask","newZone","scheduling","zoneDelegates","_zoneDelegates","_zone","err","scheduleMicroTask","customSchedule","ZoneTask","microTask","scheduleMacroTask","customCancel","scheduleEventTask","cancelTask","canceling","count","i","length","DELEGATE_ZS","onHasTask","delegate","_","target","hasTaskState","hasTask","onScheduleTask","onInvokeTask","onCancelTask","parentDelegate","_taskCounts","_parentDelegate","_forkZS","onFork","_forkDlgt","_forkCurrZone","_interceptZS","onIntercept","_interceptDlgt","_interceptCurrZone","_invokeZS","onInvoke","_invokeDlgt","_invokeCurrZone","_handleErrorZS","onHandleError","_handleErrorDlgt","_handleErrorCurrZone","_scheduleTaskZS","_scheduleTaskDlgt","_scheduleTaskCurrZone","_invokeTaskZS","_invokeTaskDlgt","_invokeTaskCurrZone","_cancelTaskZS","_cancelTaskDlgt","_cancelTaskCurrZone","_hasTaskZS","_hasTaskDlgt","_hasTaskDlgtOwner","_hasTaskCurrZone","zoneSpecHasTask","parentHasTask","targetZone","apply","returnTask","push","scheduleFn","value","isEmpty","counts","prev","next","change","options","_state","self","useG","call","args","_numberOfNestedTaskFrames","drainMicroTaskQueue","cancelScheduleRequest","toState","fromState1","fromState2","toString","handleId","Object","prototype","toJSON","symbolSetTimeout","symbolPromise","symbolThen","_microTaskQueue","_isDrainingMicrotaskQueue","nativeMicroTaskQueuePromise","nativeScheduleMicroTask","func","resolve","nativeThen","queue","onUnhandledError","microtaskDrainDone","symbol","currentZoneFrame","noop","showUncaughtError","patchEventTarget","patchOnProperties","patchMethod","bindArguments","patchThen","patchMacroTask","patchEventPrototype","isIEOrEdge","getGlobalObjects","ObjectDefineProperty","ObjectGetOwnPropertyDescriptor","ObjectCreate","ArraySlice","patchClass","wrapWithCurrentZone","filterProperties","attachOriginToPatched","_redefineProperty","patchCallbacks","loadZone","getOwnPropertyDescriptor","defineProperty","ObjectGetPrototypeOf","getPrototypeOf","create","Array","slice","ADD_EVENT_LISTENER_STR","REMOVE_EVENT_LISTENER_STR","ZONE_SYMBOL_ADD_EVENT_LISTENER","ZONE_SYMBOL_REMOVE_EVENT_LISTENER","TRUE_STR","FALSE_STR","ZONE_SYMBOL_PREFIX","Zone","scheduleMacroTaskWithCurrentZone","zoneSymbol","isWindowExists","window","internalWindow","_global","REMOVE_ATTRIBUTE","patchPrototype","fnNames","prototypeDesc","isPropertyWritable","patched","propertyDesc","writable","set","isWebWorker","WorkerGlobalScope","isNode","process","isBrowser","isMix","zoneSymbolEventNames$1","wrapFn","event","eventNameSymbol","listener","result","errorEvent","message","filename","lineno","colno","preventDefault","patchProperty","obj","prop","desc","enumerable","configurable","onPropPatchedSymbol","originalDescGet","originalDescSet","eventName","newValue","previousValue","removeEventListener","addEventListener","removeAttribute","onProperties","j","originalInstanceKey","className","OriginalClass","a","instance","patchFn","proto","delegateName","patchDelegate","funcName","metaCreator","setNative","cbIdx","meta","original","isDetectedIEOrEdge","ieOrEdge","isIE","ua","navigator","userAgent","indexOf","passiveSupported","OPTIMIZED_ZONE_EVENT_TASK_DATA","zoneSymbolEventNames","globalSources","EVENT_NAME_SYMBOL_REGX","RegExp","IMMEDIATE_PROPAGATION_SYMBOL","prepareEventNames","eventNameToString","falseEventName","trueEventName","symbolCapture","api","apis","patchOptions","ADD_EVENT_LISTENER","add","REMOVE_EVENT_LISTENER","rm","LISTENERS_EVENT_LISTENER","listeners","REMOVE_ALL_LISTENERS_EVENT_LISTENER","rmAll","zoneSymbolAddEventListener","ADD_EVENT_LISTENER_SOURCE","PREPEND_EVENT_LISTENER","PREPEND_EVENT_LISTENER_SOURCE","isRemoved","handleEvent","originalDelegate","once","globalCallback","context","isCapture","tasks","errors","copyTasks","globalZoneAwareCallback","globalZoneAwareCaptureCallback","patchEventTargetMethods","useGlobalCallback","validateHandler","vh","chkDup","returnTarget","rt","taskData","nativeAddEventListener","nativeRemoveEventListener","nativeListeners","nativeRemoveAllListeners","nativePrependEventListener","prepend","buildEventListenerOptions","passive","capture","customScheduleGlobal","isExisting","customCancelGlobal","symbolEventNames","symbolEventName","existingTasks","existingTask","splice","allRemoved","customScheduleNonGlobal","customSchedulePrepend","customCancelNonGlobal","compareTaskCallbackVsDelegate","typeOfDelegate","compare","diff","unpatchedEvents","passiveEvents","makeAddListener","nativeListener","addSource","customScheduleFn","customCancelFn","transferEventName","isHandleEvent","signal","aborted","constructorName","targetSource","unshift","onPropertySymbol","findEventTasks","keys","match","exec","evtName","symbolCaptureEventName","captureTasks","removeTasks","results","foundTasks","captureFalseTasks","captureTrueTasks","concat","Event","patchQueueMicrotask","taskSymbol","patchTimer","setName","cancelName","nameSuffix","clearNative","tasksByHandleId","clearTask","delay","timer","handle","ref","unref","bind","id","patchCustomElements","callbacks","customElements","eventTargetPatch","eventNames","EVENT_TARGET","patchEvent","ignoreProperties","tip","filter","ip","targetIgnoreProperties","op","patchFilteredProperties","filteredProperties","getOnEventNames","getOwnPropertyNames","startsWith","map","substring","propertyDescriptorPatch","patchTargets","ignoreErrorProperties","patchBrowser","legacyPatch","clear","blockingMethods","s","XMLHttpRequestEventTarget","patchXHR","XHR_TASK","XHR_SYNC","XHR_LISTENER","XHR_SCHEDULED","XHR_URL","XHR_ERROR_BEFORE_SCHEDULED","XMLHttpRequest","XMLHttpRequestPrototype","findPendingTask","oriAddListener","oriRemoveListener","XMLHttpRequestEventTargetPrototype","READY_STATE_CHANGE","SCHEDULED","newListener","readyState","DONE","loadTasks","status","oriInvoke","storedTask","sendNative","placeholderCallback","abortNative","openNative","XMLHTTPREQUEST_SOURCE","fetchTaskAborting","fetchTaskScheduling","url","geolocation","findPromiseRejectionHandler","e","eventTasks","forEach","PromiseRejectionEvent","evt","promise","reason","rejection","patchPromise","readableObjectToString","JSON","stringify","_uncaughtPromiseErrors","isDisableWrappingUncaughtPromiseRejection","creationTrace","console","stack","uncaughtPromiseError","shift","throwOriginal","handleUnhandledRejection","UNHANDLED_PROMISE_REJECTION_HANDLER_SYMBOL","handler","isThenable","then","forwardResolution","forwardRejection","ZoneAwarePromise","reject","symbolState","symbolValue","symbolFinally","symbolParentPromiseValue","symbolParentPromiseState","UNRESOLVED","RESOLVED","REJECTED","REJECTED_NO_CATCH","makeResolver","v","resolvePromise","wasCalled","wrapper","wrappedFunction","TYPE_ERROR","CURRENT_TASK_TRACE_SYMBOL","onceWrapper","TypeError","clearRejectedNoCatch","trace","scheduleResolveOrReject","REJECTION_HANDLED_HANDLER","chainPromise","onFulfilled","onRejected","promiseState","parentPromiseValue","isFinallyPromise","ZONE_AWARE_PROMISE_TO_STRING","AggregateError","withResolvers","res","rej","any","values","Symbol","iterator","Promise","promises","finished","race","onResolve","onReject","all","allWithCallback","allSettled","P","thenCallback","errorCallback","unresolvedCount","valueIndex","resolvedValues","curValueIndex","thenErr","executor","toStringTag","species","C","catch","finally","onFinally","NativePromise","symbolThenPatched","Ctor","originalThen","wrapped","zoneify","resultPromise","ctor","patchToString","originalFunctionToString","Function","ORIGINAL_DELEGATE_SYMBOL","PROMISE_SYMBOL","ERROR_SYMBOL","newFunctionToString","nativePromise","nativeError","originalObjectToString","PROMISE_OBJECT_TO_STRING","targetName","method","nativeDelegate","opts","descriptor","patchUtil","SYMBOL_BLACK_LISTED_EVENTS","SYMBOL_UNPATCHED_EVENTS","patchCommon","Zone$1"],"sources":["/home/ranjitmenon/APM-Start/APM-Start/node_modules/zone.js/fesm2015/zone.js"],"sourcesContent":["'use strict';\n/**\n * @license Angular v<unknown>\n * (c) 2010-2024 Google LLC. https://angular.io/\n * License: MIT\n */\nconst global = globalThis;\n// __Zone_symbol_prefix global can be used to override the default zone\n// symbol prefix with a custom one if needed.\nfunction __symbol__(name) {\n    const symbolPrefix = global['__Zone_symbol_prefix'] || '__zone_symbol__';\n    return symbolPrefix + name;\n}\nfunction initZone() {\n    const performance = global['performance'];\n    function mark(name) {\n        performance && performance['mark'] && performance['mark'](name);\n    }\n    function performanceMeasure(name, label) {\n        performance && performance['measure'] && performance['measure'](name, label);\n    }\n    mark('Zone');\n    class ZoneImpl {\n        // tslint:disable-next-line:require-internal-with-underscore\n        static { this.__symbol__ = __symbol__; }\n        static assertZonePatched() {\n            if (global['Promise'] !== patches['ZoneAwarePromise']) {\n                throw new Error('Zone.js has detected that ZoneAwarePromise `(window|global).Promise` ' +\n                    'has been overwritten.\\n' +\n                    'Most likely cause is that a Promise polyfill has been loaded ' +\n                    'after Zone.js (Polyfilling Promise api is not necessary when zone.js is loaded. ' +\n                    'If you must load one, do so before loading zone.js.)');\n            }\n        }\n        static get root() {\n            let zone = ZoneImpl.current;\n            while (zone.parent) {\n                zone = zone.parent;\n            }\n            return zone;\n        }\n        static get current() {\n            return _currentZoneFrame.zone;\n        }\n        static get currentTask() {\n            return _currentTask;\n        }\n        // tslint:disable-next-line:require-internal-with-underscore\n        static __load_patch(name, fn, ignoreDuplicate = false) {\n            if (patches.hasOwnProperty(name)) {\n                // `checkDuplicate` option is defined from global variable\n                // so it works for all modules.\n                // `ignoreDuplicate` can work for the specified module\n                const checkDuplicate = global[__symbol__('forceDuplicateZoneCheck')] === true;\n                if (!ignoreDuplicate && checkDuplicate) {\n                    throw Error('Already loaded patch: ' + name);\n                }\n            }\n            else if (!global['__Zone_disable_' + name]) {\n                const perfName = 'Zone:' + name;\n                mark(perfName);\n                patches[name] = fn(global, ZoneImpl, _api);\n                performanceMeasure(perfName, perfName);\n            }\n        }\n        get parent() {\n            return this._parent;\n        }\n        get name() {\n            return this._name;\n        }\n        constructor(parent, zoneSpec) {\n            this._parent = parent;\n            this._name = zoneSpec ? zoneSpec.name || 'unnamed' : '<root>';\n            this._properties = (zoneSpec && zoneSpec.properties) || {};\n            this._zoneDelegate = new _ZoneDelegate(this, this._parent && this._parent._zoneDelegate, zoneSpec);\n        }\n        get(key) {\n            const zone = this.getZoneWith(key);\n            if (zone)\n                return zone._properties[key];\n        }\n        getZoneWith(key) {\n            let current = this;\n            while (current) {\n                if (current._properties.hasOwnProperty(key)) {\n                    return current;\n                }\n                current = current._parent;\n            }\n            return null;\n        }\n        fork(zoneSpec) {\n            if (!zoneSpec)\n                throw new Error('ZoneSpec required!');\n            return this._zoneDelegate.fork(this, zoneSpec);\n        }\n        wrap(callback, source) {\n            if (typeof callback !== 'function') {\n                throw new Error('Expecting function got: ' + callback);\n            }\n            const _callback = this._zoneDelegate.intercept(this, callback, source);\n            const zone = this;\n            return function () {\n                return zone.runGuarded(_callback, this, arguments, source);\n            };\n        }\n        run(callback, applyThis, applyArgs, source) {\n            _currentZoneFrame = { parent: _currentZoneFrame, zone: this };\n            try {\n                return this._zoneDelegate.invoke(this, callback, applyThis, applyArgs, source);\n            }\n            finally {\n                _currentZoneFrame = _currentZoneFrame.parent;\n            }\n        }\n        runGuarded(callback, applyThis = null, applyArgs, source) {\n            _currentZoneFrame = { parent: _currentZoneFrame, zone: this };\n            try {\n                try {\n                    return this._zoneDelegate.invoke(this, callback, applyThis, applyArgs, source);\n                }\n                catch (error) {\n                    if (this._zoneDelegate.handleError(this, error)) {\n                        throw error;\n                    }\n                }\n            }\n            finally {\n                _currentZoneFrame = _currentZoneFrame.parent;\n            }\n        }\n        runTask(task, applyThis, applyArgs) {\n            if (task.zone != this) {\n                throw new Error('A task can only be run in the zone of creation! (Creation: ' +\n                    (task.zone || NO_ZONE).name +\n                    '; Execution: ' +\n                    this.name +\n                    ')');\n            }\n            // https://github.com/angular/zone.js/issues/778, sometimes eventTask\n            // will run in notScheduled(canceled) state, we should not try to\n            // run such kind of task but just return\n            if (task.state === notScheduled && (task.type === eventTask || task.type === macroTask)) {\n                return;\n            }\n            const reEntryGuard = task.state != running;\n            reEntryGuard && task._transitionTo(running, scheduled);\n            task.runCount++;\n            const previousTask = _currentTask;\n            _currentTask = task;\n            _currentZoneFrame = { parent: _currentZoneFrame, zone: this };\n            try {\n                if (task.type == macroTask && task.data && !task.data.isPeriodic) {\n                    task.cancelFn = undefined;\n                }\n                try {\n                    return this._zoneDelegate.invokeTask(this, task, applyThis, applyArgs);\n                }\n                catch (error) {\n                    if (this._zoneDelegate.handleError(this, error)) {\n                        throw error;\n                    }\n                }\n            }\n            finally {\n                // if the task's state is notScheduled or unknown, then it has already been cancelled\n                // we should not reset the state to scheduled\n                if (task.state !== notScheduled && task.state !== unknown) {\n                    if (task.type == eventTask || (task.data && task.data.isPeriodic)) {\n                        reEntryGuard && task._transitionTo(scheduled, running);\n                    }\n                    else {\n                        task.runCount = 0;\n                        this._updateTaskCount(task, -1);\n                        reEntryGuard &&\n                            task._transitionTo(notScheduled, running, notScheduled);\n                    }\n                }\n                _currentZoneFrame = _currentZoneFrame.parent;\n                _currentTask = previousTask;\n            }\n        }\n        scheduleTask(task) {\n            if (task.zone && task.zone !== this) {\n                // check if the task was rescheduled, the newZone\n                // should not be the children of the original zone\n                let newZone = this;\n                while (newZone) {\n                    if (newZone === task.zone) {\n                        throw Error(`can not reschedule task to ${this.name} which is descendants of the original zone ${task.zone.name}`);\n                    }\n                    newZone = newZone.parent;\n                }\n            }\n            task._transitionTo(scheduling, notScheduled);\n            const zoneDelegates = [];\n            task._zoneDelegates = zoneDelegates;\n            task._zone = this;\n            try {\n                task = this._zoneDelegate.scheduleTask(this, task);\n            }\n            catch (err) {\n                // should set task's state to unknown when scheduleTask throw error\n                // because the err may from reschedule, so the fromState maybe notScheduled\n                task._transitionTo(unknown, scheduling, notScheduled);\n                // TODO: @JiaLiPassion, should we check the result from handleError?\n                this._zoneDelegate.handleError(this, err);\n                throw err;\n            }\n            if (task._zoneDelegates === zoneDelegates) {\n                // we have to check because internally the delegate can reschedule the task.\n                this._updateTaskCount(task, 1);\n            }\n            if (task.state == scheduling) {\n                task._transitionTo(scheduled, scheduling);\n            }\n            return task;\n        }\n        scheduleMicroTask(source, callback, data, customSchedule) {\n            return this.scheduleTask(new ZoneTask(microTask, source, callback, data, customSchedule, undefined));\n        }\n        scheduleMacroTask(source, callback, data, customSchedule, customCancel) {\n            return this.scheduleTask(new ZoneTask(macroTask, source, callback, data, customSchedule, customCancel));\n        }\n        scheduleEventTask(source, callback, data, customSchedule, customCancel) {\n            return this.scheduleTask(new ZoneTask(eventTask, source, callback, data, customSchedule, customCancel));\n        }\n        cancelTask(task) {\n            if (task.zone != this)\n                throw new Error('A task can only be cancelled in the zone of creation! (Creation: ' +\n                    (task.zone || NO_ZONE).name +\n                    '; Execution: ' +\n                    this.name +\n                    ')');\n            if (task.state !== scheduled && task.state !== running) {\n                return;\n            }\n            task._transitionTo(canceling, scheduled, running);\n            try {\n                this._zoneDelegate.cancelTask(this, task);\n            }\n            catch (err) {\n                // if error occurs when cancelTask, transit the state to unknown\n                task._transitionTo(unknown, canceling);\n                this._zoneDelegate.handleError(this, err);\n                throw err;\n            }\n            this._updateTaskCount(task, -1);\n            task._transitionTo(notScheduled, canceling);\n            task.runCount = 0;\n            return task;\n        }\n        _updateTaskCount(task, count) {\n            const zoneDelegates = task._zoneDelegates;\n            if (count == -1) {\n                task._zoneDelegates = null;\n            }\n            for (let i = 0; i < zoneDelegates.length; i++) {\n                zoneDelegates[i]._updateTaskCount(task.type, count);\n            }\n        }\n    }\n    const DELEGATE_ZS = {\n        name: '',\n        onHasTask: (delegate, _, target, hasTaskState) => delegate.hasTask(target, hasTaskState),\n        onScheduleTask: (delegate, _, target, task) => delegate.scheduleTask(target, task),\n        onInvokeTask: (delegate, _, target, task, applyThis, applyArgs) => delegate.invokeTask(target, task, applyThis, applyArgs),\n        onCancelTask: (delegate, _, target, task) => delegate.cancelTask(target, task),\n    };\n    class _ZoneDelegate {\n        get zone() {\n            return this._zone;\n        }\n        constructor(zone, parentDelegate, zoneSpec) {\n            this._taskCounts = {\n                'microTask': 0,\n                'macroTask': 0,\n                'eventTask': 0,\n            };\n            this._zone = zone;\n            this._parentDelegate = parentDelegate;\n            this._forkZS = zoneSpec && (zoneSpec && zoneSpec.onFork ? zoneSpec : parentDelegate._forkZS);\n            this._forkDlgt = zoneSpec && (zoneSpec.onFork ? parentDelegate : parentDelegate._forkDlgt);\n            this._forkCurrZone =\n                zoneSpec && (zoneSpec.onFork ? this._zone : parentDelegate._forkCurrZone);\n            this._interceptZS =\n                zoneSpec && (zoneSpec.onIntercept ? zoneSpec : parentDelegate._interceptZS);\n            this._interceptDlgt =\n                zoneSpec && (zoneSpec.onIntercept ? parentDelegate : parentDelegate._interceptDlgt);\n            this._interceptCurrZone =\n                zoneSpec && (zoneSpec.onIntercept ? this._zone : parentDelegate._interceptCurrZone);\n            this._invokeZS = zoneSpec && (zoneSpec.onInvoke ? zoneSpec : parentDelegate._invokeZS);\n            this._invokeDlgt =\n                zoneSpec && (zoneSpec.onInvoke ? parentDelegate : parentDelegate._invokeDlgt);\n            this._invokeCurrZone =\n                zoneSpec && (zoneSpec.onInvoke ? this._zone : parentDelegate._invokeCurrZone);\n            this._handleErrorZS =\n                zoneSpec && (zoneSpec.onHandleError ? zoneSpec : parentDelegate._handleErrorZS);\n            this._handleErrorDlgt =\n                zoneSpec && (zoneSpec.onHandleError ? parentDelegate : parentDelegate._handleErrorDlgt);\n            this._handleErrorCurrZone =\n                zoneSpec && (zoneSpec.onHandleError ? this._zone : parentDelegate._handleErrorCurrZone);\n            this._scheduleTaskZS =\n                zoneSpec && (zoneSpec.onScheduleTask ? zoneSpec : parentDelegate._scheduleTaskZS);\n            this._scheduleTaskDlgt =\n                zoneSpec && (zoneSpec.onScheduleTask ? parentDelegate : parentDelegate._scheduleTaskDlgt);\n            this._scheduleTaskCurrZone =\n                zoneSpec && (zoneSpec.onScheduleTask ? this._zone : parentDelegate._scheduleTaskCurrZone);\n            this._invokeTaskZS =\n                zoneSpec && (zoneSpec.onInvokeTask ? zoneSpec : parentDelegate._invokeTaskZS);\n            this._invokeTaskDlgt =\n                zoneSpec && (zoneSpec.onInvokeTask ? parentDelegate : parentDelegate._invokeTaskDlgt);\n            this._invokeTaskCurrZone =\n                zoneSpec && (zoneSpec.onInvokeTask ? this._zone : parentDelegate._invokeTaskCurrZone);\n            this._cancelTaskZS =\n                zoneSpec && (zoneSpec.onCancelTask ? zoneSpec : parentDelegate._cancelTaskZS);\n            this._cancelTaskDlgt =\n                zoneSpec && (zoneSpec.onCancelTask ? parentDelegate : parentDelegate._cancelTaskDlgt);\n            this._cancelTaskCurrZone =\n                zoneSpec && (zoneSpec.onCancelTask ? this._zone : parentDelegate._cancelTaskCurrZone);\n            this._hasTaskZS = null;\n            this._hasTaskDlgt = null;\n            this._hasTaskDlgtOwner = null;\n            this._hasTaskCurrZone = null;\n            const zoneSpecHasTask = zoneSpec && zoneSpec.onHasTask;\n            const parentHasTask = parentDelegate && parentDelegate._hasTaskZS;\n            if (zoneSpecHasTask || parentHasTask) {\n                // If we need to report hasTask, than this ZS needs to do ref counting on tasks. In such\n                // a case all task related interceptors must go through this ZD. We can't short circuit it.\n                this._hasTaskZS = zoneSpecHasTask ? zoneSpec : DELEGATE_ZS;\n                this._hasTaskDlgt = parentDelegate;\n                this._hasTaskDlgtOwner = this;\n                this._hasTaskCurrZone = this._zone;\n                if (!zoneSpec.onScheduleTask) {\n                    this._scheduleTaskZS = DELEGATE_ZS;\n                    this._scheduleTaskDlgt = parentDelegate;\n                    this._scheduleTaskCurrZone = this._zone;\n                }\n                if (!zoneSpec.onInvokeTask) {\n                    this._invokeTaskZS = DELEGATE_ZS;\n                    this._invokeTaskDlgt = parentDelegate;\n                    this._invokeTaskCurrZone = this._zone;\n                }\n                if (!zoneSpec.onCancelTask) {\n                    this._cancelTaskZS = DELEGATE_ZS;\n                    this._cancelTaskDlgt = parentDelegate;\n                    this._cancelTaskCurrZone = this._zone;\n                }\n            }\n        }\n        fork(targetZone, zoneSpec) {\n            return this._forkZS\n                ? this._forkZS.onFork(this._forkDlgt, this.zone, targetZone, zoneSpec)\n                : new ZoneImpl(targetZone, zoneSpec);\n        }\n        intercept(targetZone, callback, source) {\n            return this._interceptZS\n                ? this._interceptZS.onIntercept(this._interceptDlgt, this._interceptCurrZone, targetZone, callback, source)\n                : callback;\n        }\n        invoke(targetZone, callback, applyThis, applyArgs, source) {\n            return this._invokeZS\n                ? this._invokeZS.onInvoke(this._invokeDlgt, this._invokeCurrZone, targetZone, callback, applyThis, applyArgs, source)\n                : callback.apply(applyThis, applyArgs);\n        }\n        handleError(targetZone, error) {\n            return this._handleErrorZS\n                ? this._handleErrorZS.onHandleError(this._handleErrorDlgt, this._handleErrorCurrZone, targetZone, error)\n                : true;\n        }\n        scheduleTask(targetZone, task) {\n            let returnTask = task;\n            if (this._scheduleTaskZS) {\n                if (this._hasTaskZS) {\n                    returnTask._zoneDelegates.push(this._hasTaskDlgtOwner);\n                }\n                // clang-format off\n                returnTask = this._scheduleTaskZS.onScheduleTask(this._scheduleTaskDlgt, this._scheduleTaskCurrZone, targetZone, task);\n                // clang-format on\n                if (!returnTask)\n                    returnTask = task;\n            }\n            else {\n                if (task.scheduleFn) {\n                    task.scheduleFn(task);\n                }\n                else if (task.type == microTask) {\n                    scheduleMicroTask(task);\n                }\n                else {\n                    throw new Error('Task is missing scheduleFn.');\n                }\n            }\n            return returnTask;\n        }\n        invokeTask(targetZone, task, applyThis, applyArgs) {\n            return this._invokeTaskZS\n                ? this._invokeTaskZS.onInvokeTask(this._invokeTaskDlgt, this._invokeTaskCurrZone, targetZone, task, applyThis, applyArgs)\n                : task.callback.apply(applyThis, applyArgs);\n        }\n        cancelTask(targetZone, task) {\n            let value;\n            if (this._cancelTaskZS) {\n                value = this._cancelTaskZS.onCancelTask(this._cancelTaskDlgt, this._cancelTaskCurrZone, targetZone, task);\n            }\n            else {\n                if (!task.cancelFn) {\n                    throw Error('Task is not cancelable');\n                }\n                value = task.cancelFn(task);\n            }\n            return value;\n        }\n        hasTask(targetZone, isEmpty) {\n            // hasTask should not throw error so other ZoneDelegate\n            // can still trigger hasTask callback\n            try {\n                this._hasTaskZS &&\n                    this._hasTaskZS.onHasTask(this._hasTaskDlgt, this._hasTaskCurrZone, targetZone, isEmpty);\n            }\n            catch (err) {\n                this.handleError(targetZone, err);\n            }\n        }\n        // tslint:disable-next-line:require-internal-with-underscore\n        _updateTaskCount(type, count) {\n            const counts = this._taskCounts;\n            const prev = counts[type];\n            const next = (counts[type] = prev + count);\n            if (next < 0) {\n                throw new Error('More tasks executed then were scheduled.');\n            }\n            if (prev == 0 || next == 0) {\n                const isEmpty = {\n                    microTask: counts['microTask'] > 0,\n                    macroTask: counts['macroTask'] > 0,\n                    eventTask: counts['eventTask'] > 0,\n                    change: type,\n                };\n                this.hasTask(this._zone, isEmpty);\n            }\n        }\n    }\n    class ZoneTask {\n        constructor(type, source, callback, options, scheduleFn, cancelFn) {\n            // tslint:disable-next-line:require-internal-with-underscore\n            this._zone = null;\n            this.runCount = 0;\n            // tslint:disable-next-line:require-internal-with-underscore\n            this._zoneDelegates = null;\n            // tslint:disable-next-line:require-internal-with-underscore\n            this._state = 'notScheduled';\n            this.type = type;\n            this.source = source;\n            this.data = options;\n            this.scheduleFn = scheduleFn;\n            this.cancelFn = cancelFn;\n            if (!callback) {\n                throw new Error('callback is not defined');\n            }\n            this.callback = callback;\n            const self = this;\n            // TODO: @JiaLiPassion options should have interface\n            if (type === eventTask && options && options.useG) {\n                this.invoke = ZoneTask.invokeTask;\n            }\n            else {\n                this.invoke = function () {\n                    return ZoneTask.invokeTask.call(global, self, this, arguments);\n                };\n            }\n        }\n        static invokeTask(task, target, args) {\n            if (!task) {\n                task = this;\n            }\n            _numberOfNestedTaskFrames++;\n            try {\n                task.runCount++;\n                return task.zone.runTask(task, target, args);\n            }\n            finally {\n                if (_numberOfNestedTaskFrames == 1) {\n                    drainMicroTaskQueue();\n                }\n                _numberOfNestedTaskFrames--;\n            }\n        }\n        get zone() {\n            return this._zone;\n        }\n        get state() {\n            return this._state;\n        }\n        cancelScheduleRequest() {\n            this._transitionTo(notScheduled, scheduling);\n        }\n        // tslint:disable-next-line:require-internal-with-underscore\n        _transitionTo(toState, fromState1, fromState2) {\n            if (this._state === fromState1 || this._state === fromState2) {\n                this._state = toState;\n                if (toState == notScheduled) {\n                    this._zoneDelegates = null;\n                }\n            }\n            else {\n                throw new Error(`${this.type} '${this.source}': can not transition to '${toState}', expecting state '${fromState1}'${fromState2 ? \" or '\" + fromState2 + \"'\" : ''}, was '${this._state}'.`);\n            }\n        }\n        toString() {\n            if (this.data && typeof this.data.handleId !== 'undefined') {\n                return this.data.handleId.toString();\n            }\n            else {\n                return Object.prototype.toString.call(this);\n            }\n        }\n        // add toJSON method to prevent cyclic error when\n        // call JSON.stringify(zoneTask)\n        toJSON() {\n            return {\n                type: this.type,\n                state: this.state,\n                source: this.source,\n                zone: this.zone.name,\n                runCount: this.runCount,\n            };\n        }\n    }\n    //////////////////////////////////////////////////////\n    //////////////////////////////////////////////////////\n    ///  MICROTASK QUEUE\n    //////////////////////////////////////////////////////\n    //////////////////////////////////////////////////////\n    const symbolSetTimeout = __symbol__('setTimeout');\n    const symbolPromise = __symbol__('Promise');\n    const symbolThen = __symbol__('then');\n    let _microTaskQueue = [];\n    let _isDrainingMicrotaskQueue = false;\n    let nativeMicroTaskQueuePromise;\n    function nativeScheduleMicroTask(func) {\n        if (!nativeMicroTaskQueuePromise) {\n            if (global[symbolPromise]) {\n                nativeMicroTaskQueuePromise = global[symbolPromise].resolve(0);\n            }\n        }\n        if (nativeMicroTaskQueuePromise) {\n            let nativeThen = nativeMicroTaskQueuePromise[symbolThen];\n            if (!nativeThen) {\n                // native Promise is not patchable, we need to use `then` directly\n                // issue 1078\n                nativeThen = nativeMicroTaskQueuePromise['then'];\n            }\n            nativeThen.call(nativeMicroTaskQueuePromise, func);\n        }\n        else {\n            global[symbolSetTimeout](func, 0);\n        }\n    }\n    function scheduleMicroTask(task) {\n        // if we are not running in any task, and there has not been anything scheduled\n        // we must bootstrap the initial task creation by manually scheduling the drain\n        if (_numberOfNestedTaskFrames === 0 && _microTaskQueue.length === 0) {\n            // We are not running in Task, so we need to kickstart the microtask queue.\n            nativeScheduleMicroTask(drainMicroTaskQueue);\n        }\n        task && _microTaskQueue.push(task);\n    }\n    function drainMicroTaskQueue() {\n        if (!_isDrainingMicrotaskQueue) {\n            _isDrainingMicrotaskQueue = true;\n            while (_microTaskQueue.length) {\n                const queue = _microTaskQueue;\n                _microTaskQueue = [];\n                for (let i = 0; i < queue.length; i++) {\n                    const task = queue[i];\n                    try {\n                        task.zone.runTask(task, null, null);\n                    }\n                    catch (error) {\n                        _api.onUnhandledError(error);\n                    }\n                }\n            }\n            _api.microtaskDrainDone();\n            _isDrainingMicrotaskQueue = false;\n        }\n    }\n    //////////////////////////////////////////////////////\n    //////////////////////////////////////////////////////\n    ///  BOOTSTRAP\n    //////////////////////////////////////////////////////\n    //////////////////////////////////////////////////////\n    const NO_ZONE = { name: 'NO ZONE' };\n    const notScheduled = 'notScheduled', scheduling = 'scheduling', scheduled = 'scheduled', running = 'running', canceling = 'canceling', unknown = 'unknown';\n    const microTask = 'microTask', macroTask = 'macroTask', eventTask = 'eventTask';\n    const patches = {};\n    const _api = {\n        symbol: __symbol__,\n        currentZoneFrame: () => _currentZoneFrame,\n        onUnhandledError: noop,\n        microtaskDrainDone: noop,\n        scheduleMicroTask: scheduleMicroTask,\n        showUncaughtError: () => !ZoneImpl[__symbol__('ignoreConsoleErrorUncaughtError')],\n        patchEventTarget: () => [],\n        patchOnProperties: noop,\n        patchMethod: () => noop,\n        bindArguments: () => [],\n        patchThen: () => noop,\n        patchMacroTask: () => noop,\n        patchEventPrototype: () => noop,\n        isIEOrEdge: () => false,\n        getGlobalObjects: () => undefined,\n        ObjectDefineProperty: () => noop,\n        ObjectGetOwnPropertyDescriptor: () => undefined,\n        ObjectCreate: () => undefined,\n        ArraySlice: () => [],\n        patchClass: () => noop,\n        wrapWithCurrentZone: () => noop,\n        filterProperties: () => [],\n        attachOriginToPatched: () => noop,\n        _redefineProperty: () => noop,\n        patchCallbacks: () => noop,\n        nativeScheduleMicroTask: nativeScheduleMicroTask,\n    };\n    let _currentZoneFrame = { parent: null, zone: new ZoneImpl(null, null) };\n    let _currentTask = null;\n    let _numberOfNestedTaskFrames = 0;\n    function noop() { }\n    performanceMeasure('Zone', 'Zone');\n    return ZoneImpl;\n}\n\nfunction loadZone() {\n    // if global['Zone'] already exists (maybe zone.js was already loaded or\n    // some other lib also registered a global object named Zone), we may need\n    // to throw an error, but sometimes user may not want this error.\n    // For example,\n    // we have two web pages, page1 includes zone.js, page2 doesn't.\n    // and the 1st time user load page1 and page2, everything work fine,\n    // but when user load page2 again, error occurs because global['Zone'] already exists.\n    // so we add a flag to let user choose whether to throw this error or not.\n    // By default, if existing Zone is from zone.js, we will not throw the error.\n    const global = globalThis;\n    const checkDuplicate = global[__symbol__('forceDuplicateZoneCheck')] === true;\n    if (global['Zone'] && (checkDuplicate || typeof global['Zone'].__symbol__ !== 'function')) {\n        throw new Error('Zone already loaded.');\n    }\n    // Initialize global `Zone` constant.\n    global['Zone'] ??= initZone();\n    return global['Zone'];\n}\n\n/**\n * Suppress closure compiler errors about unknown 'Zone' variable\n * @fileoverview\n * @suppress {undefinedVars,globalThis,missingRequire}\n */\n// issue #989, to reduce bundle size, use short name\n/** Object.getOwnPropertyDescriptor */\nconst ObjectGetOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n/** Object.defineProperty */\nconst ObjectDefineProperty = Object.defineProperty;\n/** Object.getPrototypeOf */\nconst ObjectGetPrototypeOf = Object.getPrototypeOf;\n/** Object.create */\nconst ObjectCreate = Object.create;\n/** Array.prototype.slice */\nconst ArraySlice = Array.prototype.slice;\n/** addEventListener string const */\nconst ADD_EVENT_LISTENER_STR = 'addEventListener';\n/** removeEventListener string const */\nconst REMOVE_EVENT_LISTENER_STR = 'removeEventListener';\n/** zoneSymbol addEventListener */\nconst ZONE_SYMBOL_ADD_EVENT_LISTENER = __symbol__(ADD_EVENT_LISTENER_STR);\n/** zoneSymbol removeEventListener */\nconst ZONE_SYMBOL_REMOVE_EVENT_LISTENER = __symbol__(REMOVE_EVENT_LISTENER_STR);\n/** true string const */\nconst TRUE_STR = 'true';\n/** false string const */\nconst FALSE_STR = 'false';\n/** Zone symbol prefix string const. */\nconst ZONE_SYMBOL_PREFIX = __symbol__('');\nfunction wrapWithCurrentZone(callback, source) {\n    return Zone.current.wrap(callback, source);\n}\nfunction scheduleMacroTaskWithCurrentZone(source, callback, data, customSchedule, customCancel) {\n    return Zone.current.scheduleMacroTask(source, callback, data, customSchedule, customCancel);\n}\nconst zoneSymbol = __symbol__;\nconst isWindowExists = typeof window !== 'undefined';\nconst internalWindow = isWindowExists ? window : undefined;\nconst _global = (isWindowExists && internalWindow) || globalThis;\nconst REMOVE_ATTRIBUTE = 'removeAttribute';\nfunction bindArguments(args, source) {\n    for (let i = args.length - 1; i >= 0; i--) {\n        if (typeof args[i] === 'function') {\n            args[i] = wrapWithCurrentZone(args[i], source + '_' + i);\n        }\n    }\n    return args;\n}\nfunction patchPrototype(prototype, fnNames) {\n    const source = prototype.constructor['name'];\n    for (let i = 0; i < fnNames.length; i++) {\n        const name = fnNames[i];\n        const delegate = prototype[name];\n        if (delegate) {\n            const prototypeDesc = ObjectGetOwnPropertyDescriptor(prototype, name);\n            if (!isPropertyWritable(prototypeDesc)) {\n                continue;\n            }\n            prototype[name] = ((delegate) => {\n                const patched = function () {\n                    return delegate.apply(this, bindArguments(arguments, source + '.' + name));\n                };\n                attachOriginToPatched(patched, delegate);\n                return patched;\n            })(delegate);\n        }\n    }\n}\nfunction isPropertyWritable(propertyDesc) {\n    if (!propertyDesc) {\n        return true;\n    }\n    if (propertyDesc.writable === false) {\n        return false;\n    }\n    return !(typeof propertyDesc.get === 'function' && typeof propertyDesc.set === 'undefined');\n}\nconst isWebWorker = typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope;\n// Make sure to access `process` through `_global` so that WebPack does not accidentally browserify\n// this code.\nconst isNode = !('nw' in _global) &&\n    typeof _global.process !== 'undefined' &&\n    {}.toString.call(_global.process) === '[object process]';\nconst isBrowser = !isNode && !isWebWorker && !!(isWindowExists && internalWindow['HTMLElement']);\n// we are in electron of nw, so we are both browser and nodejs\n// Make sure to access `process` through `_global` so that WebPack does not accidentally browserify\n// this code.\nconst isMix = typeof _global.process !== 'undefined' &&\n    {}.toString.call(_global.process) === '[object process]' &&\n    !isWebWorker &&\n    !!(isWindowExists && internalWindow['HTMLElement']);\nconst zoneSymbolEventNames$1 = {};\nconst wrapFn = function (event) {\n    // https://github.com/angular/zone.js/issues/911, in IE, sometimes\n    // event will be undefined, so we need to use window.event\n    event = event || _global.event;\n    if (!event) {\n        return;\n    }\n    let eventNameSymbol = zoneSymbolEventNames$1[event.type];\n    if (!eventNameSymbol) {\n        eventNameSymbol = zoneSymbolEventNames$1[event.type] = zoneSymbol('ON_PROPERTY' + event.type);\n    }\n    const target = this || event.target || _global;\n    const listener = target[eventNameSymbol];\n    let result;\n    if (isBrowser && target === internalWindow && event.type === 'error') {\n        // window.onerror have different signature\n        // https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onerror#window.onerror\n        // and onerror callback will prevent default when callback return true\n        const errorEvent = event;\n        result =\n            listener &&\n                listener.call(this, errorEvent.message, errorEvent.filename, errorEvent.lineno, errorEvent.colno, errorEvent.error);\n        if (result === true) {\n            event.preventDefault();\n        }\n    }\n    else {\n        result = listener && listener.apply(this, arguments);\n        if (result != undefined && !result) {\n            event.preventDefault();\n        }\n    }\n    return result;\n};\nfunction patchProperty(obj, prop, prototype) {\n    let desc = ObjectGetOwnPropertyDescriptor(obj, prop);\n    if (!desc && prototype) {\n        // when patch window object, use prototype to check prop exist or not\n        const prototypeDesc = ObjectGetOwnPropertyDescriptor(prototype, prop);\n        if (prototypeDesc) {\n            desc = { enumerable: true, configurable: true };\n        }\n    }\n    // if the descriptor not exists or is not configurable\n    // just return\n    if (!desc || !desc.configurable) {\n        return;\n    }\n    const onPropPatchedSymbol = zoneSymbol('on' + prop + 'patched');\n    if (obj.hasOwnProperty(onPropPatchedSymbol) && obj[onPropPatchedSymbol]) {\n        return;\n    }\n    // A property descriptor cannot have getter/setter and be writable\n    // deleting the writable and value properties avoids this error:\n    //\n    // TypeError: property descriptors must not specify a value or be writable when a\n    // getter or setter has been specified\n    delete desc.writable;\n    delete desc.value;\n    const originalDescGet = desc.get;\n    const originalDescSet = desc.set;\n    // slice(2) cuz 'onclick' -> 'click', etc\n    const eventName = prop.slice(2);\n    let eventNameSymbol = zoneSymbolEventNames$1[eventName];\n    if (!eventNameSymbol) {\n        eventNameSymbol = zoneSymbolEventNames$1[eventName] = zoneSymbol('ON_PROPERTY' + eventName);\n    }\n    desc.set = function (newValue) {\n        // in some of windows's onproperty callback, this is undefined\n        // so we need to check it\n        let target = this;\n        if (!target && obj === _global) {\n            target = _global;\n        }\n        if (!target) {\n            return;\n        }\n        const previousValue = target[eventNameSymbol];\n        if (typeof previousValue === 'function') {\n            target.removeEventListener(eventName, wrapFn);\n        }\n        // issue #978, when onload handler was added before loading zone.js\n        // we should remove it with originalDescSet\n        originalDescSet && originalDescSet.call(target, null);\n        target[eventNameSymbol] = newValue;\n        if (typeof newValue === 'function') {\n            target.addEventListener(eventName, wrapFn, false);\n        }\n    };\n    // The getter would return undefined for unassigned properties but the default value of an\n    // unassigned property is null\n    desc.get = function () {\n        // in some of windows's onproperty callback, this is undefined\n        // so we need to check it\n        let target = this;\n        if (!target && obj === _global) {\n            target = _global;\n        }\n        if (!target) {\n            return null;\n        }\n        const listener = target[eventNameSymbol];\n        if (listener) {\n            return listener;\n        }\n        else if (originalDescGet) {\n            // result will be null when use inline event attribute,\n            // such as <button onclick=\"func();\">OK</button>\n            // because the onclick function is internal raw uncompiled handler\n            // the onclick will be evaluated when first time event was triggered or\n            // the property is accessed, https://github.com/angular/zone.js/issues/525\n            // so we should use original native get to retrieve the handler\n            let value = originalDescGet.call(this);\n            if (value) {\n                desc.set.call(this, value);\n                if (typeof target[REMOVE_ATTRIBUTE] === 'function') {\n                    target.removeAttribute(prop);\n                }\n                return value;\n            }\n        }\n        return null;\n    };\n    ObjectDefineProperty(obj, prop, desc);\n    obj[onPropPatchedSymbol] = true;\n}\nfunction patchOnProperties(obj, properties, prototype) {\n    if (properties) {\n        for (let i = 0; i < properties.length; i++) {\n            patchProperty(obj, 'on' + properties[i], prototype);\n        }\n    }\n    else {\n        const onProperties = [];\n        for (const prop in obj) {\n            if (prop.slice(0, 2) == 'on') {\n                onProperties.push(prop);\n            }\n        }\n        for (let j = 0; j < onProperties.length; j++) {\n            patchProperty(obj, onProperties[j], prototype);\n        }\n    }\n}\nconst originalInstanceKey = zoneSymbol('originalInstance');\n// wrap some native API on `window`\nfunction patchClass(className) {\n    const OriginalClass = _global[className];\n    if (!OriginalClass)\n        return;\n    // keep original class in global\n    _global[zoneSymbol(className)] = OriginalClass;\n    _global[className] = function () {\n        const a = bindArguments(arguments, className);\n        switch (a.length) {\n            case 0:\n                this[originalInstanceKey] = new OriginalClass();\n                break;\n            case 1:\n                this[originalInstanceKey] = new OriginalClass(a[0]);\n                break;\n            case 2:\n                this[originalInstanceKey] = new OriginalClass(a[0], a[1]);\n                break;\n            case 3:\n                this[originalInstanceKey] = new OriginalClass(a[0], a[1], a[2]);\n                break;\n            case 4:\n                this[originalInstanceKey] = new OriginalClass(a[0], a[1], a[2], a[3]);\n                break;\n            default:\n                throw new Error('Arg list too long.');\n        }\n    };\n    // attach original delegate to patched function\n    attachOriginToPatched(_global[className], OriginalClass);\n    const instance = new OriginalClass(function () { });\n    let prop;\n    for (prop in instance) {\n        // https://bugs.webkit.org/show_bug.cgi?id=44721\n        if (className === 'XMLHttpRequest' && prop === 'responseBlob')\n            continue;\n        (function (prop) {\n            if (typeof instance[prop] === 'function') {\n                _global[className].prototype[prop] = function () {\n                    return this[originalInstanceKey][prop].apply(this[originalInstanceKey], arguments);\n                };\n            }\n            else {\n                ObjectDefineProperty(_global[className].prototype, prop, {\n                    set: function (fn) {\n                        if (typeof fn === 'function') {\n                            this[originalInstanceKey][prop] = wrapWithCurrentZone(fn, className + '.' + prop);\n                            // keep callback in wrapped function so we can\n                            // use it in Function.prototype.toString to return\n                            // the native one.\n                            attachOriginToPatched(this[originalInstanceKey][prop], fn);\n                        }\n                        else {\n                            this[originalInstanceKey][prop] = fn;\n                        }\n                    },\n                    get: function () {\n                        return this[originalInstanceKey][prop];\n                    },\n                });\n            }\n        })(prop);\n    }\n    for (prop in OriginalClass) {\n        if (prop !== 'prototype' && OriginalClass.hasOwnProperty(prop)) {\n            _global[className][prop] = OriginalClass[prop];\n        }\n    }\n}\nfunction patchMethod(target, name, patchFn) {\n    let proto = target;\n    while (proto && !proto.hasOwnProperty(name)) {\n        proto = ObjectGetPrototypeOf(proto);\n    }\n    if (!proto && target[name]) {\n        // somehow we did not find it, but we can see it. This happens on IE for Window properties.\n        proto = target;\n    }\n    const delegateName = zoneSymbol(name);\n    let delegate = null;\n    if (proto && (!(delegate = proto[delegateName]) || !proto.hasOwnProperty(delegateName))) {\n        delegate = proto[delegateName] = proto[name];\n        // check whether proto[name] is writable\n        // some property is readonly in safari, such as HtmlCanvasElement.prototype.toBlob\n        const desc = proto && ObjectGetOwnPropertyDescriptor(proto, name);\n        if (isPropertyWritable(desc)) {\n            const patchDelegate = patchFn(delegate, delegateName, name);\n            proto[name] = function () {\n                return patchDelegate(this, arguments);\n            };\n            attachOriginToPatched(proto[name], delegate);\n        }\n    }\n    return delegate;\n}\n// TODO: @JiaLiPassion, support cancel task later if necessary\nfunction patchMacroTask(obj, funcName, metaCreator) {\n    let setNative = null;\n    function scheduleTask(task) {\n        const data = task.data;\n        data.args[data.cbIdx] = function () {\n            task.invoke.apply(this, arguments);\n        };\n        setNative.apply(data.target, data.args);\n        return task;\n    }\n    setNative = patchMethod(obj, funcName, (delegate) => function (self, args) {\n        const meta = metaCreator(self, args);\n        if (meta.cbIdx >= 0 && typeof args[meta.cbIdx] === 'function') {\n            return scheduleMacroTaskWithCurrentZone(meta.name, args[meta.cbIdx], meta, scheduleTask);\n        }\n        else {\n            // cause an error by calling it directly.\n            return delegate.apply(self, args);\n        }\n    });\n}\nfunction attachOriginToPatched(patched, original) {\n    patched[zoneSymbol('OriginalDelegate')] = original;\n}\nlet isDetectedIEOrEdge = false;\nlet ieOrEdge = false;\nfunction isIE() {\n    try {\n        const ua = internalWindow.navigator.userAgent;\n        if (ua.indexOf('MSIE ') !== -1 || ua.indexOf('Trident/') !== -1) {\n            return true;\n        }\n    }\n    catch (error) { }\n    return false;\n}\nfunction isIEOrEdge() {\n    if (isDetectedIEOrEdge) {\n        return ieOrEdge;\n    }\n    isDetectedIEOrEdge = true;\n    try {\n        const ua = internalWindow.navigator.userAgent;\n        if (ua.indexOf('MSIE ') !== -1 || ua.indexOf('Trident/') !== -1 || ua.indexOf('Edge/') !== -1) {\n            ieOrEdge = true;\n        }\n    }\n    catch (error) { }\n    return ieOrEdge;\n}\n\n/**\n * @fileoverview\n * @suppress {missingRequire}\n */\nlet passiveSupported = false;\nif (typeof window !== 'undefined') {\n    try {\n        const options = Object.defineProperty({}, 'passive', {\n            get: function () {\n                passiveSupported = true;\n            },\n        });\n        // Note: We pass the `options` object as the event handler too. This is not compatible with the\n        // signature of `addEventListener` or `removeEventListener` but enables us to remove the handler\n        // without an actual handler.\n        window.addEventListener('test', options, options);\n        window.removeEventListener('test', options, options);\n    }\n    catch (err) {\n        passiveSupported = false;\n    }\n}\n// an identifier to tell ZoneTask do not create a new invoke closure\nconst OPTIMIZED_ZONE_EVENT_TASK_DATA = {\n    useG: true,\n};\nconst zoneSymbolEventNames = {};\nconst globalSources = {};\nconst EVENT_NAME_SYMBOL_REGX = new RegExp('^' + ZONE_SYMBOL_PREFIX + '(\\\\w+)(true|false)$');\nconst IMMEDIATE_PROPAGATION_SYMBOL = zoneSymbol('propagationStopped');\nfunction prepareEventNames(eventName, eventNameToString) {\n    const falseEventName = (eventNameToString ? eventNameToString(eventName) : eventName) + FALSE_STR;\n    const trueEventName = (eventNameToString ? eventNameToString(eventName) : eventName) + TRUE_STR;\n    const symbol = ZONE_SYMBOL_PREFIX + falseEventName;\n    const symbolCapture = ZONE_SYMBOL_PREFIX + trueEventName;\n    zoneSymbolEventNames[eventName] = {};\n    zoneSymbolEventNames[eventName][FALSE_STR] = symbol;\n    zoneSymbolEventNames[eventName][TRUE_STR] = symbolCapture;\n}\nfunction patchEventTarget(_global, api, apis, patchOptions) {\n    const ADD_EVENT_LISTENER = (patchOptions && patchOptions.add) || ADD_EVENT_LISTENER_STR;\n    const REMOVE_EVENT_LISTENER = (patchOptions && patchOptions.rm) || REMOVE_EVENT_LISTENER_STR;\n    const LISTENERS_EVENT_LISTENER = (patchOptions && patchOptions.listeners) || 'eventListeners';\n    const REMOVE_ALL_LISTENERS_EVENT_LISTENER = (patchOptions && patchOptions.rmAll) || 'removeAllListeners';\n    const zoneSymbolAddEventListener = zoneSymbol(ADD_EVENT_LISTENER);\n    const ADD_EVENT_LISTENER_SOURCE = '.' + ADD_EVENT_LISTENER + ':';\n    const PREPEND_EVENT_LISTENER = 'prependListener';\n    const PREPEND_EVENT_LISTENER_SOURCE = '.' + PREPEND_EVENT_LISTENER + ':';\n    const invokeTask = function (task, target, event) {\n        // for better performance, check isRemoved which is set\n        // by removeEventListener\n        if (task.isRemoved) {\n            return;\n        }\n        const delegate = task.callback;\n        if (typeof delegate === 'object' && delegate.handleEvent) {\n            // create the bind version of handleEvent when invoke\n            task.callback = (event) => delegate.handleEvent(event);\n            task.originalDelegate = delegate;\n        }\n        // invoke static task.invoke\n        // need to try/catch error here, otherwise, the error in one event listener\n        // will break the executions of the other event listeners. Also error will\n        // not remove the event listener when `once` options is true.\n        let error;\n        try {\n            task.invoke(task, target, [event]);\n        }\n        catch (err) {\n            error = err;\n        }\n        const options = task.options;\n        if (options && typeof options === 'object' && options.once) {\n            // if options.once is true, after invoke once remove listener here\n            // only browser need to do this, nodejs eventEmitter will cal removeListener\n            // inside EventEmitter.once\n            const delegate = task.originalDelegate ? task.originalDelegate : task.callback;\n            target[REMOVE_EVENT_LISTENER].call(target, event.type, delegate, options);\n        }\n        return error;\n    };\n    function globalCallback(context, event, isCapture) {\n        // https://github.com/angular/zone.js/issues/911, in IE, sometimes\n        // event will be undefined, so we need to use window.event\n        event = event || _global.event;\n        if (!event) {\n            return;\n        }\n        // event.target is needed for Samsung TV and SourceBuffer\n        // || global is needed https://github.com/angular/zone.js/issues/190\n        const target = context || event.target || _global;\n        const tasks = target[zoneSymbolEventNames[event.type][isCapture ? TRUE_STR : FALSE_STR]];\n        if (tasks) {\n            const errors = [];\n            // invoke all tasks which attached to current target with given event.type and capture = false\n            // for performance concern, if task.length === 1, just invoke\n            if (tasks.length === 1) {\n                const err = invokeTask(tasks[0], target, event);\n                err && errors.push(err);\n            }\n            else {\n                // https://github.com/angular/zone.js/issues/836\n                // copy the tasks array before invoke, to avoid\n                // the callback will remove itself or other listener\n                const copyTasks = tasks.slice();\n                for (let i = 0; i < copyTasks.length; i++) {\n                    if (event && event[IMMEDIATE_PROPAGATION_SYMBOL] === true) {\n                        break;\n                    }\n                    const err = invokeTask(copyTasks[i], target, event);\n                    err && errors.push(err);\n                }\n            }\n            // Since there is only one error, we don't need to schedule microTask\n            // to throw the error.\n            if (errors.length === 1) {\n                throw errors[0];\n            }\n            else {\n                for (let i = 0; i < errors.length; i++) {\n                    const err = errors[i];\n                    api.nativeScheduleMicroTask(() => {\n                        throw err;\n                    });\n                }\n            }\n        }\n    }\n    // global shared zoneAwareCallback to handle all event callback with capture = false\n    const globalZoneAwareCallback = function (event) {\n        return globalCallback(this, event, false);\n    };\n    // global shared zoneAwareCallback to handle all event callback with capture = true\n    const globalZoneAwareCaptureCallback = function (event) {\n        return globalCallback(this, event, true);\n    };\n    function patchEventTargetMethods(obj, patchOptions) {\n        if (!obj) {\n            return false;\n        }\n        let useGlobalCallback = true;\n        if (patchOptions && patchOptions.useG !== undefined) {\n            useGlobalCallback = patchOptions.useG;\n        }\n        const validateHandler = patchOptions && patchOptions.vh;\n        let checkDuplicate = true;\n        if (patchOptions && patchOptions.chkDup !== undefined) {\n            checkDuplicate = patchOptions.chkDup;\n        }\n        let returnTarget = false;\n        if (patchOptions && patchOptions.rt !== undefined) {\n            returnTarget = patchOptions.rt;\n        }\n        let proto = obj;\n        while (proto && !proto.hasOwnProperty(ADD_EVENT_LISTENER)) {\n            proto = ObjectGetPrototypeOf(proto);\n        }\n        if (!proto && obj[ADD_EVENT_LISTENER]) {\n            // somehow we did not find it, but we can see it. This happens on IE for Window properties.\n            proto = obj;\n        }\n        if (!proto) {\n            return false;\n        }\n        if (proto[zoneSymbolAddEventListener]) {\n            return false;\n        }\n        const eventNameToString = patchOptions && patchOptions.eventNameToString;\n        // a shared global taskData to pass data for scheduleEventTask\n        // so we do not need to create a new object just for pass some data\n        const taskData = {};\n        const nativeAddEventListener = (proto[zoneSymbolAddEventListener] = proto[ADD_EVENT_LISTENER]);\n        const nativeRemoveEventListener = (proto[zoneSymbol(REMOVE_EVENT_LISTENER)] =\n            proto[REMOVE_EVENT_LISTENER]);\n        const nativeListeners = (proto[zoneSymbol(LISTENERS_EVENT_LISTENER)] =\n            proto[LISTENERS_EVENT_LISTENER]);\n        const nativeRemoveAllListeners = (proto[zoneSymbol(REMOVE_ALL_LISTENERS_EVENT_LISTENER)] =\n            proto[REMOVE_ALL_LISTENERS_EVENT_LISTENER]);\n        let nativePrependEventListener;\n        if (patchOptions && patchOptions.prepend) {\n            nativePrependEventListener = proto[zoneSymbol(patchOptions.prepend)] =\n                proto[patchOptions.prepend];\n        }\n        /**\n         * This util function will build an option object with passive option\n         * to handle all possible input from the user.\n         */\n        function buildEventListenerOptions(options, passive) {\n            if (!passiveSupported && typeof options === 'object' && options) {\n                // doesn't support passive but user want to pass an object as options.\n                // this will not work on some old browser, so we just pass a boolean\n                // as useCapture parameter\n                return !!options.capture;\n            }\n            if (!passiveSupported || !passive) {\n                return options;\n            }\n            if (typeof options === 'boolean') {\n                return { capture: options, passive: true };\n            }\n            if (!options) {\n                return { passive: true };\n            }\n            if (typeof options === 'object' && options.passive !== false) {\n                return { ...options, passive: true };\n            }\n            return options;\n        }\n        const customScheduleGlobal = function (task) {\n            // if there is already a task for the eventName + capture,\n            // just return, because we use the shared globalZoneAwareCallback here.\n            if (taskData.isExisting) {\n                return;\n            }\n            return nativeAddEventListener.call(taskData.target, taskData.eventName, taskData.capture ? globalZoneAwareCaptureCallback : globalZoneAwareCallback, taskData.options);\n        };\n        const customCancelGlobal = function (task) {\n            // if task is not marked as isRemoved, this call is directly\n            // from Zone.prototype.cancelTask, we should remove the task\n            // from tasksList of target first\n            if (!task.isRemoved) {\n                const symbolEventNames = zoneSymbolEventNames[task.eventName];\n                let symbolEventName;\n                if (symbolEventNames) {\n                    symbolEventName = symbolEventNames[task.capture ? TRUE_STR : FALSE_STR];\n                }\n                const existingTasks = symbolEventName && task.target[symbolEventName];\n                if (existingTasks) {\n                    for (let i = 0; i < existingTasks.length; i++) {\n                        const existingTask = existingTasks[i];\n                        if (existingTask === task) {\n                            existingTasks.splice(i, 1);\n                            // set isRemoved to data for faster invokeTask check\n                            task.isRemoved = true;\n                            if (existingTasks.length === 0) {\n                                // all tasks for the eventName + capture have gone,\n                                // remove globalZoneAwareCallback and remove the task cache from target\n                                task.allRemoved = true;\n                                task.target[symbolEventName] = null;\n                            }\n                            break;\n                        }\n                    }\n                }\n            }\n            // if all tasks for the eventName + capture have gone,\n            // we will really remove the global event callback,\n            // if not, return\n            if (!task.allRemoved) {\n                return;\n            }\n            return nativeRemoveEventListener.call(task.target, task.eventName, task.capture ? globalZoneAwareCaptureCallback : globalZoneAwareCallback, task.options);\n        };\n        const customScheduleNonGlobal = function (task) {\n            return nativeAddEventListener.call(taskData.target, taskData.eventName, task.invoke, taskData.options);\n        };\n        const customSchedulePrepend = function (task) {\n            return nativePrependEventListener.call(taskData.target, taskData.eventName, task.invoke, taskData.options);\n        };\n        const customCancelNonGlobal = function (task) {\n            return nativeRemoveEventListener.call(task.target, task.eventName, task.invoke, task.options);\n        };\n        const customSchedule = useGlobalCallback ? customScheduleGlobal : customScheduleNonGlobal;\n        const customCancel = useGlobalCallback ? customCancelGlobal : customCancelNonGlobal;\n        const compareTaskCallbackVsDelegate = function (task, delegate) {\n            const typeOfDelegate = typeof delegate;\n            return ((typeOfDelegate === 'function' && task.callback === delegate) ||\n                (typeOfDelegate === 'object' && task.originalDelegate === delegate));\n        };\n        const compare = patchOptions && patchOptions.diff ? patchOptions.diff : compareTaskCallbackVsDelegate;\n        const unpatchedEvents = Zone[zoneSymbol('UNPATCHED_EVENTS')];\n        const passiveEvents = _global[zoneSymbol('PASSIVE_EVENTS')];\n        const makeAddListener = function (nativeListener, addSource, customScheduleFn, customCancelFn, returnTarget = false, prepend = false) {\n            return function () {\n                const target = this || _global;\n                let eventName = arguments[0];\n                if (patchOptions && patchOptions.transferEventName) {\n                    eventName = patchOptions.transferEventName(eventName);\n                }\n                let delegate = arguments[1];\n                if (!delegate) {\n                    return nativeListener.apply(this, arguments);\n                }\n                if (isNode && eventName === 'uncaughtException') {\n                    // don't patch uncaughtException of nodejs to prevent endless loop\n                    return nativeListener.apply(this, arguments);\n                }\n                // don't create the bind delegate function for handleEvent\n                // case here to improve addEventListener performance\n                // we will create the bind delegate when invoke\n                let isHandleEvent = false;\n                if (typeof delegate !== 'function') {\n                    if (!delegate.handleEvent) {\n                        return nativeListener.apply(this, arguments);\n                    }\n                    isHandleEvent = true;\n                }\n                if (validateHandler && !validateHandler(nativeListener, delegate, target, arguments)) {\n                    return;\n                }\n                const passive = passiveSupported && !!passiveEvents && passiveEvents.indexOf(eventName) !== -1;\n                const options = buildEventListenerOptions(arguments[2], passive);\n                const signal = options &&\n                    typeof options === 'object' &&\n                    options.signal &&\n                    typeof options.signal === 'object'\n                    ? options.signal\n                    : undefined;\n                if (signal?.aborted) {\n                    // the signal is an aborted one, just return without attaching the event listener.\n                    return;\n                }\n                if (unpatchedEvents) {\n                    // check unpatched list\n                    for (let i = 0; i < unpatchedEvents.length; i++) {\n                        if (eventName === unpatchedEvents[i]) {\n                            if (passive) {\n                                return nativeListener.call(target, eventName, delegate, options);\n                            }\n                            else {\n                                return nativeListener.apply(this, arguments);\n                            }\n                        }\n                    }\n                }\n                const capture = !options ? false : typeof options === 'boolean' ? true : options.capture;\n                const once = options && typeof options === 'object' ? options.once : false;\n                const zone = Zone.current;\n                let symbolEventNames = zoneSymbolEventNames[eventName];\n                if (!symbolEventNames) {\n                    prepareEventNames(eventName, eventNameToString);\n                    symbolEventNames = zoneSymbolEventNames[eventName];\n                }\n                const symbolEventName = symbolEventNames[capture ? TRUE_STR : FALSE_STR];\n                let existingTasks = target[symbolEventName];\n                let isExisting = false;\n                if (existingTasks) {\n                    // already have task registered\n                    isExisting = true;\n                    if (checkDuplicate) {\n                        for (let i = 0; i < existingTasks.length; i++) {\n                            if (compare(existingTasks[i], delegate)) {\n                                // same callback, same capture, same event name, just return\n                                return;\n                            }\n                        }\n                    }\n                }\n                else {\n                    existingTasks = target[symbolEventName] = [];\n                }\n                let source;\n                const constructorName = target.constructor['name'];\n                const targetSource = globalSources[constructorName];\n                if (targetSource) {\n                    source = targetSource[eventName];\n                }\n                if (!source) {\n                    source =\n                        constructorName +\n                            addSource +\n                            (eventNameToString ? eventNameToString(eventName) : eventName);\n                }\n                // do not create a new object as task.data to pass those things\n                // just use the global shared one\n                taskData.options = options;\n                if (once) {\n                    // if addEventListener with once options, we don't pass it to\n                    // native addEventListener, instead we keep the once setting\n                    // and handle ourselves.\n                    taskData.options.once = false;\n                }\n                taskData.target = target;\n                taskData.capture = capture;\n                taskData.eventName = eventName;\n                taskData.isExisting = isExisting;\n                const data = useGlobalCallback ? OPTIMIZED_ZONE_EVENT_TASK_DATA : undefined;\n                // keep taskData into data to allow onScheduleEventTask to access the task information\n                if (data) {\n                    data.taskData = taskData;\n                }\n                if (signal) {\n                    // if addEventListener with signal options, we don't pass it to\n                    // native addEventListener, instead we keep the signal setting\n                    // and handle ourselves.\n                    taskData.options.signal = undefined;\n                }\n                const task = zone.scheduleEventTask(source, delegate, data, customScheduleFn, customCancelFn);\n                if (signal) {\n                    // after task is scheduled, we need to store the signal back to task.options\n                    taskData.options.signal = signal;\n                    nativeListener.call(signal, 'abort', () => {\n                        task.zone.cancelTask(task);\n                    }, { once: true });\n                }\n                // should clear taskData.target to avoid memory leak\n                // issue, https://github.com/angular/angular/issues/20442\n                taskData.target = null;\n                // need to clear up taskData because it is a global object\n                if (data) {\n                    data.taskData = null;\n                }\n                // have to save those information to task in case\n                // application may call task.zone.cancelTask() directly\n                if (once) {\n                    options.once = true;\n                }\n                if (!(!passiveSupported && typeof task.options === 'boolean')) {\n                    // if not support passive, and we pass an option object\n                    // to addEventListener, we should save the options to task\n                    task.options = options;\n                }\n                task.target = target;\n                task.capture = capture;\n                task.eventName = eventName;\n                if (isHandleEvent) {\n                    // save original delegate for compare to check duplicate\n                    task.originalDelegate = delegate;\n                }\n                if (!prepend) {\n                    existingTasks.push(task);\n                }\n                else {\n                    existingTasks.unshift(task);\n                }\n                if (returnTarget) {\n                    return target;\n                }\n            };\n        };\n        proto[ADD_EVENT_LISTENER] = makeAddListener(nativeAddEventListener, ADD_EVENT_LISTENER_SOURCE, customSchedule, customCancel, returnTarget);\n        if (nativePrependEventListener) {\n            proto[PREPEND_EVENT_LISTENER] = makeAddListener(nativePrependEventListener, PREPEND_EVENT_LISTENER_SOURCE, customSchedulePrepend, customCancel, returnTarget, true);\n        }\n        proto[REMOVE_EVENT_LISTENER] = function () {\n            const target = this || _global;\n            let eventName = arguments[0];\n            if (patchOptions && patchOptions.transferEventName) {\n                eventName = patchOptions.transferEventName(eventName);\n            }\n            const options = arguments[2];\n            const capture = !options ? false : typeof options === 'boolean' ? true : options.capture;\n            const delegate = arguments[1];\n            if (!delegate) {\n                return nativeRemoveEventListener.apply(this, arguments);\n            }\n            if (validateHandler &&\n                !validateHandler(nativeRemoveEventListener, delegate, target, arguments)) {\n                return;\n            }\n            const symbolEventNames = zoneSymbolEventNames[eventName];\n            let symbolEventName;\n            if (symbolEventNames) {\n                symbolEventName = symbolEventNames[capture ? TRUE_STR : FALSE_STR];\n            }\n            const existingTasks = symbolEventName && target[symbolEventName];\n            if (existingTasks) {\n                for (let i = 0; i < existingTasks.length; i++) {\n                    const existingTask = existingTasks[i];\n                    if (compare(existingTask, delegate)) {\n                        existingTasks.splice(i, 1);\n                        // set isRemoved to data for faster invokeTask check\n                        existingTask.isRemoved = true;\n                        if (existingTasks.length === 0) {\n                            // all tasks for the eventName + capture have gone,\n                            // remove globalZoneAwareCallback and remove the task cache from target\n                            existingTask.allRemoved = true;\n                            target[symbolEventName] = null;\n                            // in the target, we have an event listener which is added by on_property\n                            // such as target.onclick = function() {}, so we need to clear this internal\n                            // property too if all delegates with capture=false were removed\n                            // https:// github.com/angular/angular/issues/31643\n                            // https://github.com/angular/angular/issues/54581\n                            if (!capture && typeof eventName === 'string') {\n                                const onPropertySymbol = ZONE_SYMBOL_PREFIX + 'ON_PROPERTY' + eventName;\n                                target[onPropertySymbol] = null;\n                            }\n                        }\n                        existingTask.zone.cancelTask(existingTask);\n                        if (returnTarget) {\n                            return target;\n                        }\n                        return;\n                    }\n                }\n            }\n            // issue 930, didn't find the event name or callback\n            // from zone kept existingTasks, the callback maybe\n            // added outside of zone, we need to call native removeEventListener\n            // to try to remove it.\n            return nativeRemoveEventListener.apply(this, arguments);\n        };\n        proto[LISTENERS_EVENT_LISTENER] = function () {\n            const target = this || _global;\n            let eventName = arguments[0];\n            if (patchOptions && patchOptions.transferEventName) {\n                eventName = patchOptions.transferEventName(eventName);\n            }\n            const listeners = [];\n            const tasks = findEventTasks(target, eventNameToString ? eventNameToString(eventName) : eventName);\n            for (let i = 0; i < tasks.length; i++) {\n                const task = tasks[i];\n                let delegate = task.originalDelegate ? task.originalDelegate : task.callback;\n                listeners.push(delegate);\n            }\n            return listeners;\n        };\n        proto[REMOVE_ALL_LISTENERS_EVENT_LISTENER] = function () {\n            const target = this || _global;\n            let eventName = arguments[0];\n            if (!eventName) {\n                const keys = Object.keys(target);\n                for (let i = 0; i < keys.length; i++) {\n                    const prop = keys[i];\n                    const match = EVENT_NAME_SYMBOL_REGX.exec(prop);\n                    let evtName = match && match[1];\n                    // in nodejs EventEmitter, removeListener event is\n                    // used for monitoring the removeListener call,\n                    // so just keep removeListener eventListener until\n                    // all other eventListeners are removed\n                    if (evtName && evtName !== 'removeListener') {\n                        this[REMOVE_ALL_LISTENERS_EVENT_LISTENER].call(this, evtName);\n                    }\n                }\n                // remove removeListener listener finally\n                this[REMOVE_ALL_LISTENERS_EVENT_LISTENER].call(this, 'removeListener');\n            }\n            else {\n                if (patchOptions && patchOptions.transferEventName) {\n                    eventName = patchOptions.transferEventName(eventName);\n                }\n                const symbolEventNames = zoneSymbolEventNames[eventName];\n                if (symbolEventNames) {\n                    const symbolEventName = symbolEventNames[FALSE_STR];\n                    const symbolCaptureEventName = symbolEventNames[TRUE_STR];\n                    const tasks = target[symbolEventName];\n                    const captureTasks = target[symbolCaptureEventName];\n                    if (tasks) {\n                        const removeTasks = tasks.slice();\n                        for (let i = 0; i < removeTasks.length; i++) {\n                            const task = removeTasks[i];\n                            let delegate = task.originalDelegate ? task.originalDelegate : task.callback;\n                            this[REMOVE_EVENT_LISTENER].call(this, eventName, delegate, task.options);\n                        }\n                    }\n                    if (captureTasks) {\n                        const removeTasks = captureTasks.slice();\n                        for (let i = 0; i < removeTasks.length; i++) {\n                            const task = removeTasks[i];\n                            let delegate = task.originalDelegate ? task.originalDelegate : task.callback;\n                            this[REMOVE_EVENT_LISTENER].call(this, eventName, delegate, task.options);\n                        }\n                    }\n                }\n            }\n            if (returnTarget) {\n                return this;\n            }\n        };\n        // for native toString patch\n        attachOriginToPatched(proto[ADD_EVENT_LISTENER], nativeAddEventListener);\n        attachOriginToPatched(proto[REMOVE_EVENT_LISTENER], nativeRemoveEventListener);\n        if (nativeRemoveAllListeners) {\n            attachOriginToPatched(proto[REMOVE_ALL_LISTENERS_EVENT_LISTENER], nativeRemoveAllListeners);\n        }\n        if (nativeListeners) {\n            attachOriginToPatched(proto[LISTENERS_EVENT_LISTENER], nativeListeners);\n        }\n        return true;\n    }\n    let results = [];\n    for (let i = 0; i < apis.length; i++) {\n        results[i] = patchEventTargetMethods(apis[i], patchOptions);\n    }\n    return results;\n}\nfunction findEventTasks(target, eventName) {\n    if (!eventName) {\n        const foundTasks = [];\n        for (let prop in target) {\n            const match = EVENT_NAME_SYMBOL_REGX.exec(prop);\n            let evtName = match && match[1];\n            if (evtName && (!eventName || evtName === eventName)) {\n                const tasks = target[prop];\n                if (tasks) {\n                    for (let i = 0; i < tasks.length; i++) {\n                        foundTasks.push(tasks[i]);\n                    }\n                }\n            }\n        }\n        return foundTasks;\n    }\n    let symbolEventName = zoneSymbolEventNames[eventName];\n    if (!symbolEventName) {\n        prepareEventNames(eventName);\n        symbolEventName = zoneSymbolEventNames[eventName];\n    }\n    const captureFalseTasks = target[symbolEventName[FALSE_STR]];\n    const captureTrueTasks = target[symbolEventName[TRUE_STR]];\n    if (!captureFalseTasks) {\n        return captureTrueTasks ? captureTrueTasks.slice() : [];\n    }\n    else {\n        return captureTrueTasks\n            ? captureFalseTasks.concat(captureTrueTasks)\n            : captureFalseTasks.slice();\n    }\n}\nfunction patchEventPrototype(global, api) {\n    const Event = global['Event'];\n    if (Event && Event.prototype) {\n        api.patchMethod(Event.prototype, 'stopImmediatePropagation', (delegate) => function (self, args) {\n            self[IMMEDIATE_PROPAGATION_SYMBOL] = true;\n            // we need to call the native stopImmediatePropagation\n            // in case in some hybrid application, some part of\n            // application will be controlled by zone, some are not\n            delegate && delegate.apply(self, args);\n        });\n    }\n}\n\n/**\n * @fileoverview\n * @suppress {missingRequire}\n */\nfunction patchQueueMicrotask(global, api) {\n    api.patchMethod(global, 'queueMicrotask', (delegate) => {\n        return function (self, args) {\n            Zone.current.scheduleMicroTask('queueMicrotask', args[0]);\n        };\n    });\n}\n\n/**\n * @fileoverview\n * @suppress {missingRequire}\n */\nconst taskSymbol = zoneSymbol('zoneTask');\nfunction patchTimer(window, setName, cancelName, nameSuffix) {\n    let setNative = null;\n    let clearNative = null;\n    setName += nameSuffix;\n    cancelName += nameSuffix;\n    const tasksByHandleId = {};\n    function scheduleTask(task) {\n        const data = task.data;\n        data.args[0] = function () {\n            return task.invoke.apply(this, arguments);\n        };\n        data.handleId = setNative.apply(window, data.args);\n        return task;\n    }\n    function clearTask(task) {\n        return clearNative.call(window, task.data.handleId);\n    }\n    setNative = patchMethod(window, setName, (delegate) => function (self, args) {\n        if (typeof args[0] === 'function') {\n            const options = {\n                isPeriodic: nameSuffix === 'Interval',\n                delay: nameSuffix === 'Timeout' || nameSuffix === 'Interval' ? args[1] || 0 : undefined,\n                args: args,\n            };\n            const callback = args[0];\n            args[0] = function timer() {\n                try {\n                    return callback.apply(this, arguments);\n                }\n                finally {\n                    // issue-934, task will be cancelled\n                    // even it is a periodic task such as\n                    // setInterval\n                    // https://github.com/angular/angular/issues/40387\n                    // Cleanup tasksByHandleId should be handled before scheduleTask\n                    // Since some zoneSpec may intercept and doesn't trigger\n                    // scheduleFn(scheduleTask) provided here.\n                    if (!options.isPeriodic) {\n                        if (typeof options.handleId === 'number') {\n                            // in non-nodejs env, we remove timerId\n                            // from local cache\n                            delete tasksByHandleId[options.handleId];\n                        }\n                        else if (options.handleId) {\n                            // Node returns complex objects as handleIds\n                            // we remove task reference from timer object\n                            options.handleId[taskSymbol] = null;\n                        }\n                    }\n                }\n            };\n            const task = scheduleMacroTaskWithCurrentZone(setName, args[0], options, scheduleTask, clearTask);\n            if (!task) {\n                return task;\n            }\n            // Node.js must additionally support the ref and unref functions.\n            const handle = task.data.handleId;\n            if (typeof handle === 'number') {\n                // for non nodejs env, we save handleId: task\n                // mapping in local cache for clearTimeout\n                tasksByHandleId[handle] = task;\n            }\n            else if (handle) {\n                // for nodejs env, we save task\n                // reference in timerId Object for clearTimeout\n                handle[taskSymbol] = task;\n            }\n            // check whether handle is null, because some polyfill or browser\n            // may return undefined from setTimeout/setInterval/setImmediate/requestAnimationFrame\n            if (handle &&\n                handle.ref &&\n                handle.unref &&\n                typeof handle.ref === 'function' &&\n                typeof handle.unref === 'function') {\n                task.ref = handle.ref.bind(handle);\n                task.unref = handle.unref.bind(handle);\n            }\n            if (typeof handle === 'number' || handle) {\n                return handle;\n            }\n            return task;\n        }\n        else {\n            // cause an error by calling it directly.\n            return delegate.apply(window, args);\n        }\n    });\n    clearNative = patchMethod(window, cancelName, (delegate) => function (self, args) {\n        const id = args[0];\n        let task;\n        if (typeof id === 'number') {\n            // non nodejs env.\n            task = tasksByHandleId[id];\n        }\n        else {\n            // nodejs env.\n            task = id && id[taskSymbol];\n            // other environments.\n            if (!task) {\n                task = id;\n            }\n        }\n        if (task && typeof task.type === 'string') {\n            if (task.state !== 'notScheduled' &&\n                ((task.cancelFn && task.data.isPeriodic) || task.runCount === 0)) {\n                if (typeof id === 'number') {\n                    delete tasksByHandleId[id];\n                }\n                else if (id) {\n                    id[taskSymbol] = null;\n                }\n                // Do not cancel already canceled functions\n                task.zone.cancelTask(task);\n            }\n        }\n        else {\n            // cause an error by calling it directly.\n            delegate.apply(window, args);\n        }\n    });\n}\n\nfunction patchCustomElements(_global, api) {\n    const { isBrowser, isMix } = api.getGlobalObjects();\n    if ((!isBrowser && !isMix) || !_global['customElements'] || !('customElements' in _global)) {\n        return;\n    }\n    // https://html.spec.whatwg.org/multipage/custom-elements.html#concept-custom-element-definition-lifecycle-callbacks\n    const callbacks = [\n        'connectedCallback',\n        'disconnectedCallback',\n        'adoptedCallback',\n        'attributeChangedCallback',\n        'formAssociatedCallback',\n        'formDisabledCallback',\n        'formResetCallback',\n        'formStateRestoreCallback',\n    ];\n    api.patchCallbacks(api, _global.customElements, 'customElements', 'define', callbacks);\n}\n\nfunction eventTargetPatch(_global, api) {\n    if (Zone[api.symbol('patchEventTarget')]) {\n        // EventTarget is already patched.\n        return;\n    }\n    const { eventNames, zoneSymbolEventNames, TRUE_STR, FALSE_STR, ZONE_SYMBOL_PREFIX } = api.getGlobalObjects();\n    //  predefine all __zone_symbol__ + eventName + true/false string\n    for (let i = 0; i < eventNames.length; i++) {\n        const eventName = eventNames[i];\n        const falseEventName = eventName + FALSE_STR;\n        const trueEventName = eventName + TRUE_STR;\n        const symbol = ZONE_SYMBOL_PREFIX + falseEventName;\n        const symbolCapture = ZONE_SYMBOL_PREFIX + trueEventName;\n        zoneSymbolEventNames[eventName] = {};\n        zoneSymbolEventNames[eventName][FALSE_STR] = symbol;\n        zoneSymbolEventNames[eventName][TRUE_STR] = symbolCapture;\n    }\n    const EVENT_TARGET = _global['EventTarget'];\n    if (!EVENT_TARGET || !EVENT_TARGET.prototype) {\n        return;\n    }\n    api.patchEventTarget(_global, api, [EVENT_TARGET && EVENT_TARGET.prototype]);\n    return true;\n}\nfunction patchEvent(global, api) {\n    api.patchEventPrototype(global, api);\n}\n\n/**\n * @fileoverview\n * @suppress {globalThis}\n */\nfunction filterProperties(target, onProperties, ignoreProperties) {\n    if (!ignoreProperties || ignoreProperties.length === 0) {\n        return onProperties;\n    }\n    const tip = ignoreProperties.filter((ip) => ip.target === target);\n    if (!tip || tip.length === 0) {\n        return onProperties;\n    }\n    const targetIgnoreProperties = tip[0].ignoreProperties;\n    return onProperties.filter((op) => targetIgnoreProperties.indexOf(op) === -1);\n}\nfunction patchFilteredProperties(target, onProperties, ignoreProperties, prototype) {\n    // check whether target is available, sometimes target will be undefined\n    // because different browser or some 3rd party plugin.\n    if (!target) {\n        return;\n    }\n    const filteredProperties = filterProperties(target, onProperties, ignoreProperties);\n    patchOnProperties(target, filteredProperties, prototype);\n}\n/**\n * Get all event name properties which the event name startsWith `on`\n * from the target object itself, inherited properties are not considered.\n */\nfunction getOnEventNames(target) {\n    return Object.getOwnPropertyNames(target)\n        .filter((name) => name.startsWith('on') && name.length > 2)\n        .map((name) => name.substring(2));\n}\nfunction propertyDescriptorPatch(api, _global) {\n    if (isNode && !isMix) {\n        return;\n    }\n    if (Zone[api.symbol('patchEvents')]) {\n        // events are already been patched by legacy patch.\n        return;\n    }\n    const ignoreProperties = _global['__Zone_ignore_on_properties'];\n    // for browsers that we can patch the descriptor:  Chrome & Firefox\n    let patchTargets = [];\n    if (isBrowser) {\n        const internalWindow = window;\n        patchTargets = patchTargets.concat([\n            'Document',\n            'SVGElement',\n            'Element',\n            'HTMLElement',\n            'HTMLBodyElement',\n            'HTMLMediaElement',\n            'HTMLFrameSetElement',\n            'HTMLFrameElement',\n            'HTMLIFrameElement',\n            'HTMLMarqueeElement',\n            'Worker',\n        ]);\n        const ignoreErrorProperties = isIE()\n            ? [{ target: internalWindow, ignoreProperties: ['error'] }]\n            : [];\n        // in IE/Edge, onProp not exist in window object, but in WindowPrototype\n        // so we need to pass WindowPrototype to check onProp exist or not\n        patchFilteredProperties(internalWindow, getOnEventNames(internalWindow), ignoreProperties ? ignoreProperties.concat(ignoreErrorProperties) : ignoreProperties, ObjectGetPrototypeOf(internalWindow));\n    }\n    patchTargets = patchTargets.concat([\n        'XMLHttpRequest',\n        'XMLHttpRequestEventTarget',\n        'IDBIndex',\n        'IDBRequest',\n        'IDBOpenDBRequest',\n        'IDBDatabase',\n        'IDBTransaction',\n        'IDBCursor',\n        'WebSocket',\n    ]);\n    for (let i = 0; i < patchTargets.length; i++) {\n        const target = _global[patchTargets[i]];\n        target &&\n            target.prototype &&\n            patchFilteredProperties(target.prototype, getOnEventNames(target.prototype), ignoreProperties);\n    }\n}\n\n/**\n * @fileoverview\n * @suppress {missingRequire}\n */\nfunction patchBrowser(Zone) {\n    Zone.__load_patch('legacy', (global) => {\n        const legacyPatch = global[Zone.__symbol__('legacyPatch')];\n        if (legacyPatch) {\n            legacyPatch();\n        }\n    });\n    Zone.__load_patch('timers', (global) => {\n        const set = 'set';\n        const clear = 'clear';\n        patchTimer(global, set, clear, 'Timeout');\n        patchTimer(global, set, clear, 'Interval');\n        patchTimer(global, set, clear, 'Immediate');\n    });\n    Zone.__load_patch('requestAnimationFrame', (global) => {\n        patchTimer(global, 'request', 'cancel', 'AnimationFrame');\n        patchTimer(global, 'mozRequest', 'mozCancel', 'AnimationFrame');\n        patchTimer(global, 'webkitRequest', 'webkitCancel', 'AnimationFrame');\n    });\n    Zone.__load_patch('blocking', (global, Zone) => {\n        const blockingMethods = ['alert', 'prompt', 'confirm'];\n        for (let i = 0; i < blockingMethods.length; i++) {\n            const name = blockingMethods[i];\n            patchMethod(global, name, (delegate, symbol, name) => {\n                return function (s, args) {\n                    return Zone.current.run(delegate, global, args, name);\n                };\n            });\n        }\n    });\n    Zone.__load_patch('EventTarget', (global, Zone, api) => {\n        patchEvent(global, api);\n        eventTargetPatch(global, api);\n        // patch XMLHttpRequestEventTarget's addEventListener/removeEventListener\n        const XMLHttpRequestEventTarget = global['XMLHttpRequestEventTarget'];\n        if (XMLHttpRequestEventTarget && XMLHttpRequestEventTarget.prototype) {\n            api.patchEventTarget(global, api, [XMLHttpRequestEventTarget.prototype]);\n        }\n    });\n    Zone.__load_patch('MutationObserver', (global, Zone, api) => {\n        patchClass('MutationObserver');\n        patchClass('WebKitMutationObserver');\n    });\n    Zone.__load_patch('IntersectionObserver', (global, Zone, api) => {\n        patchClass('IntersectionObserver');\n    });\n    Zone.__load_patch('FileReader', (global, Zone, api) => {\n        patchClass('FileReader');\n    });\n    Zone.__load_patch('on_property', (global, Zone, api) => {\n        propertyDescriptorPatch(api, global);\n    });\n    Zone.__load_patch('customElements', (global, Zone, api) => {\n        patchCustomElements(global, api);\n    });\n    Zone.__load_patch('XHR', (global, Zone) => {\n        // Treat XMLHttpRequest as a macrotask.\n        patchXHR(global);\n        const XHR_TASK = zoneSymbol('xhrTask');\n        const XHR_SYNC = zoneSymbol('xhrSync');\n        const XHR_LISTENER = zoneSymbol('xhrListener');\n        const XHR_SCHEDULED = zoneSymbol('xhrScheduled');\n        const XHR_URL = zoneSymbol('xhrURL');\n        const XHR_ERROR_BEFORE_SCHEDULED = zoneSymbol('xhrErrorBeforeScheduled');\n        function patchXHR(window) {\n            const XMLHttpRequest = window['XMLHttpRequest'];\n            if (!XMLHttpRequest) {\n                // XMLHttpRequest is not available in service worker\n                return;\n            }\n            const XMLHttpRequestPrototype = XMLHttpRequest.prototype;\n            function findPendingTask(target) {\n                return target[XHR_TASK];\n            }\n            let oriAddListener = XMLHttpRequestPrototype[ZONE_SYMBOL_ADD_EVENT_LISTENER];\n            let oriRemoveListener = XMLHttpRequestPrototype[ZONE_SYMBOL_REMOVE_EVENT_LISTENER];\n            if (!oriAddListener) {\n                const XMLHttpRequestEventTarget = window['XMLHttpRequestEventTarget'];\n                if (XMLHttpRequestEventTarget) {\n                    const XMLHttpRequestEventTargetPrototype = XMLHttpRequestEventTarget.prototype;\n                    oriAddListener = XMLHttpRequestEventTargetPrototype[ZONE_SYMBOL_ADD_EVENT_LISTENER];\n                    oriRemoveListener = XMLHttpRequestEventTargetPrototype[ZONE_SYMBOL_REMOVE_EVENT_LISTENER];\n                }\n            }\n            const READY_STATE_CHANGE = 'readystatechange';\n            const SCHEDULED = 'scheduled';\n            function scheduleTask(task) {\n                const data = task.data;\n                const target = data.target;\n                target[XHR_SCHEDULED] = false;\n                target[XHR_ERROR_BEFORE_SCHEDULED] = false;\n                // remove existing event listener\n                const listener = target[XHR_LISTENER];\n                if (!oriAddListener) {\n                    oriAddListener = target[ZONE_SYMBOL_ADD_EVENT_LISTENER];\n                    oriRemoveListener = target[ZONE_SYMBOL_REMOVE_EVENT_LISTENER];\n                }\n                if (listener) {\n                    oriRemoveListener.call(target, READY_STATE_CHANGE, listener);\n                }\n                const newListener = (target[XHR_LISTENER] = () => {\n                    if (target.readyState === target.DONE) {\n                        // sometimes on some browsers XMLHttpRequest will fire onreadystatechange with\n                        // readyState=4 multiple times, so we need to check task state here\n                        if (!data.aborted && target[XHR_SCHEDULED] && task.state === SCHEDULED) {\n                            // check whether the xhr has registered onload listener\n                            // if that is the case, the task should invoke after all\n                            // onload listeners finish.\n                            // Also if the request failed without response (status = 0), the load event handler\n                            // will not be triggered, in that case, we should also invoke the placeholder callback\n                            // to close the XMLHttpRequest::send macroTask.\n                            // https://github.com/angular/angular/issues/38795\n                            const loadTasks = target[Zone.__symbol__('loadfalse')];\n                            if (target.status !== 0 && loadTasks && loadTasks.length > 0) {\n                                const oriInvoke = task.invoke;\n                                task.invoke = function () {\n                                    // need to load the tasks again, because in other\n                                    // load listener, they may remove themselves\n                                    const loadTasks = target[Zone.__symbol__('loadfalse')];\n                                    for (let i = 0; i < loadTasks.length; i++) {\n                                        if (loadTasks[i] === task) {\n                                            loadTasks.splice(i, 1);\n                                        }\n                                    }\n                                    if (!data.aborted && task.state === SCHEDULED) {\n                                        oriInvoke.call(task);\n                                    }\n                                };\n                                loadTasks.push(task);\n                            }\n                            else {\n                                task.invoke();\n                            }\n                        }\n                        else if (!data.aborted && target[XHR_SCHEDULED] === false) {\n                            // error occurs when xhr.send()\n                            target[XHR_ERROR_BEFORE_SCHEDULED] = true;\n                        }\n                    }\n                });\n                oriAddListener.call(target, READY_STATE_CHANGE, newListener);\n                const storedTask = target[XHR_TASK];\n                if (!storedTask) {\n                    target[XHR_TASK] = task;\n                }\n                sendNative.apply(target, data.args);\n                target[XHR_SCHEDULED] = true;\n                return task;\n            }\n            function placeholderCallback() { }\n            function clearTask(task) {\n                const data = task.data;\n                // Note - ideally, we would call data.target.removeEventListener here, but it's too late\n                // to prevent it from firing. So instead, we store info for the event listener.\n                data.aborted = true;\n                return abortNative.apply(data.target, data.args);\n            }\n            const openNative = patchMethod(XMLHttpRequestPrototype, 'open', () => function (self, args) {\n                self[XHR_SYNC] = args[2] == false;\n                self[XHR_URL] = args[1];\n                return openNative.apply(self, args);\n            });\n            const XMLHTTPREQUEST_SOURCE = 'XMLHttpRequest.send';\n            const fetchTaskAborting = zoneSymbol('fetchTaskAborting');\n            const fetchTaskScheduling = zoneSymbol('fetchTaskScheduling');\n            const sendNative = patchMethod(XMLHttpRequestPrototype, 'send', () => function (self, args) {\n                if (Zone.current[fetchTaskScheduling] === true) {\n                    // a fetch is scheduling, so we are using xhr to polyfill fetch\n                    // and because we already schedule macroTask for fetch, we should\n                    // not schedule a macroTask for xhr again\n                    return sendNative.apply(self, args);\n                }\n                if (self[XHR_SYNC]) {\n                    // if the XHR is sync there is no task to schedule, just execute the code.\n                    return sendNative.apply(self, args);\n                }\n                else {\n                    const options = {\n                        target: self,\n                        url: self[XHR_URL],\n                        isPeriodic: false,\n                        args: args,\n                        aborted: false,\n                    };\n                    const task = scheduleMacroTaskWithCurrentZone(XMLHTTPREQUEST_SOURCE, placeholderCallback, options, scheduleTask, clearTask);\n                    if (self &&\n                        self[XHR_ERROR_BEFORE_SCHEDULED] === true &&\n                        !options.aborted &&\n                        task.state === SCHEDULED) {\n                        // xhr request throw error when send\n                        // we should invoke task instead of leaving a scheduled\n                        // pending macroTask\n                        task.invoke();\n                    }\n                }\n            });\n            const abortNative = patchMethod(XMLHttpRequestPrototype, 'abort', () => function (self, args) {\n                const task = findPendingTask(self);\n                if (task && typeof task.type == 'string') {\n                    // If the XHR has already completed, do nothing.\n                    // If the XHR has already been aborted, do nothing.\n                    // Fix #569, call abort multiple times before done will cause\n                    // macroTask task count be negative number\n                    if (task.cancelFn == null || (task.data && task.data.aborted)) {\n                        return;\n                    }\n                    task.zone.cancelTask(task);\n                }\n                else if (Zone.current[fetchTaskAborting] === true) {\n                    // the abort is called from fetch polyfill, we need to call native abort of XHR.\n                    return abortNative.apply(self, args);\n                }\n                // Otherwise, we are trying to abort an XHR which has not yet been sent, so there is no\n                // task\n                // to cancel. Do nothing.\n            });\n        }\n    });\n    Zone.__load_patch('geolocation', (global) => {\n        /// GEO_LOCATION\n        if (global['navigator'] && global['navigator'].geolocation) {\n            patchPrototype(global['navigator'].geolocation, ['getCurrentPosition', 'watchPosition']);\n        }\n    });\n    Zone.__load_patch('PromiseRejectionEvent', (global, Zone) => {\n        // handle unhandled promise rejection\n        function findPromiseRejectionHandler(evtName) {\n            return function (e) {\n                const eventTasks = findEventTasks(global, evtName);\n                eventTasks.forEach((eventTask) => {\n                    // windows has added unhandledrejection event listener\n                    // trigger the event listener\n                    const PromiseRejectionEvent = global['PromiseRejectionEvent'];\n                    if (PromiseRejectionEvent) {\n                        const evt = new PromiseRejectionEvent(evtName, {\n                            promise: e.promise,\n                            reason: e.rejection,\n                        });\n                        eventTask.invoke(evt);\n                    }\n                });\n            };\n        }\n        if (global['PromiseRejectionEvent']) {\n            Zone[zoneSymbol('unhandledPromiseRejectionHandler')] =\n                findPromiseRejectionHandler('unhandledrejection');\n            Zone[zoneSymbol('rejectionHandledHandler')] =\n                findPromiseRejectionHandler('rejectionhandled');\n        }\n    });\n    Zone.__load_patch('queueMicrotask', (global, Zone, api) => {\n        patchQueueMicrotask(global, api);\n    });\n}\n\nfunction patchPromise(Zone) {\n    Zone.__load_patch('ZoneAwarePromise', (global, Zone, api) => {\n        const ObjectGetOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n        const ObjectDefineProperty = Object.defineProperty;\n        function readableObjectToString(obj) {\n            if (obj && obj.toString === Object.prototype.toString) {\n                const className = obj.constructor && obj.constructor.name;\n                return (className ? className : '') + ': ' + JSON.stringify(obj);\n            }\n            return obj ? obj.toString() : Object.prototype.toString.call(obj);\n        }\n        const __symbol__ = api.symbol;\n        const _uncaughtPromiseErrors = [];\n        const isDisableWrappingUncaughtPromiseRejection = global[__symbol__('DISABLE_WRAPPING_UNCAUGHT_PROMISE_REJECTION')] !== false;\n        const symbolPromise = __symbol__('Promise');\n        const symbolThen = __symbol__('then');\n        const creationTrace = '__creationTrace__';\n        api.onUnhandledError = (e) => {\n            if (api.showUncaughtError()) {\n                const rejection = e && e.rejection;\n                if (rejection) {\n                    console.error('Unhandled Promise rejection:', rejection instanceof Error ? rejection.message : rejection, '; Zone:', e.zone.name, '; Task:', e.task && e.task.source, '; Value:', rejection, rejection instanceof Error ? rejection.stack : undefined);\n                }\n                else {\n                    console.error(e);\n                }\n            }\n        };\n        api.microtaskDrainDone = () => {\n            while (_uncaughtPromiseErrors.length) {\n                const uncaughtPromiseError = _uncaughtPromiseErrors.shift();\n                try {\n                    uncaughtPromiseError.zone.runGuarded(() => {\n                        if (uncaughtPromiseError.throwOriginal) {\n                            throw uncaughtPromiseError.rejection;\n                        }\n                        throw uncaughtPromiseError;\n                    });\n                }\n                catch (error) {\n                    handleUnhandledRejection(error);\n                }\n            }\n        };\n        const UNHANDLED_PROMISE_REJECTION_HANDLER_SYMBOL = __symbol__('unhandledPromiseRejectionHandler');\n        function handleUnhandledRejection(e) {\n            api.onUnhandledError(e);\n            try {\n                const handler = Zone[UNHANDLED_PROMISE_REJECTION_HANDLER_SYMBOL];\n                if (typeof handler === 'function') {\n                    handler.call(this, e);\n                }\n            }\n            catch (err) { }\n        }\n        function isThenable(value) {\n            return value && value.then;\n        }\n        function forwardResolution(value) {\n            return value;\n        }\n        function forwardRejection(rejection) {\n            return ZoneAwarePromise.reject(rejection);\n        }\n        const symbolState = __symbol__('state');\n        const symbolValue = __symbol__('value');\n        const symbolFinally = __symbol__('finally');\n        const symbolParentPromiseValue = __symbol__('parentPromiseValue');\n        const symbolParentPromiseState = __symbol__('parentPromiseState');\n        const source = 'Promise.then';\n        const UNRESOLVED = null;\n        const RESOLVED = true;\n        const REJECTED = false;\n        const REJECTED_NO_CATCH = 0;\n        function makeResolver(promise, state) {\n            return (v) => {\n                try {\n                    resolvePromise(promise, state, v);\n                }\n                catch (err) {\n                    resolvePromise(promise, false, err);\n                }\n                // Do not return value or you will break the Promise spec.\n            };\n        }\n        const once = function () {\n            let wasCalled = false;\n            return function wrapper(wrappedFunction) {\n                return function () {\n                    if (wasCalled) {\n                        return;\n                    }\n                    wasCalled = true;\n                    wrappedFunction.apply(null, arguments);\n                };\n            };\n        };\n        const TYPE_ERROR = 'Promise resolved with itself';\n        const CURRENT_TASK_TRACE_SYMBOL = __symbol__('currentTaskTrace');\n        // Promise Resolution\n        function resolvePromise(promise, state, value) {\n            const onceWrapper = once();\n            if (promise === value) {\n                throw new TypeError(TYPE_ERROR);\n            }\n            if (promise[symbolState] === UNRESOLVED) {\n                // should only get value.then once based on promise spec.\n                let then = null;\n                try {\n                    if (typeof value === 'object' || typeof value === 'function') {\n                        then = value && value.then;\n                    }\n                }\n                catch (err) {\n                    onceWrapper(() => {\n                        resolvePromise(promise, false, err);\n                    })();\n                    return promise;\n                }\n                // if (value instanceof ZoneAwarePromise) {\n                if (state !== REJECTED &&\n                    value instanceof ZoneAwarePromise &&\n                    value.hasOwnProperty(symbolState) &&\n                    value.hasOwnProperty(symbolValue) &&\n                    value[symbolState] !== UNRESOLVED) {\n                    clearRejectedNoCatch(value);\n                    resolvePromise(promise, value[symbolState], value[symbolValue]);\n                }\n                else if (state !== REJECTED && typeof then === 'function') {\n                    try {\n                        then.call(value, onceWrapper(makeResolver(promise, state)), onceWrapper(makeResolver(promise, false)));\n                    }\n                    catch (err) {\n                        onceWrapper(() => {\n                            resolvePromise(promise, false, err);\n                        })();\n                    }\n                }\n                else {\n                    promise[symbolState] = state;\n                    const queue = promise[symbolValue];\n                    promise[symbolValue] = value;\n                    if (promise[symbolFinally] === symbolFinally) {\n                        // the promise is generated by Promise.prototype.finally\n                        if (state === RESOLVED) {\n                            // the state is resolved, should ignore the value\n                            // and use parent promise value\n                            promise[symbolState] = promise[symbolParentPromiseState];\n                            promise[symbolValue] = promise[symbolParentPromiseValue];\n                        }\n                    }\n                    // record task information in value when error occurs, so we can\n                    // do some additional work such as render longStackTrace\n                    if (state === REJECTED && value instanceof Error) {\n                        // check if longStackTraceZone is here\n                        const trace = Zone.currentTask &&\n                            Zone.currentTask.data &&\n                            Zone.currentTask.data[creationTrace];\n                        if (trace) {\n                            // only keep the long stack trace into error when in longStackTraceZone\n                            ObjectDefineProperty(value, CURRENT_TASK_TRACE_SYMBOL, {\n                                configurable: true,\n                                enumerable: false,\n                                writable: true,\n                                value: trace,\n                            });\n                        }\n                    }\n                    for (let i = 0; i < queue.length;) {\n                        scheduleResolveOrReject(promise, queue[i++], queue[i++], queue[i++], queue[i++]);\n                    }\n                    if (queue.length == 0 && state == REJECTED) {\n                        promise[symbolState] = REJECTED_NO_CATCH;\n                        let uncaughtPromiseError = value;\n                        try {\n                            // Here we throws a new Error to print more readable error log\n                            // and if the value is not an error, zone.js builds an `Error`\n                            // Object here to attach the stack information.\n                            throw new Error('Uncaught (in promise): ' +\n                                readableObjectToString(value) +\n                                (value && value.stack ? '\\n' + value.stack : ''));\n                        }\n                        catch (err) {\n                            uncaughtPromiseError = err;\n                        }\n                        if (isDisableWrappingUncaughtPromiseRejection) {\n                            // If disable wrapping uncaught promise reject\n                            // use the value instead of wrapping it.\n                            uncaughtPromiseError.throwOriginal = true;\n                        }\n                        uncaughtPromiseError.rejection = value;\n                        uncaughtPromiseError.promise = promise;\n                        uncaughtPromiseError.zone = Zone.current;\n                        uncaughtPromiseError.task = Zone.currentTask;\n                        _uncaughtPromiseErrors.push(uncaughtPromiseError);\n                        api.scheduleMicroTask(); // to make sure that it is running\n                    }\n                }\n            }\n            // Resolving an already resolved promise is a noop.\n            return promise;\n        }\n        const REJECTION_HANDLED_HANDLER = __symbol__('rejectionHandledHandler');\n        function clearRejectedNoCatch(promise) {\n            if (promise[symbolState] === REJECTED_NO_CATCH) {\n                // if the promise is rejected no catch status\n                // and queue.length > 0, means there is a error handler\n                // here to handle the rejected promise, we should trigger\n                // windows.rejectionhandled eventHandler or nodejs rejectionHandled\n                // eventHandler\n                try {\n                    const handler = Zone[REJECTION_HANDLED_HANDLER];\n                    if (handler && typeof handler === 'function') {\n                        handler.call(this, { rejection: promise[symbolValue], promise: promise });\n                    }\n                }\n                catch (err) { }\n                promise[symbolState] = REJECTED;\n                for (let i = 0; i < _uncaughtPromiseErrors.length; i++) {\n                    if (promise === _uncaughtPromiseErrors[i].promise) {\n                        _uncaughtPromiseErrors.splice(i, 1);\n                    }\n                }\n            }\n        }\n        function scheduleResolveOrReject(promise, zone, chainPromise, onFulfilled, onRejected) {\n            clearRejectedNoCatch(promise);\n            const promiseState = promise[symbolState];\n            const delegate = promiseState\n                ? typeof onFulfilled === 'function'\n                    ? onFulfilled\n                    : forwardResolution\n                : typeof onRejected === 'function'\n                    ? onRejected\n                    : forwardRejection;\n            zone.scheduleMicroTask(source, () => {\n                try {\n                    const parentPromiseValue = promise[symbolValue];\n                    const isFinallyPromise = !!chainPromise && symbolFinally === chainPromise[symbolFinally];\n                    if (isFinallyPromise) {\n                        // if the promise is generated from finally call, keep parent promise's state and value\n                        chainPromise[symbolParentPromiseValue] = parentPromiseValue;\n                        chainPromise[symbolParentPromiseState] = promiseState;\n                    }\n                    // should not pass value to finally callback\n                    const value = zone.run(delegate, undefined, isFinallyPromise && delegate !== forwardRejection && delegate !== forwardResolution\n                        ? []\n                        : [parentPromiseValue]);\n                    resolvePromise(chainPromise, true, value);\n                }\n                catch (error) {\n                    // if error occurs, should always return this error\n                    resolvePromise(chainPromise, false, error);\n                }\n            }, chainPromise);\n        }\n        const ZONE_AWARE_PROMISE_TO_STRING = 'function ZoneAwarePromise() { [native code] }';\n        const noop = function () { };\n        const AggregateError = global.AggregateError;\n        class ZoneAwarePromise {\n            static toString() {\n                return ZONE_AWARE_PROMISE_TO_STRING;\n            }\n            static resolve(value) {\n                if (value instanceof ZoneAwarePromise) {\n                    return value;\n                }\n                return resolvePromise(new this(null), RESOLVED, value);\n            }\n            static reject(error) {\n                return resolvePromise(new this(null), REJECTED, error);\n            }\n            static withResolvers() {\n                const result = {};\n                result.promise = new ZoneAwarePromise((res, rej) => {\n                    result.resolve = res;\n                    result.reject = rej;\n                });\n                return result;\n            }\n            static any(values) {\n                if (!values || typeof values[Symbol.iterator] !== 'function') {\n                    return Promise.reject(new AggregateError([], 'All promises were rejected'));\n                }\n                const promises = [];\n                let count = 0;\n                try {\n                    for (let v of values) {\n                        count++;\n                        promises.push(ZoneAwarePromise.resolve(v));\n                    }\n                }\n                catch (err) {\n                    return Promise.reject(new AggregateError([], 'All promises were rejected'));\n                }\n                if (count === 0) {\n                    return Promise.reject(new AggregateError([], 'All promises were rejected'));\n                }\n                let finished = false;\n                const errors = [];\n                return new ZoneAwarePromise((resolve, reject) => {\n                    for (let i = 0; i < promises.length; i++) {\n                        promises[i].then((v) => {\n                            if (finished) {\n                                return;\n                            }\n                            finished = true;\n                            resolve(v);\n                        }, (err) => {\n                            errors.push(err);\n                            count--;\n                            if (count === 0) {\n                                finished = true;\n                                reject(new AggregateError(errors, 'All promises were rejected'));\n                            }\n                        });\n                    }\n                });\n            }\n            static race(values) {\n                let resolve;\n                let reject;\n                let promise = new this((res, rej) => {\n                    resolve = res;\n                    reject = rej;\n                });\n                function onResolve(value) {\n                    resolve(value);\n                }\n                function onReject(error) {\n                    reject(error);\n                }\n                for (let value of values) {\n                    if (!isThenable(value)) {\n                        value = this.resolve(value);\n                    }\n                    value.then(onResolve, onReject);\n                }\n                return promise;\n            }\n            static all(values) {\n                return ZoneAwarePromise.allWithCallback(values);\n            }\n            static allSettled(values) {\n                const P = this && this.prototype instanceof ZoneAwarePromise ? this : ZoneAwarePromise;\n                return P.allWithCallback(values, {\n                    thenCallback: (value) => ({ status: 'fulfilled', value }),\n                    errorCallback: (err) => ({ status: 'rejected', reason: err }),\n                });\n            }\n            static allWithCallback(values, callback) {\n                let resolve;\n                let reject;\n                let promise = new this((res, rej) => {\n                    resolve = res;\n                    reject = rej;\n                });\n                // Start at 2 to prevent prematurely resolving if .then is called immediately.\n                let unresolvedCount = 2;\n                let valueIndex = 0;\n                const resolvedValues = [];\n                for (let value of values) {\n                    if (!isThenable(value)) {\n                        value = this.resolve(value);\n                    }\n                    const curValueIndex = valueIndex;\n                    try {\n                        value.then((value) => {\n                            resolvedValues[curValueIndex] = callback ? callback.thenCallback(value) : value;\n                            unresolvedCount--;\n                            if (unresolvedCount === 0) {\n                                resolve(resolvedValues);\n                            }\n                        }, (err) => {\n                            if (!callback) {\n                                reject(err);\n                            }\n                            else {\n                                resolvedValues[curValueIndex] = callback.errorCallback(err);\n                                unresolvedCount--;\n                                if (unresolvedCount === 0) {\n                                    resolve(resolvedValues);\n                                }\n                            }\n                        });\n                    }\n                    catch (thenErr) {\n                        reject(thenErr);\n                    }\n                    unresolvedCount++;\n                    valueIndex++;\n                }\n                // Make the unresolvedCount zero-based again.\n                unresolvedCount -= 2;\n                if (unresolvedCount === 0) {\n                    resolve(resolvedValues);\n                }\n                return promise;\n            }\n            constructor(executor) {\n                const promise = this;\n                if (!(promise instanceof ZoneAwarePromise)) {\n                    throw new Error('Must be an instanceof Promise.');\n                }\n                promise[symbolState] = UNRESOLVED;\n                promise[symbolValue] = []; // queue;\n                try {\n                    const onceWrapper = once();\n                    executor &&\n                        executor(onceWrapper(makeResolver(promise, RESOLVED)), onceWrapper(makeResolver(promise, REJECTED)));\n                }\n                catch (error) {\n                    resolvePromise(promise, false, error);\n                }\n            }\n            get [Symbol.toStringTag]() {\n                return 'Promise';\n            }\n            get [Symbol.species]() {\n                return ZoneAwarePromise;\n            }\n            then(onFulfilled, onRejected) {\n                // We must read `Symbol.species` safely because `this` may be anything. For instance, `this`\n                // may be an object without a prototype (created through `Object.create(null)`); thus\n                // `this.constructor` will be undefined. One of the use cases is SystemJS creating\n                // prototype-less objects (modules) via `Object.create(null)`. The SystemJS creates an empty\n                // object and copies promise properties into that object (within the `getOrCreateLoad`\n                // function). The zone.js then checks if the resolved value has the `then` method and\n                // invokes it with the `value` context. Otherwise, this will throw an error: `TypeError:\n                // Cannot read properties of undefined (reading 'Symbol(Symbol.species)')`.\n                let C = this.constructor?.[Symbol.species];\n                if (!C || typeof C !== 'function') {\n                    C = this.constructor || ZoneAwarePromise;\n                }\n                const chainPromise = new C(noop);\n                const zone = Zone.current;\n                if (this[symbolState] == UNRESOLVED) {\n                    this[symbolValue].push(zone, chainPromise, onFulfilled, onRejected);\n                }\n                else {\n                    scheduleResolveOrReject(this, zone, chainPromise, onFulfilled, onRejected);\n                }\n                return chainPromise;\n            }\n            catch(onRejected) {\n                return this.then(null, onRejected);\n            }\n            finally(onFinally) {\n                // See comment on the call to `then` about why thee `Symbol.species` is safely accessed.\n                let C = this.constructor?.[Symbol.species];\n                if (!C || typeof C !== 'function') {\n                    C = ZoneAwarePromise;\n                }\n                const chainPromise = new C(noop);\n                chainPromise[symbolFinally] = symbolFinally;\n                const zone = Zone.current;\n                if (this[symbolState] == UNRESOLVED) {\n                    this[symbolValue].push(zone, chainPromise, onFinally, onFinally);\n                }\n                else {\n                    scheduleResolveOrReject(this, zone, chainPromise, onFinally, onFinally);\n                }\n                return chainPromise;\n            }\n        }\n        // Protect against aggressive optimizers dropping seemingly unused properties.\n        // E.g. Closure Compiler in advanced mode.\n        ZoneAwarePromise['resolve'] = ZoneAwarePromise.resolve;\n        ZoneAwarePromise['reject'] = ZoneAwarePromise.reject;\n        ZoneAwarePromise['race'] = ZoneAwarePromise.race;\n        ZoneAwarePromise['all'] = ZoneAwarePromise.all;\n        const NativePromise = (global[symbolPromise] = global['Promise']);\n        global['Promise'] = ZoneAwarePromise;\n        const symbolThenPatched = __symbol__('thenPatched');\n        function patchThen(Ctor) {\n            const proto = Ctor.prototype;\n            const prop = ObjectGetOwnPropertyDescriptor(proto, 'then');\n            if (prop && (prop.writable === false || !prop.configurable)) {\n                // check Ctor.prototype.then propertyDescriptor is writable or not\n                // in meteor env, writable is false, we should ignore such case\n                return;\n            }\n            const originalThen = proto.then;\n            // Keep a reference to the original method.\n            proto[symbolThen] = originalThen;\n            Ctor.prototype.then = function (onResolve, onReject) {\n                const wrapped = new ZoneAwarePromise((resolve, reject) => {\n                    originalThen.call(this, resolve, reject);\n                });\n                return wrapped.then(onResolve, onReject);\n            };\n            Ctor[symbolThenPatched] = true;\n        }\n        api.patchThen = patchThen;\n        function zoneify(fn) {\n            return function (self, args) {\n                let resultPromise = fn.apply(self, args);\n                if (resultPromise instanceof ZoneAwarePromise) {\n                    return resultPromise;\n                }\n                let ctor = resultPromise.constructor;\n                if (!ctor[symbolThenPatched]) {\n                    patchThen(ctor);\n                }\n                return resultPromise;\n            };\n        }\n        if (NativePromise) {\n            patchThen(NativePromise);\n            patchMethod(global, 'fetch', (delegate) => zoneify(delegate));\n        }\n        // This is not part of public API, but it is useful for tests, so we expose it.\n        Promise[Zone.__symbol__('uncaughtPromiseErrors')] = _uncaughtPromiseErrors;\n        return ZoneAwarePromise;\n    });\n}\n\nfunction patchToString(Zone) {\n    // override Function.prototype.toString to make zone.js patched function\n    // look like native function\n    Zone.__load_patch('toString', (global) => {\n        // patch Func.prototype.toString to let them look like native\n        const originalFunctionToString = Function.prototype.toString;\n        const ORIGINAL_DELEGATE_SYMBOL = zoneSymbol('OriginalDelegate');\n        const PROMISE_SYMBOL = zoneSymbol('Promise');\n        const ERROR_SYMBOL = zoneSymbol('Error');\n        const newFunctionToString = function toString() {\n            if (typeof this === 'function') {\n                const originalDelegate = this[ORIGINAL_DELEGATE_SYMBOL];\n                if (originalDelegate) {\n                    if (typeof originalDelegate === 'function') {\n                        return originalFunctionToString.call(originalDelegate);\n                    }\n                    else {\n                        return Object.prototype.toString.call(originalDelegate);\n                    }\n                }\n                if (this === Promise) {\n                    const nativePromise = global[PROMISE_SYMBOL];\n                    if (nativePromise) {\n                        return originalFunctionToString.call(nativePromise);\n                    }\n                }\n                if (this === Error) {\n                    const nativeError = global[ERROR_SYMBOL];\n                    if (nativeError) {\n                        return originalFunctionToString.call(nativeError);\n                    }\n                }\n            }\n            return originalFunctionToString.call(this);\n        };\n        newFunctionToString[ORIGINAL_DELEGATE_SYMBOL] = originalFunctionToString;\n        Function.prototype.toString = newFunctionToString;\n        // patch Object.prototype.toString to let them look like native\n        const originalObjectToString = Object.prototype.toString;\n        const PROMISE_OBJECT_TO_STRING = '[object Promise]';\n        Object.prototype.toString = function () {\n            if (typeof Promise === 'function' && this instanceof Promise) {\n                return PROMISE_OBJECT_TO_STRING;\n            }\n            return originalObjectToString.call(this);\n        };\n    });\n}\n\nfunction patchCallbacks(api, target, targetName, method, callbacks) {\n    const symbol = Zone.__symbol__(method);\n    if (target[symbol]) {\n        return;\n    }\n    const nativeDelegate = (target[symbol] = target[method]);\n    target[method] = function (name, opts, options) {\n        if (opts && opts.prototype) {\n            callbacks.forEach(function (callback) {\n                const source = `${targetName}.${method}::` + callback;\n                const prototype = opts.prototype;\n                // Note: the `patchCallbacks` is used for patching the `document.registerElement` and\n                // `customElements.define`. We explicitly wrap the patching code into try-catch since\n                // callbacks may be already patched by other web components frameworks (e.g. LWC), and they\n                // make those properties non-writable. This means that patching callback will throw an error\n                // `cannot assign to read-only property`. See this code as an example:\n                // https://github.com/salesforce/lwc/blob/master/packages/@lwc/engine-core/src/framework/base-bridge-element.ts#L180-L186\n                // We don't want to stop the application rendering if we couldn't patch some\n                // callback, e.g. `attributeChangedCallback`.\n                try {\n                    if (prototype.hasOwnProperty(callback)) {\n                        const descriptor = api.ObjectGetOwnPropertyDescriptor(prototype, callback);\n                        if (descriptor && descriptor.value) {\n                            descriptor.value = api.wrapWithCurrentZone(descriptor.value, source);\n                            api._redefineProperty(opts.prototype, callback, descriptor);\n                        }\n                        else if (prototype[callback]) {\n                            prototype[callback] = api.wrapWithCurrentZone(prototype[callback], source);\n                        }\n                    }\n                    else if (prototype[callback]) {\n                        prototype[callback] = api.wrapWithCurrentZone(prototype[callback], source);\n                    }\n                }\n                catch {\n                    // Note: we leave the catch block empty since there's no way to handle the error related\n                    // to non-writable property.\n                }\n            });\n        }\n        return nativeDelegate.call(target, name, opts, options);\n    };\n    api.attachOriginToPatched(target[method], nativeDelegate);\n}\n\nfunction patchUtil(Zone) {\n    Zone.__load_patch('util', (global, Zone, api) => {\n        // Collect native event names by looking at properties\n        // on the global namespace, e.g. 'onclick'.\n        const eventNames = getOnEventNames(global);\n        api.patchOnProperties = patchOnProperties;\n        api.patchMethod = patchMethod;\n        api.bindArguments = bindArguments;\n        api.patchMacroTask = patchMacroTask;\n        // In earlier version of zone.js (<0.9.0), we use env name `__zone_symbol__BLACK_LISTED_EVENTS`\n        // to define which events will not be patched by `Zone.js`. In newer version (>=0.9.0), we\n        // change the env name to `__zone_symbol__UNPATCHED_EVENTS` to keep the name consistent with\n        // angular repo. The  `__zone_symbol__BLACK_LISTED_EVENTS` is deprecated, but it is still be\n        // supported for backwards compatibility.\n        const SYMBOL_BLACK_LISTED_EVENTS = Zone.__symbol__('BLACK_LISTED_EVENTS');\n        const SYMBOL_UNPATCHED_EVENTS = Zone.__symbol__('UNPATCHED_EVENTS');\n        if (global[SYMBOL_UNPATCHED_EVENTS]) {\n            global[SYMBOL_BLACK_LISTED_EVENTS] = global[SYMBOL_UNPATCHED_EVENTS];\n        }\n        if (global[SYMBOL_BLACK_LISTED_EVENTS]) {\n            Zone[SYMBOL_BLACK_LISTED_EVENTS] = Zone[SYMBOL_UNPATCHED_EVENTS] =\n                global[SYMBOL_BLACK_LISTED_EVENTS];\n        }\n        api.patchEventPrototype = patchEventPrototype;\n        api.patchEventTarget = patchEventTarget;\n        api.isIEOrEdge = isIEOrEdge;\n        api.ObjectDefineProperty = ObjectDefineProperty;\n        api.ObjectGetOwnPropertyDescriptor = ObjectGetOwnPropertyDescriptor;\n        api.ObjectCreate = ObjectCreate;\n        api.ArraySlice = ArraySlice;\n        api.patchClass = patchClass;\n        api.wrapWithCurrentZone = wrapWithCurrentZone;\n        api.filterProperties = filterProperties;\n        api.attachOriginToPatched = attachOriginToPatched;\n        api._redefineProperty = Object.defineProperty;\n        api.patchCallbacks = patchCallbacks;\n        api.getGlobalObjects = () => ({\n            globalSources,\n            zoneSymbolEventNames,\n            eventNames,\n            isBrowser,\n            isMix,\n            isNode,\n            TRUE_STR,\n            FALSE_STR,\n            ZONE_SYMBOL_PREFIX,\n            ADD_EVENT_LISTENER_STR,\n            REMOVE_EVENT_LISTENER_STR,\n        });\n    });\n}\n\nfunction patchCommon(Zone) {\n    patchPromise(Zone);\n    patchToString(Zone);\n    patchUtil(Zone);\n}\n\nconst Zone$1 = loadZone();\npatchCommon(Zone$1);\npatchBrowser(Zone$1);\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMA,MAAM,GAAGC,UAAf,C,CACA;AACA;;AACA,SAASC,UAAT,CAAoBC,IAApB,EAA0B;EACtB,MAAMC,YAAY,GAAGJ,MAAM,CAAC,sBAAD,CAAN,IAAkC,iBAAvD;EACA,OAAOI,YAAY,GAAGD,IAAtB;AACH;;AACD,SAASE,QAAT,GAAoB;EAChB,MAAMC,WAAW,GAAGN,MAAM,CAAC,aAAD,CAA1B;;EACA,SAASO,IAAT,CAAcJ,IAAd,EAAoB;IAChBG,WAAW,IAAIA,WAAW,CAAC,MAAD,CAA1B,IAAsCA,WAAW,CAAC,MAAD,CAAX,CAAoBH,IAApB,CAAtC;EACH;;EACD,SAASK,kBAAT,CAA4BL,IAA5B,EAAkCM,KAAlC,EAAyC;IACrCH,WAAW,IAAIA,WAAW,CAAC,SAAD,CAA1B,IAAyCA,WAAW,CAAC,SAAD,CAAX,CAAuBH,IAAvB,EAA6BM,KAA7B,CAAzC;EACH;;EACDF,IAAI,CAAC,MAAD,CAAJ;;EACA,MAAMG,QAAN,CAAe;IACX;IADW,YAEF,KAAKR,UAAL,GAAkBA,UAFhB;;IAGa,OAAjBS,iBAAiB,GAAG;MACvB,IAAIX,MAAM,CAAC,SAAD,CAAN,KAAsBY,OAAO,CAAC,kBAAD,CAAjC,EAAuD;QACnD,MAAM,IAAIC,KAAJ,CAAU,0EACZ,yBADY,GAEZ,+DAFY,GAGZ,kFAHY,GAIZ,sDAJE,CAAN;MAKH;IACJ;;IACc,WAAJC,IAAI,GAAG;MACd,IAAIC,IAAI,GAAGL,QAAQ,CAACM,OAApB;;MACA,OAAOD,IAAI,CAACE,MAAZ,EAAoB;QAChBF,IAAI,GAAGA,IAAI,CAACE,MAAZ;MACH;;MACD,OAAOF,IAAP;IACH;;IACiB,WAAPC,OAAO,GAAG;MACjB,OAAOE,iBAAiB,CAACH,IAAzB;IACH;;IACqB,WAAXI,WAAW,GAAG;MACrB,OAAOC,YAAP;IACH,CAxBU,CAyBX;;;IACmB,OAAZC,YAAY,CAAClB,IAAD,EAAOmB,EAAP,EAAWC,eAAe,GAAG,KAA7B,EAAoC;MACnD,IAAIX,OAAO,CAACY,cAAR,CAAuBrB,IAAvB,CAAJ,EAAkC;QAC9B;QACA;QACA;QACA,MAAMsB,cAAc,GAAGzB,MAAM,CAACE,UAAU,CAAC,yBAAD,CAAX,CAAN,KAAkD,IAAzE;;QACA,IAAI,CAACqB,eAAD,IAAoBE,cAAxB,EAAwC;UACpC,MAAMZ,KAAK,CAAC,2BAA2BV,IAA5B,CAAX;QACH;MACJ,CARD,MASK,IAAI,CAACH,MAAM,CAAC,oBAAoBG,IAArB,CAAX,EAAuC;QACxC,MAAMuB,QAAQ,GAAG,UAAUvB,IAA3B;QACAI,IAAI,CAACmB,QAAD,CAAJ;QACAd,OAAO,CAACT,IAAD,CAAP,GAAgBmB,EAAE,CAACtB,MAAD,EAASU,QAAT,EAAmBiB,IAAnB,CAAlB;QACAnB,kBAAkB,CAACkB,QAAD,EAAWA,QAAX,CAAlB;MACH;IACJ;;IACS,IAANT,MAAM,GAAG;MACT,OAAO,KAAKW,OAAZ;IACH;;IACO,IAAJzB,IAAI,GAAG;MACP,OAAO,KAAK0B,KAAZ;IACH;;IACDC,WAAW,CAACb,MAAD,EAASc,QAAT,EAAmB;MAC1B,KAAKH,OAAL,GAAeX,MAAf;MACA,KAAKY,KAAL,GAAaE,QAAQ,GAAGA,QAAQ,CAAC5B,IAAT,IAAiB,SAApB,GAAgC,QAArD;MACA,KAAK6B,WAAL,GAAoBD,QAAQ,IAAIA,QAAQ,CAACE,UAAtB,IAAqC,EAAxD;MACA,KAAKC,aAAL,GAAqB,IAAIC,aAAJ,CAAkB,IAAlB,EAAwB,KAAKP,OAAL,IAAgB,KAAKA,OAAL,CAAaM,aAArD,EAAoEH,QAApE,CAArB;IACH;;IACDK,GAAG,CAACC,GAAD,EAAM;MACL,MAAMtB,IAAI,GAAG,KAAKuB,WAAL,CAAiBD,GAAjB,CAAb;MACA,IAAItB,IAAJ,EACI,OAAOA,IAAI,CAACiB,WAAL,CAAiBK,GAAjB,CAAP;IACP;;IACDC,WAAW,CAACD,GAAD,EAAM;MACb,IAAIrB,OAAO,GAAG,IAAd;;MACA,OAAOA,OAAP,EAAgB;QACZ,IAAIA,OAAO,CAACgB,WAAR,CAAoBR,cAApB,CAAmCa,GAAnC,CAAJ,EAA6C;UACzC,OAAOrB,OAAP;QACH;;QACDA,OAAO,GAAGA,OAAO,CAACY,OAAlB;MACH;;MACD,OAAO,IAAP;IACH;;IACDW,IAAI,CAACR,QAAD,EAAW;MACX,IAAI,CAACA,QAAL,EACI,MAAM,IAAIlB,KAAJ,CAAU,oBAAV,CAAN;MACJ,OAAO,KAAKqB,aAAL,CAAmBK,IAAnB,CAAwB,IAAxB,EAA8BR,QAA9B,CAAP;IACH;;IACDS,IAAI,CAACC,QAAD,EAAWC,MAAX,EAAmB;MACnB,IAAI,OAAOD,QAAP,KAAoB,UAAxB,EAAoC;QAChC,MAAM,IAAI5B,KAAJ,CAAU,6BAA6B4B,QAAvC,CAAN;MACH;;MACD,MAAME,SAAS,GAAG,KAAKT,aAAL,CAAmBU,SAAnB,CAA6B,IAA7B,EAAmCH,QAAnC,EAA6CC,MAA7C,CAAlB;;MACA,MAAM3B,IAAI,GAAG,IAAb;MACA,OAAO,YAAY;QACf,OAAOA,IAAI,CAAC8B,UAAL,CAAgBF,SAAhB,EAA2B,IAA3B,EAAiCG,SAAjC,EAA4CJ,MAA5C,CAAP;MACH,CAFD;IAGH;;IACDK,GAAG,CAACN,QAAD,EAAWO,SAAX,EAAsBC,SAAtB,EAAiCP,MAAjC,EAAyC;MACxCxB,iBAAiB,GAAG;QAAED,MAAM,EAAEC,iBAAV;QAA6BH,IAAI,EAAE;MAAnC,CAApB;;MACA,IAAI;QACA,OAAO,KAAKmB,aAAL,CAAmBgB,MAAnB,CAA0B,IAA1B,EAAgCT,QAAhC,EAA0CO,SAA1C,EAAqDC,SAArD,EAAgEP,MAAhE,CAAP;MACH,CAFD,SAGQ;QACJxB,iBAAiB,GAAGA,iBAAiB,CAACD,MAAtC;MACH;IACJ;;IACD4B,UAAU,CAACJ,QAAD,EAAWO,SAAS,GAAG,IAAvB,EAA6BC,SAA7B,EAAwCP,MAAxC,EAAgD;MACtDxB,iBAAiB,GAAG;QAAED,MAAM,EAAEC,iBAAV;QAA6BH,IAAI,EAAE;MAAnC,CAApB;;MACA,IAAI;QACA,IAAI;UACA,OAAO,KAAKmB,aAAL,CAAmBgB,MAAnB,CAA0B,IAA1B,EAAgCT,QAAhC,EAA0CO,SAA1C,EAAqDC,SAArD,EAAgEP,MAAhE,CAAP;QACH,CAFD,CAGA,OAAOS,KAAP,EAAc;UACV,IAAI,KAAKjB,aAAL,CAAmBkB,WAAnB,CAA+B,IAA/B,EAAqCD,KAArC,CAAJ,EAAiD;YAC7C,MAAMA,KAAN;UACH;QACJ;MACJ,CATD,SAUQ;QACJjC,iBAAiB,GAAGA,iBAAiB,CAACD,MAAtC;MACH;IACJ;;IACDoC,OAAO,CAACC,IAAD,EAAON,SAAP,EAAkBC,SAAlB,EAA6B;MAChC,IAAIK,IAAI,CAACvC,IAAL,IAAa,IAAjB,EAAuB;QACnB,MAAM,IAAIF,KAAJ,CAAU,gEACZ,CAACyC,IAAI,CAACvC,IAAL,IAAawC,OAAd,EAAuBpD,IADX,GAEZ,eAFY,GAGZ,KAAKA,IAHO,GAIZ,GAJE,CAAN;MAKH,CAP+B,CAQhC;MACA;MACA;;;MACA,IAAImD,IAAI,CAACE,KAAL,KAAeC,YAAf,KAAgCH,IAAI,CAACI,IAAL,KAAcC,SAAd,IAA2BL,IAAI,CAACI,IAAL,KAAcE,SAAzE,CAAJ,EAAyF;QACrF;MACH;;MACD,MAAMC,YAAY,GAAGP,IAAI,CAACE,KAAL,IAAcM,OAAnC;MACAD,YAAY,IAAIP,IAAI,CAACS,aAAL,CAAmBD,OAAnB,EAA4BE,SAA5B,CAAhB;MACAV,IAAI,CAACW,QAAL;MACA,MAAMC,YAAY,GAAG9C,YAArB;MACAA,YAAY,GAAGkC,IAAf;MACApC,iBAAiB,GAAG;QAAED,MAAM,EAAEC,iBAAV;QAA6BH,IAAI,EAAE;MAAnC,CAApB;;MACA,IAAI;QACA,IAAIuC,IAAI,CAACI,IAAL,IAAaE,SAAb,IAA0BN,IAAI,CAACa,IAA/B,IAAuC,CAACb,IAAI,CAACa,IAAL,CAAUC,UAAtD,EAAkE;UAC9Dd,IAAI,CAACe,QAAL,GAAgBC,SAAhB;QACH;;QACD,IAAI;UACA,OAAO,KAAKpC,aAAL,CAAmBqC,UAAnB,CAA8B,IAA9B,EAAoCjB,IAApC,EAA0CN,SAA1C,EAAqDC,SAArD,CAAP;QACH,CAFD,CAGA,OAAOE,KAAP,EAAc;UACV,IAAI,KAAKjB,aAAL,CAAmBkB,WAAnB,CAA+B,IAA/B,EAAqCD,KAArC,CAAJ,EAAiD;YAC7C,MAAMA,KAAN;UACH;QACJ;MACJ,CAZD,SAaQ;QACJ;QACA;QACA,IAAIG,IAAI,CAACE,KAAL,KAAeC,YAAf,IAA+BH,IAAI,CAACE,KAAL,KAAegB,OAAlD,EAA2D;UACvD,IAAIlB,IAAI,CAACI,IAAL,IAAaC,SAAb,IAA2BL,IAAI,CAACa,IAAL,IAAab,IAAI,CAACa,IAAL,CAAUC,UAAtD,EAAmE;YAC/DP,YAAY,IAAIP,IAAI,CAACS,aAAL,CAAmBC,SAAnB,EAA8BF,OAA9B,CAAhB;UACH,CAFD,MAGK;YACDR,IAAI,CAACW,QAAL,GAAgB,CAAhB;;YACA,KAAKQ,gBAAL,CAAsBnB,IAAtB,EAA4B,CAAC,CAA7B;;YACAO,YAAY,IACRP,IAAI,CAACS,aAAL,CAAmBN,YAAnB,EAAiCK,OAAjC,EAA0CL,YAA1C,CADJ;UAEH;QACJ;;QACDvC,iBAAiB,GAAGA,iBAAiB,CAACD,MAAtC;QACAG,YAAY,GAAG8C,YAAf;MACH;IACJ;;IACDQ,YAAY,CAACpB,IAAD,EAAO;MACf,IAAIA,IAAI,CAACvC,IAAL,IAAauC,IAAI,CAACvC,IAAL,KAAc,IAA/B,EAAqC;QACjC;QACA;QACA,IAAI4D,OAAO,GAAG,IAAd;;QACA,OAAOA,OAAP,EAAgB;UACZ,IAAIA,OAAO,KAAKrB,IAAI,CAACvC,IAArB,EAA2B;YACvB,MAAMF,KAAK,CAAE,8BAA6B,KAAKV,IAAK,8CAA6CmD,IAAI,CAACvC,IAAL,CAAUZ,IAAK,EAArG,CAAX;UACH;;UACDwE,OAAO,GAAGA,OAAO,CAAC1D,MAAlB;QACH;MACJ;;MACDqC,IAAI,CAACS,aAAL,CAAmBa,UAAnB,EAA+BnB,YAA/B;;MACA,MAAMoB,aAAa,GAAG,EAAtB;MACAvB,IAAI,CAACwB,cAAL,GAAsBD,aAAtB;MACAvB,IAAI,CAACyB,KAAL,GAAa,IAAb;;MACA,IAAI;QACAzB,IAAI,GAAG,KAAKpB,aAAL,CAAmBwC,YAAnB,CAAgC,IAAhC,EAAsCpB,IAAtC,CAAP;MACH,CAFD,CAGA,OAAO0B,GAAP,EAAY;QACR;QACA;QACA1B,IAAI,CAACS,aAAL,CAAmBS,OAAnB,EAA4BI,UAA5B,EAAwCnB,YAAxC,EAHQ,CAIR;;;QACA,KAAKvB,aAAL,CAAmBkB,WAAnB,CAA+B,IAA/B,EAAqC4B,GAArC;;QACA,MAAMA,GAAN;MACH;;MACD,IAAI1B,IAAI,CAACwB,cAAL,KAAwBD,aAA5B,EAA2C;QACvC;QACA,KAAKJ,gBAAL,CAAsBnB,IAAtB,EAA4B,CAA5B;MACH;;MACD,IAAIA,IAAI,CAACE,KAAL,IAAcoB,UAAlB,EAA8B;QAC1BtB,IAAI,CAACS,aAAL,CAAmBC,SAAnB,EAA8BY,UAA9B;MACH;;MACD,OAAOtB,IAAP;IACH;;IACD2B,iBAAiB,CAACvC,MAAD,EAASD,QAAT,EAAmB0B,IAAnB,EAAyBe,cAAzB,EAAyC;MACtD,OAAO,KAAKR,YAAL,CAAkB,IAAIS,QAAJ,CAAaC,SAAb,EAAwB1C,MAAxB,EAAgCD,QAAhC,EAA0C0B,IAA1C,EAAgDe,cAAhD,EAAgEZ,SAAhE,CAAlB,CAAP;IACH;;IACDe,iBAAiB,CAAC3C,MAAD,EAASD,QAAT,EAAmB0B,IAAnB,EAAyBe,cAAzB,EAAyCI,YAAzC,EAAuD;MACpE,OAAO,KAAKZ,YAAL,CAAkB,IAAIS,QAAJ,CAAavB,SAAb,EAAwBlB,MAAxB,EAAgCD,QAAhC,EAA0C0B,IAA1C,EAAgDe,cAAhD,EAAgEI,YAAhE,CAAlB,CAAP;IACH;;IACDC,iBAAiB,CAAC7C,MAAD,EAASD,QAAT,EAAmB0B,IAAnB,EAAyBe,cAAzB,EAAyCI,YAAzC,EAAuD;MACpE,OAAO,KAAKZ,YAAL,CAAkB,IAAIS,QAAJ,CAAaxB,SAAb,EAAwBjB,MAAxB,EAAgCD,QAAhC,EAA0C0B,IAA1C,EAAgDe,cAAhD,EAAgEI,YAAhE,CAAlB,CAAP;IACH;;IACDE,UAAU,CAAClC,IAAD,EAAO;MACb,IAAIA,IAAI,CAACvC,IAAL,IAAa,IAAjB,EACI,MAAM,IAAIF,KAAJ,CAAU,sEACZ,CAACyC,IAAI,CAACvC,IAAL,IAAawC,OAAd,EAAuBpD,IADX,GAEZ,eAFY,GAGZ,KAAKA,IAHO,GAIZ,GAJE,CAAN;;MAKJ,IAAImD,IAAI,CAACE,KAAL,KAAeQ,SAAf,IAA4BV,IAAI,CAACE,KAAL,KAAeM,OAA/C,EAAwD;QACpD;MACH;;MACDR,IAAI,CAACS,aAAL,CAAmB0B,SAAnB,EAA8BzB,SAA9B,EAAyCF,OAAzC;;MACA,IAAI;QACA,KAAK5B,aAAL,CAAmBsD,UAAnB,CAA8B,IAA9B,EAAoClC,IAApC;MACH,CAFD,CAGA,OAAO0B,GAAP,EAAY;QACR;QACA1B,IAAI,CAACS,aAAL,CAAmBS,OAAnB,EAA4BiB,SAA5B;;QACA,KAAKvD,aAAL,CAAmBkB,WAAnB,CAA+B,IAA/B,EAAqC4B,GAArC;;QACA,MAAMA,GAAN;MACH;;MACD,KAAKP,gBAAL,CAAsBnB,IAAtB,EAA4B,CAAC,CAA7B;;MACAA,IAAI,CAACS,aAAL,CAAmBN,YAAnB,EAAiCgC,SAAjC;;MACAnC,IAAI,CAACW,QAAL,GAAgB,CAAhB;MACA,OAAOX,IAAP;IACH;;IACDmB,gBAAgB,CAACnB,IAAD,EAAOoC,KAAP,EAAc;MAC1B,MAAMb,aAAa,GAAGvB,IAAI,CAACwB,cAA3B;;MACA,IAAIY,KAAK,IAAI,CAAC,CAAd,EAAiB;QACbpC,IAAI,CAACwB,cAAL,GAAsB,IAAtB;MACH;;MACD,KAAK,IAAIa,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGd,aAAa,CAACe,MAAlC,EAA0CD,CAAC,EAA3C,EAA+C;QAC3Cd,aAAa,CAACc,CAAD,CAAb,CAAiBlB,gBAAjB,CAAkCnB,IAAI,CAACI,IAAvC,EAA6CgC,KAA7C;MACH;IACJ;;EA/OU;;EAiPf,MAAMG,WAAW,GAAG;IAChB1F,IAAI,EAAE,EADU;IAEhB2F,SAAS,EAAE,CAACC,QAAD,EAAWC,CAAX,EAAcC,MAAd,EAAsBC,YAAtB,KAAuCH,QAAQ,CAACI,OAAT,CAAiBF,MAAjB,EAAyBC,YAAzB,CAFlC;IAGhBE,cAAc,EAAE,CAACL,QAAD,EAAWC,CAAX,EAAcC,MAAd,EAAsB3C,IAAtB,KAA+ByC,QAAQ,CAACrB,YAAT,CAAsBuB,MAAtB,EAA8B3C,IAA9B,CAH/B;IAIhB+C,YAAY,EAAE,CAACN,QAAD,EAAWC,CAAX,EAAcC,MAAd,EAAsB3C,IAAtB,EAA4BN,SAA5B,EAAuCC,SAAvC,KAAqD8C,QAAQ,CAACxB,UAAT,CAAoB0B,MAApB,EAA4B3C,IAA5B,EAAkCN,SAAlC,EAA6CC,SAA7C,CAJnD;IAKhBqD,YAAY,EAAE,CAACP,QAAD,EAAWC,CAAX,EAAcC,MAAd,EAAsB3C,IAAtB,KAA+ByC,QAAQ,CAACP,UAAT,CAAoBS,MAApB,EAA4B3C,IAA5B;EAL7B,CAApB;;EAOA,MAAMnB,aAAN,CAAoB;IACR,IAAJpB,IAAI,GAAG;MACP,OAAO,KAAKgE,KAAZ;IACH;;IACDjD,WAAW,CAACf,IAAD,EAAOwF,cAAP,EAAuBxE,QAAvB,EAAiC;MACxC,KAAKyE,WAAL,GAAmB;QACf,aAAa,CADE;QAEf,aAAa,CAFE;QAGf,aAAa;MAHE,CAAnB;MAKA,KAAKzB,KAAL,GAAahE,IAAb;MACA,KAAK0F,eAAL,GAAuBF,cAAvB;MACA,KAAKG,OAAL,GAAe3E,QAAQ,KAAKA,QAAQ,IAAIA,QAAQ,CAAC4E,MAArB,GAA8B5E,QAA9B,GAAyCwE,cAAc,CAACG,OAA7D,CAAvB;MACA,KAAKE,SAAL,GAAiB7E,QAAQ,KAAKA,QAAQ,CAAC4E,MAAT,GAAkBJ,cAAlB,GAAmCA,cAAc,CAACK,SAAvD,CAAzB;MACA,KAAKC,aAAL,GACI9E,QAAQ,KAAKA,QAAQ,CAAC4E,MAAT,GAAkB,KAAK5B,KAAvB,GAA+BwB,cAAc,CAACM,aAAnD,CADZ;MAEA,KAAKC,YAAL,GACI/E,QAAQ,KAAKA,QAAQ,CAACgF,WAAT,GAAuBhF,QAAvB,GAAkCwE,cAAc,CAACO,YAAtD,CADZ;MAEA,KAAKE,cAAL,GACIjF,QAAQ,KAAKA,QAAQ,CAACgF,WAAT,GAAuBR,cAAvB,GAAwCA,cAAc,CAACS,cAA5D,CADZ;MAEA,KAAKC,kBAAL,GACIlF,QAAQ,KAAKA,QAAQ,CAACgF,WAAT,GAAuB,KAAKhC,KAA5B,GAAoCwB,cAAc,CAACU,kBAAxD,CADZ;MAEA,KAAKC,SAAL,GAAiBnF,QAAQ,KAAKA,QAAQ,CAACoF,QAAT,GAAoBpF,QAApB,GAA+BwE,cAAc,CAACW,SAAnD,CAAzB;MACA,KAAKE,WAAL,GACIrF,QAAQ,KAAKA,QAAQ,CAACoF,QAAT,GAAoBZ,cAApB,GAAqCA,cAAc,CAACa,WAAzD,CADZ;MAEA,KAAKC,eAAL,GACItF,QAAQ,KAAKA,QAAQ,CAACoF,QAAT,GAAoB,KAAKpC,KAAzB,GAAiCwB,cAAc,CAACc,eAArD,CADZ;MAEA,KAAKC,cAAL,GACIvF,QAAQ,KAAKA,QAAQ,CAACwF,aAAT,GAAyBxF,QAAzB,GAAoCwE,cAAc,CAACe,cAAxD,CADZ;MAEA,KAAKE,gBAAL,GACIzF,QAAQ,KAAKA,QAAQ,CAACwF,aAAT,GAAyBhB,cAAzB,GAA0CA,cAAc,CAACiB,gBAA9D,CADZ;MAEA,KAAKC,oBAAL,GACI1F,QAAQ,KAAKA,QAAQ,CAACwF,aAAT,GAAyB,KAAKxC,KAA9B,GAAsCwB,cAAc,CAACkB,oBAA1D,CADZ;MAEA,KAAKC,eAAL,GACI3F,QAAQ,KAAKA,QAAQ,CAACqE,cAAT,GAA0BrE,QAA1B,GAAqCwE,cAAc,CAACmB,eAAzD,CADZ;MAEA,KAAKC,iBAAL,GACI5F,QAAQ,KAAKA,QAAQ,CAACqE,cAAT,GAA0BG,cAA1B,GAA2CA,cAAc,CAACoB,iBAA/D,CADZ;MAEA,KAAKC,qBAAL,GACI7F,QAAQ,KAAKA,QAAQ,CAACqE,cAAT,GAA0B,KAAKrB,KAA/B,GAAuCwB,cAAc,CAACqB,qBAA3D,CADZ;MAEA,KAAKC,aAAL,GACI9F,QAAQ,KAAKA,QAAQ,CAACsE,YAAT,GAAwBtE,QAAxB,GAAmCwE,cAAc,CAACsB,aAAvD,CADZ;MAEA,KAAKC,eAAL,GACI/F,QAAQ,KAAKA,QAAQ,CAACsE,YAAT,GAAwBE,cAAxB,GAAyCA,cAAc,CAACuB,eAA7D,CADZ;MAEA,KAAKC,mBAAL,GACIhG,QAAQ,KAAKA,QAAQ,CAACsE,YAAT,GAAwB,KAAKtB,KAA7B,GAAqCwB,cAAc,CAACwB,mBAAzD,CADZ;MAEA,KAAKC,aAAL,GACIjG,QAAQ,KAAKA,QAAQ,CAACuE,YAAT,GAAwBvE,QAAxB,GAAmCwE,cAAc,CAACyB,aAAvD,CADZ;MAEA,KAAKC,eAAL,GACIlG,QAAQ,KAAKA,QAAQ,CAACuE,YAAT,GAAwBC,cAAxB,GAAyCA,cAAc,CAAC0B,eAA7D,CADZ;MAEA,KAAKC,mBAAL,GACInG,QAAQ,KAAKA,QAAQ,CAACuE,YAAT,GAAwB,KAAKvB,KAA7B,GAAqCwB,cAAc,CAAC2B,mBAAzD,CADZ;MAEA,KAAKC,UAAL,GAAkB,IAAlB;MACA,KAAKC,YAAL,GAAoB,IAApB;MACA,KAAKC,iBAAL,GAAyB,IAAzB;MACA,KAAKC,gBAAL,GAAwB,IAAxB;MACA,MAAMC,eAAe,GAAGxG,QAAQ,IAAIA,QAAQ,CAAC+D,SAA7C;MACA,MAAM0C,aAAa,GAAGjC,cAAc,IAAIA,cAAc,CAAC4B,UAAvD;;MACA,IAAII,eAAe,IAAIC,aAAvB,EAAsC;QAClC;QACA;QACA,KAAKL,UAAL,GAAkBI,eAAe,GAAGxG,QAAH,GAAc8D,WAA/C;QACA,KAAKuC,YAAL,GAAoB7B,cAApB;QACA,KAAK8B,iBAAL,GAAyB,IAAzB;QACA,KAAKC,gBAAL,GAAwB,KAAKvD,KAA7B;;QACA,IAAI,CAAChD,QAAQ,CAACqE,cAAd,EAA8B;UAC1B,KAAKsB,eAAL,GAAuB7B,WAAvB;UACA,KAAK8B,iBAAL,GAAyBpB,cAAzB;UACA,KAAKqB,qBAAL,GAA6B,KAAK7C,KAAlC;QACH;;QACD,IAAI,CAAChD,QAAQ,CAACsE,YAAd,EAA4B;UACxB,KAAKwB,aAAL,GAAqBhC,WAArB;UACA,KAAKiC,eAAL,GAAuBvB,cAAvB;UACA,KAAKwB,mBAAL,GAA2B,KAAKhD,KAAhC;QACH;;QACD,IAAI,CAAChD,QAAQ,CAACuE,YAAd,EAA4B;UACxB,KAAK0B,aAAL,GAAqBnC,WAArB;UACA,KAAKoC,eAAL,GAAuB1B,cAAvB;UACA,KAAK2B,mBAAL,GAA2B,KAAKnD,KAAhC;QACH;MACJ;IACJ;;IACDxC,IAAI,CAACkG,UAAD,EAAa1G,QAAb,EAAuB;MACvB,OAAO,KAAK2E,OAAL,GACD,KAAKA,OAAL,CAAaC,MAAb,CAAoB,KAAKC,SAAzB,EAAoC,KAAK7F,IAAzC,EAA+C0H,UAA/C,EAA2D1G,QAA3D,CADC,GAED,IAAIrB,QAAJ,CAAa+H,UAAb,EAAyB1G,QAAzB,CAFN;IAGH;;IACDa,SAAS,CAAC6F,UAAD,EAAahG,QAAb,EAAuBC,MAAvB,EAA+B;MACpC,OAAO,KAAKoE,YAAL,GACD,KAAKA,YAAL,CAAkBC,WAAlB,CAA8B,KAAKC,cAAnC,EAAmD,KAAKC,kBAAxD,EAA4EwB,UAA5E,EAAwFhG,QAAxF,EAAkGC,MAAlG,CADC,GAEDD,QAFN;IAGH;;IACDS,MAAM,CAACuF,UAAD,EAAahG,QAAb,EAAuBO,SAAvB,EAAkCC,SAAlC,EAA6CP,MAA7C,EAAqD;MACvD,OAAO,KAAKwE,SAAL,GACD,KAAKA,SAAL,CAAeC,QAAf,CAAwB,KAAKC,WAA7B,EAA0C,KAAKC,eAA/C,EAAgEoB,UAAhE,EAA4EhG,QAA5E,EAAsFO,SAAtF,EAAiGC,SAAjG,EAA4GP,MAA5G,CADC,GAEDD,QAAQ,CAACiG,KAAT,CAAe1F,SAAf,EAA0BC,SAA1B,CAFN;IAGH;;IACDG,WAAW,CAACqF,UAAD,EAAatF,KAAb,EAAoB;MAC3B,OAAO,KAAKmE,cAAL,GACD,KAAKA,cAAL,CAAoBC,aAApB,CAAkC,KAAKC,gBAAvC,EAAyD,KAAKC,oBAA9D,EAAoFgB,UAApF,EAAgGtF,KAAhG,CADC,GAED,IAFN;IAGH;;IACDuB,YAAY,CAAC+D,UAAD,EAAanF,IAAb,EAAmB;MAC3B,IAAIqF,UAAU,GAAGrF,IAAjB;;MACA,IAAI,KAAKoE,eAAT,EAA0B;QACtB,IAAI,KAAKS,UAAT,EAAqB;UACjBQ,UAAU,CAAC7D,cAAX,CAA0B8D,IAA1B,CAA+B,KAAKP,iBAApC;QACH,CAHqB,CAItB;;;QACAM,UAAU,GAAG,KAAKjB,eAAL,CAAqBtB,cAArB,CAAoC,KAAKuB,iBAAzC,EAA4D,KAAKC,qBAAjE,EAAwFa,UAAxF,EAAoGnF,IAApG,CAAb,CALsB,CAMtB;;QACA,IAAI,CAACqF,UAAL,EACIA,UAAU,GAAGrF,IAAb;MACP,CATD,MAUK;QACD,IAAIA,IAAI,CAACuF,UAAT,EAAqB;UACjBvF,IAAI,CAACuF,UAAL,CAAgBvF,IAAhB;QACH,CAFD,MAGK,IAAIA,IAAI,CAACI,IAAL,IAAa0B,SAAjB,EAA4B;UAC7BH,iBAAiB,CAAC3B,IAAD,CAAjB;QACH,CAFI,MAGA;UACD,MAAM,IAAIzC,KAAJ,CAAU,6BAAV,CAAN;QACH;MACJ;;MACD,OAAO8H,UAAP;IACH;;IACDpE,UAAU,CAACkE,UAAD,EAAanF,IAAb,EAAmBN,SAAnB,EAA8BC,SAA9B,EAAyC;MAC/C,OAAO,KAAK4E,aAAL,GACD,KAAKA,aAAL,CAAmBxB,YAAnB,CAAgC,KAAKyB,eAArC,EAAsD,KAAKC,mBAA3D,EAAgFU,UAAhF,EAA4FnF,IAA5F,EAAkGN,SAAlG,EAA6GC,SAA7G,CADC,GAEDK,IAAI,CAACb,QAAL,CAAciG,KAAd,CAAoB1F,SAApB,EAA+BC,SAA/B,CAFN;IAGH;;IACDuC,UAAU,CAACiD,UAAD,EAAanF,IAAb,EAAmB;MACzB,IAAIwF,KAAJ;;MACA,IAAI,KAAKd,aAAT,EAAwB;QACpBc,KAAK,GAAG,KAAKd,aAAL,CAAmB1B,YAAnB,CAAgC,KAAK2B,eAArC,EAAsD,KAAKC,mBAA3D,EAAgFO,UAAhF,EAA4FnF,IAA5F,CAAR;MACH,CAFD,MAGK;QACD,IAAI,CAACA,IAAI,CAACe,QAAV,EAAoB;UAChB,MAAMxD,KAAK,CAAC,wBAAD,CAAX;QACH;;QACDiI,KAAK,GAAGxF,IAAI,CAACe,QAAL,CAAcf,IAAd,CAAR;MACH;;MACD,OAAOwF,KAAP;IACH;;IACD3C,OAAO,CAACsC,UAAD,EAAaM,OAAb,EAAsB;MACzB;MACA;MACA,IAAI;QACA,KAAKZ,UAAL,IACI,KAAKA,UAAL,CAAgBrC,SAAhB,CAA0B,KAAKsC,YAA/B,EAA6C,KAAKE,gBAAlD,EAAoEG,UAApE,EAAgFM,OAAhF,CADJ;MAEH,CAHD,CAIA,OAAO/D,GAAP,EAAY;QACR,KAAK5B,WAAL,CAAiBqF,UAAjB,EAA6BzD,GAA7B;MACH;IACJ,CA1Je,CA2JhB;;;IACAP,gBAAgB,CAACf,IAAD,EAAOgC,KAAP,EAAc;MAC1B,MAAMsD,MAAM,GAAG,KAAKxC,WAApB;MACA,MAAMyC,IAAI,GAAGD,MAAM,CAACtF,IAAD,CAAnB;MACA,MAAMwF,IAAI,GAAIF,MAAM,CAACtF,IAAD,CAAN,GAAeuF,IAAI,GAAGvD,KAApC;;MACA,IAAIwD,IAAI,GAAG,CAAX,EAAc;QACV,MAAM,IAAIrI,KAAJ,CAAU,0CAAV,CAAN;MACH;;MACD,IAAIoI,IAAI,IAAI,CAAR,IAAaC,IAAI,IAAI,CAAzB,EAA4B;QACxB,MAAMH,OAAO,GAAG;UACZ3D,SAAS,EAAE4D,MAAM,CAAC,WAAD,CAAN,GAAsB,CADrB;UAEZpF,SAAS,EAAEoF,MAAM,CAAC,WAAD,CAAN,GAAsB,CAFrB;UAGZrF,SAAS,EAAEqF,MAAM,CAAC,WAAD,CAAN,GAAsB,CAHrB;UAIZG,MAAM,EAAEzF;QAJI,CAAhB;QAMA,KAAKyC,OAAL,CAAa,KAAKpB,KAAlB,EAAyBgE,OAAzB;MACH;IACJ;;EA5Ke;;EA8KpB,MAAM5D,QAAN,CAAe;IACXrD,WAAW,CAAC4B,IAAD,EAAOhB,MAAP,EAAeD,QAAf,EAAyB2G,OAAzB,EAAkCP,UAAlC,EAA8CxE,QAA9C,EAAwD;MAC/D;MACA,KAAKU,KAAL,GAAa,IAAb;MACA,KAAKd,QAAL,GAAgB,CAAhB,CAH+D,CAI/D;;MACA,KAAKa,cAAL,GAAsB,IAAtB,CAL+D,CAM/D;;MACA,KAAKuE,MAAL,GAAc,cAAd;MACA,KAAK3F,IAAL,GAAYA,IAAZ;MACA,KAAKhB,MAAL,GAAcA,MAAd;MACA,KAAKyB,IAAL,GAAYiF,OAAZ;MACA,KAAKP,UAAL,GAAkBA,UAAlB;MACA,KAAKxE,QAAL,GAAgBA,QAAhB;;MACA,IAAI,CAAC5B,QAAL,EAAe;QACX,MAAM,IAAI5B,KAAJ,CAAU,yBAAV,CAAN;MACH;;MACD,KAAK4B,QAAL,GAAgBA,QAAhB;MACA,MAAM6G,IAAI,GAAG,IAAb,CAjB+D,CAkB/D;;MACA,IAAI5F,IAAI,KAAKC,SAAT,IAAsByF,OAAtB,IAAiCA,OAAO,CAACG,IAA7C,EAAmD;QAC/C,KAAKrG,MAAL,GAAciC,QAAQ,CAACZ,UAAvB;MACH,CAFD,MAGK;QACD,KAAKrB,MAAL,GAAc,YAAY;UACtB,OAAOiC,QAAQ,CAACZ,UAAT,CAAoBiF,IAApB,CAAyBxJ,MAAzB,EAAiCsJ,IAAjC,EAAuC,IAAvC,EAA6CxG,SAA7C,CAAP;QACH,CAFD;MAGH;IACJ;;IACgB,OAAVyB,UAAU,CAACjB,IAAD,EAAO2C,MAAP,EAAewD,IAAf,EAAqB;MAClC,IAAI,CAACnG,IAAL,EAAW;QACPA,IAAI,GAAG,IAAP;MACH;;MACDoG,yBAAyB;;MACzB,IAAI;QACApG,IAAI,CAACW,QAAL;QACA,OAAOX,IAAI,CAACvC,IAAL,CAAUsC,OAAV,CAAkBC,IAAlB,EAAwB2C,MAAxB,EAAgCwD,IAAhC,CAAP;MACH,CAHD,SAIQ;QACJ,IAAIC,yBAAyB,IAAI,CAAjC,EAAoC;UAChCC,mBAAmB;QACtB;;QACDD,yBAAyB;MAC5B;IACJ;;IACO,IAAJ3I,IAAI,GAAG;MACP,OAAO,KAAKgE,KAAZ;IACH;;IACQ,IAALvB,KAAK,GAAG;MACR,OAAO,KAAK6F,MAAZ;IACH;;IACDO,qBAAqB,GAAG;MACpB,KAAK7F,aAAL,CAAmBN,YAAnB,EAAiCmB,UAAjC;IACH,CArDU,CAsDX;;;IACAb,aAAa,CAAC8F,OAAD,EAAUC,UAAV,EAAsBC,UAAtB,EAAkC;MAC3C,IAAI,KAAKV,MAAL,KAAgBS,UAAhB,IAA8B,KAAKT,MAAL,KAAgBU,UAAlD,EAA8D;QAC1D,KAAKV,MAAL,GAAcQ,OAAd;;QACA,IAAIA,OAAO,IAAIpG,YAAf,EAA6B;UACzB,KAAKqB,cAAL,GAAsB,IAAtB;QACH;MACJ,CALD,MAMK;QACD,MAAM,IAAIjE,KAAJ,CAAW,GAAE,KAAK6C,IAAK,KAAI,KAAKhB,MAAO,6BAA4BmH,OAAQ,uBAAsBC,UAAW,IAAGC,UAAU,GAAG,UAAUA,UAAV,GAAuB,GAA1B,GAAgC,EAAG,UAAS,KAAKV,MAAO,IAAjL,CAAN;MACH;IACJ;;IACDW,QAAQ,GAAG;MACP,IAAI,KAAK7F,IAAL,IAAa,OAAO,KAAKA,IAAL,CAAU8F,QAAjB,KAA8B,WAA/C,EAA4D;QACxD,OAAO,KAAK9F,IAAL,CAAU8F,QAAV,CAAmBD,QAAnB,EAAP;MACH,CAFD,MAGK;QACD,OAAOE,MAAM,CAACC,SAAP,CAAiBH,QAAjB,CAA0BR,IAA1B,CAA+B,IAA/B,CAAP;MACH;IACJ,CAzEU,CA0EX;IACA;;;IACAY,MAAM,GAAG;MACL,OAAO;QACH1G,IAAI,EAAE,KAAKA,IADR;QAEHF,KAAK,EAAE,KAAKA,KAFT;QAGHd,MAAM,EAAE,KAAKA,MAHV;QAIH3B,IAAI,EAAE,KAAKA,IAAL,CAAUZ,IAJb;QAKH8D,QAAQ,EAAE,KAAKA;MALZ,CAAP;IAOH;;EApFU,CA/aC,CAqgBhB;EACA;EACA;EACA;EACA;;;EACA,MAAMoG,gBAAgB,GAAGnK,UAAU,CAAC,YAAD,CAAnC;;EACA,MAAMoK,aAAa,GAAGpK,UAAU,CAAC,SAAD,CAAhC;;EACA,MAAMqK,UAAU,GAAGrK,UAAU,CAAC,MAAD,CAA7B;;EACA,IAAIsK,eAAe,GAAG,EAAtB;EACA,IAAIC,yBAAyB,GAAG,KAAhC;EACA,IAAIC,2BAAJ;;EACA,SAASC,uBAAT,CAAiCC,IAAjC,EAAuC;IACnC,IAAI,CAACF,2BAAL,EAAkC;MAC9B,IAAI1K,MAAM,CAACsK,aAAD,CAAV,EAA2B;QACvBI,2BAA2B,GAAG1K,MAAM,CAACsK,aAAD,CAAN,CAAsBO,OAAtB,CAA8B,CAA9B,CAA9B;MACH;IACJ;;IACD,IAAIH,2BAAJ,EAAiC;MAC7B,IAAII,UAAU,GAAGJ,2BAA2B,CAACH,UAAD,CAA5C;;MACA,IAAI,CAACO,UAAL,EAAiB;QACb;QACA;QACAA,UAAU,GAAGJ,2BAA2B,CAAC,MAAD,CAAxC;MACH;;MACDI,UAAU,CAACtB,IAAX,CAAgBkB,2BAAhB,EAA6CE,IAA7C;IACH,CARD,MASK;MACD5K,MAAM,CAACqK,gBAAD,CAAN,CAAyBO,IAAzB,EAA+B,CAA/B;IACH;EACJ;;EACD,SAAS3F,iBAAT,CAA2B3B,IAA3B,EAAiC;IAC7B;IACA;IACA,IAAIoG,yBAAyB,KAAK,CAA9B,IAAmCc,eAAe,CAAC5E,MAAhB,KAA2B,CAAlE,EAAqE;MACjE;MACA+E,uBAAuB,CAAChB,mBAAD,CAAvB;IACH;;IACDrG,IAAI,IAAIkH,eAAe,CAAC5B,IAAhB,CAAqBtF,IAArB,CAAR;EACH;;EACD,SAASqG,mBAAT,GAA+B;IAC3B,IAAI,CAACc,yBAAL,EAAgC;MAC5BA,yBAAyB,GAAG,IAA5B;;MACA,OAAOD,eAAe,CAAC5E,MAAvB,EAA+B;QAC3B,MAAMmF,KAAK,GAAGP,eAAd;QACAA,eAAe,GAAG,EAAlB;;QACA,KAAK,IAAI7E,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGoF,KAAK,CAACnF,MAA1B,EAAkCD,CAAC,EAAnC,EAAuC;UACnC,MAAMrC,IAAI,GAAGyH,KAAK,CAACpF,CAAD,CAAlB;;UACA,IAAI;YACArC,IAAI,CAACvC,IAAL,CAAUsC,OAAV,CAAkBC,IAAlB,EAAwB,IAAxB,EAA8B,IAA9B;UACH,CAFD,CAGA,OAAOH,KAAP,EAAc;YACVxB,IAAI,CAACqJ,gBAAL,CAAsB7H,KAAtB;UACH;QACJ;MACJ;;MACDxB,IAAI,CAACsJ,kBAAL;;MACAR,yBAAyB,GAAG,KAA5B;IACH;EACJ,CA/jBe,CAgkBhB;EACA;EACA;EACA;EACA;;;EACA,MAAMlH,OAAO,GAAG;IAAEpD,IAAI,EAAE;EAAR,CAAhB;EACA,MAAMsD,YAAY,GAAG,cAArB;EAAA,MAAqCmB,UAAU,GAAG,YAAlD;EAAA,MAAgEZ,SAAS,GAAG,WAA5E;EAAA,MAAyFF,OAAO,GAAG,SAAnG;EAAA,MAA8G2B,SAAS,GAAG,WAA1H;EAAA,MAAuIjB,OAAO,GAAG,SAAjJ;EACA,MAAMY,SAAS,GAAG,WAAlB;EAAA,MAA+BxB,SAAS,GAAG,WAA3C;EAAA,MAAwDD,SAAS,GAAG,WAApE;EACA,MAAM/C,OAAO,GAAG,EAAhB;EACA,MAAMe,IAAI,GAAG;IACTuJ,MAAM,EAAEhL,UADC;IAETiL,gBAAgB,EAAE,MAAMjK,iBAFf;IAGT8J,gBAAgB,EAAEI,IAHT;IAITH,kBAAkB,EAAEG,IAJX;IAKTnG,iBAAiB,EAAEA,iBALV;IAMToG,iBAAiB,EAAE,MAAM,CAAC3K,QAAQ,CAACR,UAAU,CAAC,iCAAD,CAAX,CANzB;IAOToL,gBAAgB,EAAE,MAAM,EAPf;IAQTC,iBAAiB,EAAEH,IARV;IASTI,WAAW,EAAE,MAAMJ,IATV;IAUTK,aAAa,EAAE,MAAM,EAVZ;IAWTC,SAAS,EAAE,MAAMN,IAXR;IAYTO,cAAc,EAAE,MAAMP,IAZb;IAaTQ,mBAAmB,EAAE,MAAMR,IAblB;IAcTS,UAAU,EAAE,MAAM,KAdT;IAeTC,gBAAgB,EAAE,MAAMxH,SAff;IAgBTyH,oBAAoB,EAAE,MAAMX,IAhBnB;IAiBTY,8BAA8B,EAAE,MAAM1H,SAjB7B;IAkBT2H,YAAY,EAAE,MAAM3H,SAlBX;IAmBT4H,UAAU,EAAE,MAAM,EAnBT;IAoBTC,UAAU,EAAE,MAAMf,IApBT;IAqBTgB,mBAAmB,EAAE,MAAMhB,IArBlB;IAsBTiB,gBAAgB,EAAE,MAAM,EAtBf;IAuBTC,qBAAqB,EAAE,MAAMlB,IAvBpB;IAwBTmB,iBAAiB,EAAE,MAAMnB,IAxBhB;IAyBToB,cAAc,EAAE,MAAMpB,IAzBb;IA0BTT,uBAAuB,EAAEA;EA1BhB,CAAb;EA4BA,IAAIzJ,iBAAiB,GAAG;IAAED,MAAM,EAAE,IAAV;IAAgBF,IAAI,EAAE,IAAIL,QAAJ,CAAa,IAAb,EAAmB,IAAnB;EAAtB,CAAxB;EACA,IAAIU,YAAY,GAAG,IAAnB;EACA,IAAIsI,yBAAyB,GAAG,CAAhC;;EACA,SAAS0B,IAAT,GAAgB,CAAG;;EACnB5K,kBAAkB,CAAC,MAAD,EAAS,MAAT,CAAlB;EACA,OAAOE,QAAP;AACH;;AAED,SAAS+L,QAAT,GAAoB;EAChB;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,MAAMzM,MAAM,GAAGC,UAAf;EACA,MAAMwB,cAAc,GAAGzB,MAAM,CAACE,UAAU,CAAC,yBAAD,CAAX,CAAN,KAAkD,IAAzE;;EACA,IAAIF,MAAM,CAAC,MAAD,CAAN,KAAmByB,cAAc,IAAI,OAAOzB,MAAM,CAAC,MAAD,CAAN,CAAeE,UAAtB,KAAqC,UAA1E,CAAJ,EAA2F;IACvF,MAAM,IAAIW,KAAJ,CAAU,sBAAV,CAAN;EACH,CAde,CAehB;;;EACAb,MAAM,CAAC,MAAD,CAAN,KAAmBK,QAAQ,EAA3B;EACA,OAAOL,MAAM,CAAC,MAAD,CAAb;AACH;AAED;AACA;AACA;AACA;AACA;AACA;;AACA;;;AACA,MAAMgM,8BAA8B,GAAG9B,MAAM,CAACwC,wBAA9C;AACA;;AACA,MAAMX,oBAAoB,GAAG7B,MAAM,CAACyC,cAApC;AACA;;AACA,MAAMC,oBAAoB,GAAG1C,MAAM,CAAC2C,cAApC;AACA;;AACA,MAAMZ,YAAY,GAAG/B,MAAM,CAAC4C,MAA5B;AACA;;AACA,MAAMZ,UAAU,GAAGa,KAAK,CAAC5C,SAAN,CAAgB6C,KAAnC;AACA;;AACA,MAAMC,sBAAsB,GAAG,kBAA/B;AACA;;AACA,MAAMC,yBAAyB,GAAG,qBAAlC;AACA;;AACA,MAAMC,8BAA8B,GAAGjN,UAAU,CAAC+M,sBAAD,CAAjD;AACA;;;AACA,MAAMG,iCAAiC,GAAGlN,UAAU,CAACgN,yBAAD,CAApD;AACA;;;AACA,MAAMG,QAAQ,GAAG,MAAjB;AACA;;AACA,MAAMC,SAAS,GAAG,OAAlB;AACA;;AACA,MAAMC,kBAAkB,GAAGrN,UAAU,CAAC,EAAD,CAArC;;AACA,SAASkM,mBAAT,CAA6B3J,QAA7B,EAAuCC,MAAvC,EAA+C;EAC3C,OAAO8K,IAAI,CAACxM,OAAL,CAAawB,IAAb,CAAkBC,QAAlB,EAA4BC,MAA5B,CAAP;AACH;;AACD,SAAS+K,gCAAT,CAA0C/K,MAA1C,EAAkDD,QAAlD,EAA4D0B,IAA5D,EAAkEe,cAAlE,EAAkFI,YAAlF,EAAgG;EAC5F,OAAOkI,IAAI,CAACxM,OAAL,CAAaqE,iBAAb,CAA+B3C,MAA/B,EAAuCD,QAAvC,EAAiD0B,IAAjD,EAAuDe,cAAvD,EAAuEI,YAAvE,CAAP;AACH;;AACD,MAAMoI,UAAU,GAAGxN,UAAnB;AACA,MAAMyN,cAAc,GAAG,OAAOC,MAAP,KAAkB,WAAzC;AACA,MAAMC,cAAc,GAAGF,cAAc,GAAGC,MAAH,GAAYtJ,SAAjD;;AACA,MAAMwJ,OAAO,GAAIH,cAAc,IAAIE,cAAnB,IAAsC5N,UAAtD;;AACA,MAAM8N,gBAAgB,GAAG,iBAAzB;;AACA,SAAStC,aAAT,CAAuBhC,IAAvB,EAA6B/G,MAA7B,EAAqC;EACjC,KAAK,IAAIiD,CAAC,GAAG8D,IAAI,CAAC7D,MAAL,GAAc,CAA3B,EAA8BD,CAAC,IAAI,CAAnC,EAAsCA,CAAC,EAAvC,EAA2C;IACvC,IAAI,OAAO8D,IAAI,CAAC9D,CAAD,CAAX,KAAmB,UAAvB,EAAmC;MAC/B8D,IAAI,CAAC9D,CAAD,CAAJ,GAAUyG,mBAAmB,CAAC3C,IAAI,CAAC9D,CAAD,CAAL,EAAUjD,MAAM,GAAG,GAAT,GAAeiD,CAAzB,CAA7B;IACH;EACJ;;EACD,OAAO8D,IAAP;AACH;;AACD,SAASuE,cAAT,CAAwB7D,SAAxB,EAAmC8D,OAAnC,EAA4C;EACxC,MAAMvL,MAAM,GAAGyH,SAAS,CAACrI,WAAV,CAAsB,MAAtB,CAAf;;EACA,KAAK,IAAI6D,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGsI,OAAO,CAACrI,MAA5B,EAAoCD,CAAC,EAArC,EAAyC;IACrC,MAAMxF,IAAI,GAAG8N,OAAO,CAACtI,CAAD,CAApB;IACA,MAAMI,QAAQ,GAAGoE,SAAS,CAAChK,IAAD,CAA1B;;IACA,IAAI4F,QAAJ,EAAc;MACV,MAAMmI,aAAa,GAAGlC,8BAA8B,CAAC7B,SAAD,EAAYhK,IAAZ,CAApD;;MACA,IAAI,CAACgO,kBAAkB,CAACD,aAAD,CAAvB,EAAwC;QACpC;MACH;;MACD/D,SAAS,CAAChK,IAAD,CAAT,GAAkB,CAAE4F,QAAD,IAAc;QAC7B,MAAMqI,OAAO,GAAG,YAAY;UACxB,OAAOrI,QAAQ,CAAC2C,KAAT,CAAe,IAAf,EAAqB+C,aAAa,CAAC3I,SAAD,EAAYJ,MAAM,GAAG,GAAT,GAAevC,IAA3B,CAAlC,CAAP;QACH,CAFD;;QAGAmM,qBAAqB,CAAC8B,OAAD,EAAUrI,QAAV,CAArB;QACA,OAAOqI,OAAP;MACH,CANiB,EAMfrI,QANe,CAAlB;IAOH;EACJ;AACJ;;AACD,SAASoI,kBAAT,CAA4BE,YAA5B,EAA0C;EACtC,IAAI,CAACA,YAAL,EAAmB;IACf,OAAO,IAAP;EACH;;EACD,IAAIA,YAAY,CAACC,QAAb,KAA0B,KAA9B,EAAqC;IACjC,OAAO,KAAP;EACH;;EACD,OAAO,EAAE,OAAOD,YAAY,CAACjM,GAApB,KAA4B,UAA5B,IAA0C,OAAOiM,YAAY,CAACE,GAApB,KAA4B,WAAxE,CAAP;AACH;;AACD,MAAMC,WAAW,GAAG,OAAOC,iBAAP,KAA6B,WAA7B,IAA4CnF,IAAI,YAAYmF,iBAAhF,C,CACA;AACA;;AACA,MAAMC,MAAM,GAAG,EAAE,QAAQZ,OAAV,KACX,OAAOA,OAAO,CAACa,OAAf,KAA2B,WADhB,IAEX,GAAG3E,QAAH,CAAYR,IAAZ,CAAiBsE,OAAO,CAACa,OAAzB,MAAsC,kBAF1C;AAGA,MAAMC,SAAS,GAAG,CAACF,MAAD,IAAW,CAACF,WAAZ,IAA2B,CAAC,EAAEb,cAAc,IAAIE,cAAc,CAAC,aAAD,CAAlC,CAA9C,C,CACA;AACA;AACA;;AACA,MAAMgB,KAAK,GAAG,OAAOf,OAAO,CAACa,OAAf,KAA2B,WAA3B,IACV,GAAG3E,QAAH,CAAYR,IAAZ,CAAiBsE,OAAO,CAACa,OAAzB,MAAsC,kBAD5B,IAEV,CAACH,WAFS,IAGV,CAAC,EAAEb,cAAc,IAAIE,cAAc,CAAC,aAAD,CAAlC,CAHL;AAIA,MAAMiB,sBAAsB,GAAG,EAA/B;;AACA,MAAMC,MAAM,GAAG,UAAUC,KAAV,EAAiB;EAC5B;EACA;EACAA,KAAK,GAAGA,KAAK,IAAIlB,OAAO,CAACkB,KAAzB;;EACA,IAAI,CAACA,KAAL,EAAY;IACR;EACH;;EACD,IAAIC,eAAe,GAAGH,sBAAsB,CAACE,KAAK,CAACtL,IAAP,CAA5C;;EACA,IAAI,CAACuL,eAAL,EAAsB;IAClBA,eAAe,GAAGH,sBAAsB,CAACE,KAAK,CAACtL,IAAP,CAAtB,GAAqCgK,UAAU,CAAC,gBAAgBsB,KAAK,CAACtL,IAAvB,CAAjE;EACH;;EACD,MAAMuC,MAAM,GAAG,QAAQ+I,KAAK,CAAC/I,MAAd,IAAwB6H,OAAvC;EACA,MAAMoB,QAAQ,GAAGjJ,MAAM,CAACgJ,eAAD,CAAvB;EACA,IAAIE,MAAJ;;EACA,IAAIP,SAAS,IAAI3I,MAAM,KAAK4H,cAAxB,IAA0CmB,KAAK,CAACtL,IAAN,KAAe,OAA7D,EAAsE;IAClE;IACA;IACA;IACA,MAAM0L,UAAU,GAAGJ,KAAnB;IACAG,MAAM,GACFD,QAAQ,IACJA,QAAQ,CAAC1F,IAAT,CAAc,IAAd,EAAoB4F,UAAU,CAACC,OAA/B,EAAwCD,UAAU,CAACE,QAAnD,EAA6DF,UAAU,CAACG,MAAxE,EAAgFH,UAAU,CAACI,KAA3F,EAAkGJ,UAAU,CAACjM,KAA7G,CAFR;;IAGA,IAAIgM,MAAM,KAAK,IAAf,EAAqB;MACjBH,KAAK,CAACS,cAAN;IACH;EACJ,CAXD,MAYK;IACDN,MAAM,GAAGD,QAAQ,IAAIA,QAAQ,CAACxG,KAAT,CAAe,IAAf,EAAqB5F,SAArB,CAArB;;IACA,IAAIqM,MAAM,IAAI7K,SAAV,IAAuB,CAAC6K,MAA5B,EAAoC;MAChCH,KAAK,CAACS,cAAN;IACH;EACJ;;EACD,OAAON,MAAP;AACH,CAjCD;;AAkCA,SAASO,aAAT,CAAuBC,GAAvB,EAA4BC,IAA5B,EAAkCzF,SAAlC,EAA6C;EACzC,IAAI0F,IAAI,GAAG7D,8BAA8B,CAAC2D,GAAD,EAAMC,IAAN,CAAzC;;EACA,IAAI,CAACC,IAAD,IAAS1F,SAAb,EAAwB;IACpB;IACA,MAAM+D,aAAa,GAAGlC,8BAA8B,CAAC7B,SAAD,EAAYyF,IAAZ,CAApD;;IACA,IAAI1B,aAAJ,EAAmB;MACf2B,IAAI,GAAG;QAAEC,UAAU,EAAE,IAAd;QAAoBC,YAAY,EAAE;MAAlC,CAAP;IACH;EACJ,CARwC,CASzC;EACA;;;EACA,IAAI,CAACF,IAAD,IAAS,CAACA,IAAI,CAACE,YAAnB,EAAiC;IAC7B;EACH;;EACD,MAAMC,mBAAmB,GAAGtC,UAAU,CAAC,OAAOkC,IAAP,GAAc,SAAf,CAAtC;;EACA,IAAID,GAAG,CAACnO,cAAJ,CAAmBwO,mBAAnB,KAA2CL,GAAG,CAACK,mBAAD,CAAlD,EAAyE;IACrE;EACH,CAjBwC,CAkBzC;EACA;EACA;EACA;EACA;;;EACA,OAAOH,IAAI,CAACvB,QAAZ;EACA,OAAOuB,IAAI,CAAC/G,KAAZ;EACA,MAAMmH,eAAe,GAAGJ,IAAI,CAACzN,GAA7B;EACA,MAAM8N,eAAe,GAAGL,IAAI,CAACtB,GAA7B,CA1ByC,CA2BzC;;EACA,MAAM4B,SAAS,GAAGP,IAAI,CAAC5C,KAAL,CAAW,CAAX,CAAlB;EACA,IAAIiC,eAAe,GAAGH,sBAAsB,CAACqB,SAAD,CAA5C;;EACA,IAAI,CAAClB,eAAL,EAAsB;IAClBA,eAAe,GAAGH,sBAAsB,CAACqB,SAAD,CAAtB,GAAoCzC,UAAU,CAAC,gBAAgByC,SAAjB,CAAhE;EACH;;EACDN,IAAI,CAACtB,GAAL,GAAW,UAAU6B,QAAV,EAAoB;IAC3B;IACA;IACA,IAAInK,MAAM,GAAG,IAAb;;IACA,IAAI,CAACA,MAAD,IAAW0J,GAAG,KAAK7B,OAAvB,EAAgC;MAC5B7H,MAAM,GAAG6H,OAAT;IACH;;IACD,IAAI,CAAC7H,MAAL,EAAa;MACT;IACH;;IACD,MAAMoK,aAAa,GAAGpK,MAAM,CAACgJ,eAAD,CAA5B;;IACA,IAAI,OAAOoB,aAAP,KAAyB,UAA7B,EAAyC;MACrCpK,MAAM,CAACqK,mBAAP,CAA2BH,SAA3B,EAAsCpB,MAAtC;IACH,CAb0B,CAc3B;IACA;;;IACAmB,eAAe,IAAIA,eAAe,CAAC1G,IAAhB,CAAqBvD,MAArB,EAA6B,IAA7B,CAAnB;IACAA,MAAM,CAACgJ,eAAD,CAAN,GAA0BmB,QAA1B;;IACA,IAAI,OAAOA,QAAP,KAAoB,UAAxB,EAAoC;MAChCnK,MAAM,CAACsK,gBAAP,CAAwBJ,SAAxB,EAAmCpB,MAAnC,EAA2C,KAA3C;IACH;EACJ,CArBD,CAjCyC,CAuDzC;EACA;;;EACAc,IAAI,CAACzN,GAAL,GAAW,YAAY;IACnB;IACA;IACA,IAAI6D,MAAM,GAAG,IAAb;;IACA,IAAI,CAACA,MAAD,IAAW0J,GAAG,KAAK7B,OAAvB,EAAgC;MAC5B7H,MAAM,GAAG6H,OAAT;IACH;;IACD,IAAI,CAAC7H,MAAL,EAAa;MACT,OAAO,IAAP;IACH;;IACD,MAAMiJ,QAAQ,GAAGjJ,MAAM,CAACgJ,eAAD,CAAvB;;IACA,IAAIC,QAAJ,EAAc;MACV,OAAOA,QAAP;IACH,CAFD,MAGK,IAAIe,eAAJ,EAAqB;MACtB;MACA;MACA;MACA;MACA;MACA;MACA,IAAInH,KAAK,GAAGmH,eAAe,CAACzG,IAAhB,CAAqB,IAArB,CAAZ;;MACA,IAAIV,KAAJ,EAAW;QACP+G,IAAI,CAACtB,GAAL,CAAS/E,IAAT,CAAc,IAAd,EAAoBV,KAApB;;QACA,IAAI,OAAO7C,MAAM,CAAC8H,gBAAD,CAAb,KAAoC,UAAxC,EAAoD;UAChD9H,MAAM,CAACuK,eAAP,CAAuBZ,IAAvB;QACH;;QACD,OAAO9G,KAAP;MACH;IACJ;;IACD,OAAO,IAAP;EACH,CA/BD;;EAgCAiD,oBAAoB,CAAC4D,GAAD,EAAMC,IAAN,EAAYC,IAAZ,CAApB;EACAF,GAAG,CAACK,mBAAD,CAAH,GAA2B,IAA3B;AACH;;AACD,SAASzE,iBAAT,CAA2BoE,GAA3B,EAAgC1N,UAAhC,EAA4CkI,SAA5C,EAAuD;EACnD,IAAIlI,UAAJ,EAAgB;IACZ,KAAK,IAAI0D,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG1D,UAAU,CAAC2D,MAA/B,EAAuCD,CAAC,EAAxC,EAA4C;MACxC+J,aAAa,CAACC,GAAD,EAAM,OAAO1N,UAAU,CAAC0D,CAAD,CAAvB,EAA4BwE,SAA5B,CAAb;IACH;EACJ,CAJD,MAKK;IACD,MAAMsG,YAAY,GAAG,EAArB;;IACA,KAAK,MAAMb,IAAX,IAAmBD,GAAnB,EAAwB;MACpB,IAAIC,IAAI,CAAC5C,KAAL,CAAW,CAAX,EAAc,CAAd,KAAoB,IAAxB,EAA8B;QAC1ByD,YAAY,CAAC7H,IAAb,CAAkBgH,IAAlB;MACH;IACJ;;IACD,KAAK,IAAIc,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,YAAY,CAAC7K,MAAjC,EAAyC8K,CAAC,EAA1C,EAA8C;MAC1ChB,aAAa,CAACC,GAAD,EAAMc,YAAY,CAACC,CAAD,CAAlB,EAAuBvG,SAAvB,CAAb;IACH;EACJ;AACJ;;AACD,MAAMwG,mBAAmB,GAAGjD,UAAU,CAAC,kBAAD,CAAtC,C,CACA;;AACA,SAASvB,UAAT,CAAoByE,SAApB,EAA+B;EAC3B,MAAMC,aAAa,GAAG/C,OAAO,CAAC8C,SAAD,CAA7B;EACA,IAAI,CAACC,aAAL,EACI,OAHuB,CAI3B;;EACA/C,OAAO,CAACJ,UAAU,CAACkD,SAAD,CAAX,CAAP,GAAiCC,aAAjC;;EACA/C,OAAO,CAAC8C,SAAD,CAAP,GAAqB,YAAY;IAC7B,MAAME,CAAC,GAAGrF,aAAa,CAAC3I,SAAD,EAAY8N,SAAZ,CAAvB;;IACA,QAAQE,CAAC,CAAClL,MAAV;MACI,KAAK,CAAL;QACI,KAAK+K,mBAAL,IAA4B,IAAIE,aAAJ,EAA5B;QACA;;MACJ,KAAK,CAAL;QACI,KAAKF,mBAAL,IAA4B,IAAIE,aAAJ,CAAkBC,CAAC,CAAC,CAAD,CAAnB,CAA5B;QACA;;MACJ,KAAK,CAAL;QACI,KAAKH,mBAAL,IAA4B,IAAIE,aAAJ,CAAkBC,CAAC,CAAC,CAAD,CAAnB,EAAwBA,CAAC,CAAC,CAAD,CAAzB,CAA5B;QACA;;MACJ,KAAK,CAAL;QACI,KAAKH,mBAAL,IAA4B,IAAIE,aAAJ,CAAkBC,CAAC,CAAC,CAAD,CAAnB,EAAwBA,CAAC,CAAC,CAAD,CAAzB,EAA8BA,CAAC,CAAC,CAAD,CAA/B,CAA5B;QACA;;MACJ,KAAK,CAAL;QACI,KAAKH,mBAAL,IAA4B,IAAIE,aAAJ,CAAkBC,CAAC,CAAC,CAAD,CAAnB,EAAwBA,CAAC,CAAC,CAAD,CAAzB,EAA8BA,CAAC,CAAC,CAAD,CAA/B,EAAoCA,CAAC,CAAC,CAAD,CAArC,CAA5B;QACA;;MACJ;QACI,MAAM,IAAIjQ,KAAJ,CAAU,oBAAV,CAAN;IAjBR;EAmBH,CArBD,CAN2B,CA4B3B;;;EACAyL,qBAAqB,CAACwB,OAAO,CAAC8C,SAAD,CAAR,EAAqBC,aAArB,CAArB;EACA,MAAME,QAAQ,GAAG,IAAIF,aAAJ,CAAkB,YAAY,CAAG,CAAjC,CAAjB;EACA,IAAIjB,IAAJ;;EACA,KAAKA,IAAL,IAAamB,QAAb,EAAuB;IACnB;IACA,IAAIH,SAAS,KAAK,gBAAd,IAAkChB,IAAI,KAAK,cAA/C,EACI;;IACJ,CAAC,UAAUA,IAAV,EAAgB;MACb,IAAI,OAAOmB,QAAQ,CAACnB,IAAD,CAAf,KAA0B,UAA9B,EAA0C;QACtC9B,OAAO,CAAC8C,SAAD,CAAP,CAAmBzG,SAAnB,CAA6ByF,IAA7B,IAAqC,YAAY;UAC7C,OAAO,KAAKe,mBAAL,EAA0Bf,IAA1B,EAAgClH,KAAhC,CAAsC,KAAKiI,mBAAL,CAAtC,EAAiE7N,SAAjE,CAAP;QACH,CAFD;MAGH,CAJD,MAKK;QACDiJ,oBAAoB,CAAC+B,OAAO,CAAC8C,SAAD,CAAP,CAAmBzG,SAApB,EAA+ByF,IAA/B,EAAqC;UACrDrB,GAAG,EAAE,UAAUjN,EAAV,EAAc;YACf,IAAI,OAAOA,EAAP,KAAc,UAAlB,EAA8B;cAC1B,KAAKqP,mBAAL,EAA0Bf,IAA1B,IAAkCxD,mBAAmB,CAAC9K,EAAD,EAAKsP,SAAS,GAAG,GAAZ,GAAkBhB,IAAvB,CAArD,CAD0B,CAE1B;cACA;cACA;;cACAtD,qBAAqB,CAAC,KAAKqE,mBAAL,EAA0Bf,IAA1B,CAAD,EAAkCtO,EAAlC,CAArB;YACH,CAND,MAOK;cACD,KAAKqP,mBAAL,EAA0Bf,IAA1B,IAAkCtO,EAAlC;YACH;UACJ,CAZoD;UAarDc,GAAG,EAAE,YAAY;YACb,OAAO,KAAKuO,mBAAL,EAA0Bf,IAA1B,CAAP;UACH;QAfoD,CAArC,CAApB;MAiBH;IACJ,CAzBD,EAyBGA,IAzBH;EA0BH;;EACD,KAAKA,IAAL,IAAaiB,aAAb,EAA4B;IACxB,IAAIjB,IAAI,KAAK,WAAT,IAAwBiB,aAAa,CAACrP,cAAd,CAA6BoO,IAA7B,CAA5B,EAAgE;MAC5D9B,OAAO,CAAC8C,SAAD,CAAP,CAAmBhB,IAAnB,IAA2BiB,aAAa,CAACjB,IAAD,CAAxC;IACH;EACJ;AACJ;;AACD,SAASpE,WAAT,CAAqBvF,MAArB,EAA6B9F,IAA7B,EAAmC6Q,OAAnC,EAA4C;EACxC,IAAIC,KAAK,GAAGhL,MAAZ;;EACA,OAAOgL,KAAK,IAAI,CAACA,KAAK,CAACzP,cAAN,CAAqBrB,IAArB,CAAjB,EAA6C;IACzC8Q,KAAK,GAAGrE,oBAAoB,CAACqE,KAAD,CAA5B;EACH;;EACD,IAAI,CAACA,KAAD,IAAUhL,MAAM,CAAC9F,IAAD,CAApB,EAA4B;IACxB;IACA8Q,KAAK,GAAGhL,MAAR;EACH;;EACD,MAAMiL,YAAY,GAAGxD,UAAU,CAACvN,IAAD,CAA/B;EACA,IAAI4F,QAAQ,GAAG,IAAf;;EACA,IAAIkL,KAAK,KAAK,EAAElL,QAAQ,GAAGkL,KAAK,CAACC,YAAD,CAAlB,KAAqC,CAACD,KAAK,CAACzP,cAAN,CAAqB0P,YAArB,CAA3C,CAAT,EAAyF;IACrFnL,QAAQ,GAAGkL,KAAK,CAACC,YAAD,CAAL,GAAsBD,KAAK,CAAC9Q,IAAD,CAAtC,CADqF,CAErF;IACA;;IACA,MAAM0P,IAAI,GAAGoB,KAAK,IAAIjF,8BAA8B,CAACiF,KAAD,EAAQ9Q,IAAR,CAApD;;IACA,IAAIgO,kBAAkB,CAAC0B,IAAD,CAAtB,EAA8B;MAC1B,MAAMsB,aAAa,GAAGH,OAAO,CAACjL,QAAD,EAAWmL,YAAX,EAAyB/Q,IAAzB,CAA7B;;MACA8Q,KAAK,CAAC9Q,IAAD,CAAL,GAAc,YAAY;QACtB,OAAOgR,aAAa,CAAC,IAAD,EAAOrO,SAAP,CAApB;MACH,CAFD;;MAGAwJ,qBAAqB,CAAC2E,KAAK,CAAC9Q,IAAD,CAAN,EAAc4F,QAAd,CAArB;IACH;EACJ;;EACD,OAAOA,QAAP;AACH,C,CACD;;;AACA,SAAS4F,cAAT,CAAwBgE,GAAxB,EAA6ByB,QAA7B,EAAuCC,WAAvC,EAAoD;EAChD,IAAIC,SAAS,GAAG,IAAhB;;EACA,SAAS5M,YAAT,CAAsBpB,IAAtB,EAA4B;IACxB,MAAMa,IAAI,GAAGb,IAAI,CAACa,IAAlB;;IACAA,IAAI,CAACsF,IAAL,CAAUtF,IAAI,CAACoN,KAAf,IAAwB,YAAY;MAChCjO,IAAI,CAACJ,MAAL,CAAYwF,KAAZ,CAAkB,IAAlB,EAAwB5F,SAAxB;IACH,CAFD;;IAGAwO,SAAS,CAAC5I,KAAV,CAAgBvE,IAAI,CAAC8B,MAArB,EAA6B9B,IAAI,CAACsF,IAAlC;IACA,OAAOnG,IAAP;EACH;;EACDgO,SAAS,GAAG9F,WAAW,CAACmE,GAAD,EAAMyB,QAAN,EAAiBrL,QAAD,IAAc,UAAUuD,IAAV,EAAgBG,IAAhB,EAAsB;IACvE,MAAM+H,IAAI,GAAGH,WAAW,CAAC/H,IAAD,EAAOG,IAAP,CAAxB;;IACA,IAAI+H,IAAI,CAACD,KAAL,IAAc,CAAd,IAAmB,OAAO9H,IAAI,CAAC+H,IAAI,CAACD,KAAN,CAAX,KAA4B,UAAnD,EAA+D;MAC3D,OAAO9D,gCAAgC,CAAC+D,IAAI,CAACrR,IAAN,EAAYsJ,IAAI,CAAC+H,IAAI,CAACD,KAAN,CAAhB,EAA8BC,IAA9B,EAAoC9M,YAApC,CAAvC;IACH,CAFD,MAGK;MACD;MACA,OAAOqB,QAAQ,CAAC2C,KAAT,CAAeY,IAAf,EAAqBG,IAArB,CAAP;IACH;EACJ,CATsB,CAAvB;AAUH;;AACD,SAAS6C,qBAAT,CAA+B8B,OAA/B,EAAwCqD,QAAxC,EAAkD;EAC9CrD,OAAO,CAACV,UAAU,CAAC,kBAAD,CAAX,CAAP,GAA0C+D,QAA1C;AACH;;AACD,IAAIC,kBAAkB,GAAG,KAAzB;AACA,IAAIC,QAAQ,GAAG,KAAf;;AACA,SAASC,IAAT,GAAgB;EACZ,IAAI;IACA,MAAMC,EAAE,GAAGhE,cAAc,CAACiE,SAAf,CAAyBC,SAApC;;IACA,IAAIF,EAAE,CAACG,OAAH,CAAW,OAAX,MAAwB,CAAC,CAAzB,IAA8BH,EAAE,CAACG,OAAH,CAAW,UAAX,MAA2B,CAAC,CAA9D,EAAiE;MAC7D,OAAO,IAAP;IACH;EACJ,CALD,CAMA,OAAO7O,KAAP,EAAc,CAAG;;EACjB,OAAO,KAAP;AACH;;AACD,SAAS0I,UAAT,GAAsB;EAClB,IAAI6F,kBAAJ,EAAwB;IACpB,OAAOC,QAAP;EACH;;EACDD,kBAAkB,GAAG,IAArB;;EACA,IAAI;IACA,MAAMG,EAAE,GAAGhE,cAAc,CAACiE,SAAf,CAAyBC,SAApC;;IACA,IAAIF,EAAE,CAACG,OAAH,CAAW,OAAX,MAAwB,CAAC,CAAzB,IAA8BH,EAAE,CAACG,OAAH,CAAW,UAAX,MAA2B,CAAC,CAA1D,IAA+DH,EAAE,CAACG,OAAH,CAAW,OAAX,MAAwB,CAAC,CAA5F,EAA+F;MAC3FL,QAAQ,GAAG,IAAX;IACH;EACJ,CALD,CAMA,OAAOxO,KAAP,EAAc,CAAG;;EACjB,OAAOwO,QAAP;AACH;AAED;AACA;AACA;AACA;;;AACA,IAAIM,gBAAgB,GAAG,KAAvB;;AACA,IAAI,OAAOrE,MAAP,KAAkB,WAAtB,EAAmC;EAC/B,IAAI;IACA,MAAMxE,OAAO,GAAGc,MAAM,CAACyC,cAAP,CAAsB,EAAtB,EAA0B,SAA1B,EAAqC;MACjDvK,GAAG,EAAE,YAAY;QACb6P,gBAAgB,GAAG,IAAnB;MACH;IAHgD,CAArC,CAAhB,CADA,CAMA;IACA;IACA;;IACArE,MAAM,CAAC2C,gBAAP,CAAwB,MAAxB,EAAgCnH,OAAhC,EAAyCA,OAAzC;IACAwE,MAAM,CAAC0C,mBAAP,CAA2B,MAA3B,EAAmClH,OAAnC,EAA4CA,OAA5C;EACH,CAXD,CAYA,OAAOpE,GAAP,EAAY;IACRiN,gBAAgB,GAAG,KAAnB;EACH;AACJ,C,CACD;;;AACA,MAAMC,8BAA8B,GAAG;EACnC3I,IAAI,EAAE;AAD6B,CAAvC;AAGA,MAAM4I,oBAAoB,GAAG,EAA7B;AACA,MAAMC,aAAa,GAAG,EAAtB;AACA,MAAMC,sBAAsB,GAAG,IAAIC,MAAJ,CAAW,MAAM/E,kBAAN,GAA2B,qBAAtC,CAA/B;AACA,MAAMgF,4BAA4B,GAAG7E,UAAU,CAAC,oBAAD,CAA/C;;AACA,SAAS8E,iBAAT,CAA2BrC,SAA3B,EAAsCsC,iBAAtC,EAAyD;EACrD,MAAMC,cAAc,GAAG,CAACD,iBAAiB,GAAGA,iBAAiB,CAACtC,SAAD,CAApB,GAAkCA,SAApD,IAAiE7C,SAAxF;EACA,MAAMqF,aAAa,GAAG,CAACF,iBAAiB,GAAGA,iBAAiB,CAACtC,SAAD,CAApB,GAAkCA,SAApD,IAAiE9C,QAAvF;EACA,MAAMnC,MAAM,GAAGqC,kBAAkB,GAAGmF,cAApC;EACA,MAAME,aAAa,GAAGrF,kBAAkB,GAAGoF,aAA3C;EACAR,oBAAoB,CAAChC,SAAD,CAApB,GAAkC,EAAlC;EACAgC,oBAAoB,CAAChC,SAAD,CAApB,CAAgC7C,SAAhC,IAA6CpC,MAA7C;EACAiH,oBAAoB,CAAChC,SAAD,CAApB,CAAgC9C,QAAhC,IAA4CuF,aAA5C;AACH;;AACD,SAAStH,gBAAT,CAA0BwC,OAA1B,EAAmC+E,GAAnC,EAAwCC,IAAxC,EAA8CC,YAA9C,EAA4D;EACxD,MAAMC,kBAAkB,GAAID,YAAY,IAAIA,YAAY,CAACE,GAA9B,IAAsChG,sBAAjE;EACA,MAAMiG,qBAAqB,GAAIH,YAAY,IAAIA,YAAY,CAACI,EAA9B,IAAqCjG,yBAAnE;EACA,MAAMkG,wBAAwB,GAAIL,YAAY,IAAIA,YAAY,CAACM,SAA9B,IAA4C,gBAA7E;EACA,MAAMC,mCAAmC,GAAIP,YAAY,IAAIA,YAAY,CAACQ,KAA9B,IAAwC,oBAApF;EACA,MAAMC,0BAA0B,GAAG9F,UAAU,CAACsF,kBAAD,CAA7C;EACA,MAAMS,yBAAyB,GAAG,MAAMT,kBAAN,GAA2B,GAA7D;EACA,MAAMU,sBAAsB,GAAG,iBAA/B;EACA,MAAMC,6BAA6B,GAAG,MAAMD,sBAAN,GAA+B,GAArE;;EACA,MAAMnP,UAAU,GAAG,UAAUjB,IAAV,EAAgB2C,MAAhB,EAAwB+I,KAAxB,EAA+B;IAC9C;IACA;IACA,IAAI1L,IAAI,CAACsQ,SAAT,EAAoB;MAChB;IACH;;IACD,MAAM7N,QAAQ,GAAGzC,IAAI,CAACb,QAAtB;;IACA,IAAI,OAAOsD,QAAP,KAAoB,QAApB,IAAgCA,QAAQ,CAAC8N,WAA7C,EAA0D;MACtD;MACAvQ,IAAI,CAACb,QAAL,GAAiBuM,KAAD,IAAWjJ,QAAQ,CAAC8N,WAAT,CAAqB7E,KAArB,CAA3B;;MACA1L,IAAI,CAACwQ,gBAAL,GAAwB/N,QAAxB;IACH,CAX6C,CAY9C;IACA;IACA;IACA;;;IACA,IAAI5C,KAAJ;;IACA,IAAI;MACAG,IAAI,CAACJ,MAAL,CAAYI,IAAZ,EAAkB2C,MAAlB,EAA0B,CAAC+I,KAAD,CAA1B;IACH,CAFD,CAGA,OAAOhK,GAAP,EAAY;MACR7B,KAAK,GAAG6B,GAAR;IACH;;IACD,MAAMoE,OAAO,GAAG9F,IAAI,CAAC8F,OAArB;;IACA,IAAIA,OAAO,IAAI,OAAOA,OAAP,KAAmB,QAA9B,IAA0CA,OAAO,CAAC2K,IAAtD,EAA4D;MACxD;MACA;MACA;MACA,MAAMhO,QAAQ,GAAGzC,IAAI,CAACwQ,gBAAL,GAAwBxQ,IAAI,CAACwQ,gBAA7B,GAAgDxQ,IAAI,CAACb,QAAtE;MACAwD,MAAM,CAACiN,qBAAD,CAAN,CAA8B1J,IAA9B,CAAmCvD,MAAnC,EAA2C+I,KAAK,CAACtL,IAAjD,EAAuDqC,QAAvD,EAAiEqD,OAAjE;IACH;;IACD,OAAOjG,KAAP;EACH,CAhCD;;EAiCA,SAAS6Q,cAAT,CAAwBC,OAAxB,EAAiCjF,KAAjC,EAAwCkF,SAAxC,EAAmD;IAC/C;IACA;IACAlF,KAAK,GAAGA,KAAK,IAAIlB,OAAO,CAACkB,KAAzB;;IACA,IAAI,CAACA,KAAL,EAAY;MACR;IACH,CAN8C,CAO/C;IACA;;;IACA,MAAM/I,MAAM,GAAGgO,OAAO,IAAIjF,KAAK,CAAC/I,MAAjB,IAA2B6H,OAA1C;IACA,MAAMqG,KAAK,GAAGlO,MAAM,CAACkM,oBAAoB,CAACnD,KAAK,CAACtL,IAAP,CAApB,CAAiCwQ,SAAS,GAAG7G,QAAH,GAAcC,SAAxD,CAAD,CAApB;;IACA,IAAI6G,KAAJ,EAAW;MACP,MAAMC,MAAM,GAAG,EAAf,CADO,CAEP;MACA;;MACA,IAAID,KAAK,CAACvO,MAAN,KAAiB,CAArB,EAAwB;QACpB,MAAMZ,GAAG,GAAGT,UAAU,CAAC4P,KAAK,CAAC,CAAD,CAAN,EAAWlO,MAAX,EAAmB+I,KAAnB,CAAtB;QACAhK,GAAG,IAAIoP,MAAM,CAACxL,IAAP,CAAY5D,GAAZ,CAAP;MACH,CAHD,MAIK;QACD;QACA;QACA;QACA,MAAMqP,SAAS,GAAGF,KAAK,CAACnH,KAAN,EAAlB;;QACA,KAAK,IAAIrH,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG0O,SAAS,CAACzO,MAA9B,EAAsCD,CAAC,EAAvC,EAA2C;UACvC,IAAIqJ,KAAK,IAAIA,KAAK,CAACuD,4BAAD,CAAL,KAAwC,IAArD,EAA2D;YACvD;UACH;;UACD,MAAMvN,GAAG,GAAGT,UAAU,CAAC8P,SAAS,CAAC1O,CAAD,CAAV,EAAeM,MAAf,EAAuB+I,KAAvB,CAAtB;UACAhK,GAAG,IAAIoP,MAAM,CAACxL,IAAP,CAAY5D,GAAZ,CAAP;QACH;MACJ,CApBM,CAqBP;MACA;;;MACA,IAAIoP,MAAM,CAACxO,MAAP,KAAkB,CAAtB,EAAyB;QACrB,MAAMwO,MAAM,CAAC,CAAD,CAAZ;MACH,CAFD,MAGK;QACD,KAAK,IAAIzO,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGyO,MAAM,CAACxO,MAA3B,EAAmCD,CAAC,EAApC,EAAwC;UACpC,MAAMX,GAAG,GAAGoP,MAAM,CAACzO,CAAD,CAAlB;UACAkN,GAAG,CAAClI,uBAAJ,CAA4B,MAAM;YAC9B,MAAM3F,GAAN;UACH,CAFD;QAGH;MACJ;IACJ;EACJ,CAxFuD,CAyFxD;;;EACA,MAAMsP,uBAAuB,GAAG,UAAUtF,KAAV,EAAiB;IAC7C,OAAOgF,cAAc,CAAC,IAAD,EAAOhF,KAAP,EAAc,KAAd,CAArB;EACH,CAFD,CA1FwD,CA6FxD;;;EACA,MAAMuF,8BAA8B,GAAG,UAAUvF,KAAV,EAAiB;IACpD,OAAOgF,cAAc,CAAC,IAAD,EAAOhF,KAAP,EAAc,IAAd,CAArB;EACH,CAFD;;EAGA,SAASwF,uBAAT,CAAiC7E,GAAjC,EAAsCoD,YAAtC,EAAoD;IAChD,IAAI,CAACpD,GAAL,EAAU;MACN,OAAO,KAAP;IACH;;IACD,IAAI8E,iBAAiB,GAAG,IAAxB;;IACA,IAAI1B,YAAY,IAAIA,YAAY,CAACxJ,IAAb,KAAsBjF,SAA1C,EAAqD;MACjDmQ,iBAAiB,GAAG1B,YAAY,CAACxJ,IAAjC;IACH;;IACD,MAAMmL,eAAe,GAAG3B,YAAY,IAAIA,YAAY,CAAC4B,EAArD;IACA,IAAIlT,cAAc,GAAG,IAArB;;IACA,IAAIsR,YAAY,IAAIA,YAAY,CAAC6B,MAAb,KAAwBtQ,SAA5C,EAAuD;MACnD7C,cAAc,GAAGsR,YAAY,CAAC6B,MAA9B;IACH;;IACD,IAAIC,YAAY,GAAG,KAAnB;;IACA,IAAI9B,YAAY,IAAIA,YAAY,CAAC+B,EAAb,KAAoBxQ,SAAxC,EAAmD;MAC/CuQ,YAAY,GAAG9B,YAAY,CAAC+B,EAA5B;IACH;;IACD,IAAI7D,KAAK,GAAGtB,GAAZ;;IACA,OAAOsB,KAAK,IAAI,CAACA,KAAK,CAACzP,cAAN,CAAqBwR,kBAArB,CAAjB,EAA2D;MACvD/B,KAAK,GAAGrE,oBAAoB,CAACqE,KAAD,CAA5B;IACH;;IACD,IAAI,CAACA,KAAD,IAAUtB,GAAG,CAACqD,kBAAD,CAAjB,EAAuC;MACnC;MACA/B,KAAK,GAAGtB,GAAR;IACH;;IACD,IAAI,CAACsB,KAAL,EAAY;MACR,OAAO,KAAP;IACH;;IACD,IAAIA,KAAK,CAACuC,0BAAD,CAAT,EAAuC;MACnC,OAAO,KAAP;IACH;;IACD,MAAMf,iBAAiB,GAAGM,YAAY,IAAIA,YAAY,CAACN,iBAAvD,CA/BgD,CAgChD;IACA;;IACA,MAAMsC,QAAQ,GAAG,EAAjB;IACA,MAAMC,sBAAsB,GAAI/D,KAAK,CAACuC,0BAAD,CAAL,GAAoCvC,KAAK,CAAC+B,kBAAD,CAAzE;IACA,MAAMiC,yBAAyB,GAAIhE,KAAK,CAACvD,UAAU,CAACwF,qBAAD,CAAX,CAAL,GAC/BjC,KAAK,CAACiC,qBAAD,CADT;IAEA,MAAMgC,eAAe,GAAIjE,KAAK,CAACvD,UAAU,CAAC0F,wBAAD,CAAX,CAAL,GACrBnC,KAAK,CAACmC,wBAAD,CADT;IAEA,MAAM+B,wBAAwB,GAAIlE,KAAK,CAACvD,UAAU,CAAC4F,mCAAD,CAAX,CAAL,GAC9BrC,KAAK,CAACqC,mCAAD,CADT;IAEA,IAAI8B,0BAAJ;;IACA,IAAIrC,YAAY,IAAIA,YAAY,CAACsC,OAAjC,EAA0C;MACtCD,0BAA0B,GAAGnE,KAAK,CAACvD,UAAU,CAACqF,YAAY,CAACsC,OAAd,CAAX,CAAL,GACzBpE,KAAK,CAAC8B,YAAY,CAACsC,OAAd,CADT;IAEH;IACD;AACR;AACA;AACA;;;IACQ,SAASC,yBAAT,CAAmClM,OAAnC,EAA4CmM,OAA5C,EAAqD;MACjD,IAAI,CAACtD,gBAAD,IAAqB,OAAO7I,OAAP,KAAmB,QAAxC,IAAoDA,OAAxD,EAAiE;QAC7D;QACA;QACA;QACA,OAAO,CAAC,CAACA,OAAO,CAACoM,OAAjB;MACH;;MACD,IAAI,CAACvD,gBAAD,IAAqB,CAACsD,OAA1B,EAAmC;QAC/B,OAAOnM,OAAP;MACH;;MACD,IAAI,OAAOA,OAAP,KAAmB,SAAvB,EAAkC;QAC9B,OAAO;UAAEoM,OAAO,EAAEpM,OAAX;UAAoBmM,OAAO,EAAE;QAA7B,CAAP;MACH;;MACD,IAAI,CAACnM,OAAL,EAAc;QACV,OAAO;UAAEmM,OAAO,EAAE;QAAX,CAAP;MACH;;MACD,IAAI,OAAOnM,OAAP,KAAmB,QAAnB,IAA+BA,OAAO,CAACmM,OAAR,KAAoB,KAAvD,EAA8D;QAC1D,OAAO,EAAE,GAAGnM,OAAL;UAAcmM,OAAO,EAAE;QAAvB,CAAP;MACH;;MACD,OAAOnM,OAAP;IACH;;IACD,MAAMqM,oBAAoB,GAAG,UAAUnS,IAAV,EAAgB;MACzC;MACA;MACA,IAAIyR,QAAQ,CAACW,UAAb,EAAyB;QACrB;MACH;;MACD,OAAOV,sBAAsB,CAACxL,IAAvB,CAA4BuL,QAAQ,CAAC9O,MAArC,EAA6C8O,QAAQ,CAAC5E,SAAtD,EAAiE4E,QAAQ,CAACS,OAAT,GAAmBjB,8BAAnB,GAAoDD,uBAArH,EAA8IS,QAAQ,CAAC3L,OAAvJ,CAAP;IACH,CAPD;;IAQA,MAAMuM,kBAAkB,GAAG,UAAUrS,IAAV,EAAgB;MACvC;MACA;MACA;MACA,IAAI,CAACA,IAAI,CAACsQ,SAAV,EAAqB;QACjB,MAAMgC,gBAAgB,GAAGzD,oBAAoB,CAAC7O,IAAI,CAAC6M,SAAN,CAA7C;QACA,IAAI0F,eAAJ;;QACA,IAAID,gBAAJ,EAAsB;UAClBC,eAAe,GAAGD,gBAAgB,CAACtS,IAAI,CAACkS,OAAL,GAAenI,QAAf,GAA0BC,SAA3B,CAAlC;QACH;;QACD,MAAMwI,aAAa,GAAGD,eAAe,IAAIvS,IAAI,CAAC2C,MAAL,CAAY4P,eAAZ,CAAzC;;QACA,IAAIC,aAAJ,EAAmB;UACf,KAAK,IAAInQ,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGmQ,aAAa,CAAClQ,MAAlC,EAA0CD,CAAC,EAA3C,EAA+C;YAC3C,MAAMoQ,YAAY,GAAGD,aAAa,CAACnQ,CAAD,CAAlC;;YACA,IAAIoQ,YAAY,KAAKzS,IAArB,EAA2B;cACvBwS,aAAa,CAACE,MAAd,CAAqBrQ,CAArB,EAAwB,CAAxB,EADuB,CAEvB;;cACArC,IAAI,CAACsQ,SAAL,GAAiB,IAAjB;;cACA,IAAIkC,aAAa,CAAClQ,MAAd,KAAyB,CAA7B,EAAgC;gBAC5B;gBACA;gBACAtC,IAAI,CAAC2S,UAAL,GAAkB,IAAlB;gBACA3S,IAAI,CAAC2C,MAAL,CAAY4P,eAAZ,IAA+B,IAA/B;cACH;;cACD;YACH;UACJ;QACJ;MACJ,CA5BsC,CA6BvC;MACA;MACA;;;MACA,IAAI,CAACvS,IAAI,CAAC2S,UAAV,EAAsB;QAClB;MACH;;MACD,OAAOhB,yBAAyB,CAACzL,IAA1B,CAA+BlG,IAAI,CAAC2C,MAApC,EAA4C3C,IAAI,CAAC6M,SAAjD,EAA4D7M,IAAI,CAACkS,OAAL,GAAejB,8BAAf,GAAgDD,uBAA5G,EAAqIhR,IAAI,CAAC8F,OAA1I,CAAP;IACH,CApCD;;IAqCA,MAAM8M,uBAAuB,GAAG,UAAU5S,IAAV,EAAgB;MAC5C,OAAO0R,sBAAsB,CAACxL,IAAvB,CAA4BuL,QAAQ,CAAC9O,MAArC,EAA6C8O,QAAQ,CAAC5E,SAAtD,EAAiE7M,IAAI,CAACJ,MAAtE,EAA8E6R,QAAQ,CAAC3L,OAAvF,CAAP;IACH,CAFD;;IAGA,MAAM+M,qBAAqB,GAAG,UAAU7S,IAAV,EAAgB;MAC1C,OAAO8R,0BAA0B,CAAC5L,IAA3B,CAAgCuL,QAAQ,CAAC9O,MAAzC,EAAiD8O,QAAQ,CAAC5E,SAA1D,EAAqE7M,IAAI,CAACJ,MAA1E,EAAkF6R,QAAQ,CAAC3L,OAA3F,CAAP;IACH,CAFD;;IAGA,MAAMgN,qBAAqB,GAAG,UAAU9S,IAAV,EAAgB;MAC1C,OAAO2R,yBAAyB,CAACzL,IAA1B,CAA+BlG,IAAI,CAAC2C,MAApC,EAA4C3C,IAAI,CAAC6M,SAAjD,EAA4D7M,IAAI,CAACJ,MAAjE,EAAyEI,IAAI,CAAC8F,OAA9E,CAAP;IACH,CAFD;;IAGA,MAAMlE,cAAc,GAAGuP,iBAAiB,GAAGgB,oBAAH,GAA0BS,uBAAlE;IACA,MAAM5Q,YAAY,GAAGmP,iBAAiB,GAAGkB,kBAAH,GAAwBS,qBAA9D;;IACA,MAAMC,6BAA6B,GAAG,UAAU/S,IAAV,EAAgByC,QAAhB,EAA0B;MAC5D,MAAMuQ,cAAc,GAAG,OAAOvQ,QAA9B;MACA,OAASuQ,cAAc,KAAK,UAAnB,IAAiChT,IAAI,CAACb,QAAL,KAAkBsD,QAApD,IACHuQ,cAAc,KAAK,QAAnB,IAA+BhT,IAAI,CAACwQ,gBAAL,KAA0B/N,QAD9D;IAEH,CAJD;;IAKA,MAAMwQ,OAAO,GAAGxD,YAAY,IAAIA,YAAY,CAACyD,IAA7B,GAAoCzD,YAAY,CAACyD,IAAjD,GAAwDH,6BAAxE;IACA,MAAMI,eAAe,GAAGjJ,IAAI,CAACE,UAAU,CAAC,kBAAD,CAAX,CAA5B;;IACA,MAAMgJ,aAAa,GAAG5I,OAAO,CAACJ,UAAU,CAAC,gBAAD,CAAX,CAA7B;;IACA,MAAMiJ,eAAe,GAAG,UAAUC,cAAV,EAA0BC,SAA1B,EAAqCC,gBAArC,EAAuDC,cAAvD,EAAuElC,YAAY,GAAG,KAAtF,EAA6FQ,OAAO,GAAG,KAAvG,EAA8G;MAClI,OAAO,YAAY;QACf,MAAMpP,MAAM,GAAG,QAAQ6H,OAAvB;QACA,IAAIqC,SAAS,GAAGrN,SAAS,CAAC,CAAD,CAAzB;;QACA,IAAIiQ,YAAY,IAAIA,YAAY,CAACiE,iBAAjC,EAAoD;UAChD7G,SAAS,GAAG4C,YAAY,CAACiE,iBAAb,CAA+B7G,SAA/B,CAAZ;QACH;;QACD,IAAIpK,QAAQ,GAAGjD,SAAS,CAAC,CAAD,CAAxB;;QACA,IAAI,CAACiD,QAAL,EAAe;UACX,OAAO6Q,cAAc,CAAClO,KAAf,CAAqB,IAArB,EAA2B5F,SAA3B,CAAP;QACH;;QACD,IAAI4L,MAAM,IAAIyB,SAAS,KAAK,mBAA5B,EAAiD;UAC7C;UACA,OAAOyG,cAAc,CAAClO,KAAf,CAAqB,IAArB,EAA2B5F,SAA3B,CAAP;QACH,CAbc,CAcf;QACA;QACA;;;QACA,IAAImU,aAAa,GAAG,KAApB;;QACA,IAAI,OAAOlR,QAAP,KAAoB,UAAxB,EAAoC;UAChC,IAAI,CAACA,QAAQ,CAAC8N,WAAd,EAA2B;YACvB,OAAO+C,cAAc,CAAClO,KAAf,CAAqB,IAArB,EAA2B5F,SAA3B,CAAP;UACH;;UACDmU,aAAa,GAAG,IAAhB;QACH;;QACD,IAAIvC,eAAe,IAAI,CAACA,eAAe,CAACkC,cAAD,EAAiB7Q,QAAjB,EAA2BE,MAA3B,EAAmCnD,SAAnC,CAAvC,EAAsF;UAClF;QACH;;QACD,MAAMyS,OAAO,GAAGtD,gBAAgB,IAAI,CAAC,CAACyE,aAAtB,IAAuCA,aAAa,CAAC1E,OAAd,CAAsB7B,SAAtB,MAAqC,CAAC,CAA7F;QACA,MAAM/G,OAAO,GAAGkM,yBAAyB,CAACxS,SAAS,CAAC,CAAD,CAAV,EAAeyS,OAAf,CAAzC;QACA,MAAM2B,MAAM,GAAG9N,OAAO,IAClB,OAAOA,OAAP,KAAmB,QADR,IAEXA,OAAO,CAAC8N,MAFG,IAGX,OAAO9N,OAAO,CAAC8N,MAAf,KAA0B,QAHf,GAIT9N,OAAO,CAAC8N,MAJC,GAKT5S,SALN;;QAMA,IAAI4S,MAAM,EAAEC,OAAZ,EAAqB;UACjB;UACA;QACH;;QACD,IAAIV,eAAJ,EAAqB;UACjB;UACA,KAAK,IAAI9Q,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG8Q,eAAe,CAAC7Q,MAApC,EAA4CD,CAAC,EAA7C,EAAiD;YAC7C,IAAIwK,SAAS,KAAKsG,eAAe,CAAC9Q,CAAD,CAAjC,EAAsC;cAClC,IAAI4P,OAAJ,EAAa;gBACT,OAAOqB,cAAc,CAACpN,IAAf,CAAoBvD,MAApB,EAA4BkK,SAA5B,EAAuCpK,QAAvC,EAAiDqD,OAAjD,CAAP;cACH,CAFD,MAGK;gBACD,OAAOwN,cAAc,CAAClO,KAAf,CAAqB,IAArB,EAA2B5F,SAA3B,CAAP;cACH;YACJ;UACJ;QACJ;;QACD,MAAM0S,OAAO,GAAG,CAACpM,OAAD,GAAW,KAAX,GAAmB,OAAOA,OAAP,KAAmB,SAAnB,GAA+B,IAA/B,GAAsCA,OAAO,CAACoM,OAAjF;QACA,MAAMzB,IAAI,GAAG3K,OAAO,IAAI,OAAOA,OAAP,KAAmB,QAA9B,GAAyCA,OAAO,CAAC2K,IAAjD,GAAwD,KAArE;QACA,MAAMhT,IAAI,GAAGyM,IAAI,CAACxM,OAAlB;QACA,IAAI4U,gBAAgB,GAAGzD,oBAAoB,CAAChC,SAAD,CAA3C;;QACA,IAAI,CAACyF,gBAAL,EAAuB;UACnBpD,iBAAiB,CAACrC,SAAD,EAAYsC,iBAAZ,CAAjB;UACAmD,gBAAgB,GAAGzD,oBAAoB,CAAChC,SAAD,CAAvC;QACH;;QACD,MAAM0F,eAAe,GAAGD,gBAAgB,CAACJ,OAAO,GAAGnI,QAAH,GAAcC,SAAtB,CAAxC;QACA,IAAIwI,aAAa,GAAG7P,MAAM,CAAC4P,eAAD,CAA1B;QACA,IAAIH,UAAU,GAAG,KAAjB;;QACA,IAAII,aAAJ,EAAmB;UACf;UACAJ,UAAU,GAAG,IAAb;;UACA,IAAIjU,cAAJ,EAAoB;YAChB,KAAK,IAAIkE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGmQ,aAAa,CAAClQ,MAAlC,EAA0CD,CAAC,EAA3C,EAA+C;cAC3C,IAAI4Q,OAAO,CAACT,aAAa,CAACnQ,CAAD,CAAd,EAAmBI,QAAnB,CAAX,EAAyC;gBACrC;gBACA;cACH;YACJ;UACJ;QACJ,CAXD,MAYK;UACD+P,aAAa,GAAG7P,MAAM,CAAC4P,eAAD,CAAN,GAA0B,EAA1C;QACH;;QACD,IAAInT,MAAJ;QACA,MAAM0U,eAAe,GAAGnR,MAAM,CAACnE,WAAP,CAAmB,MAAnB,CAAxB;QACA,MAAMuV,YAAY,GAAGjF,aAAa,CAACgF,eAAD,CAAlC;;QACA,IAAIC,YAAJ,EAAkB;UACd3U,MAAM,GAAG2U,YAAY,CAAClH,SAAD,CAArB;QACH;;QACD,IAAI,CAACzN,MAAL,EAAa;UACTA,MAAM,GACF0U,eAAe,GACXP,SADJ,IAEKpE,iBAAiB,GAAGA,iBAAiB,CAACtC,SAAD,CAApB,GAAkCA,SAFxD,CADJ;QAIH,CAzFc,CA0Ff;QACA;;;QACA4E,QAAQ,CAAC3L,OAAT,GAAmBA,OAAnB;;QACA,IAAI2K,IAAJ,EAAU;UACN;UACA;UACA;UACAgB,QAAQ,CAAC3L,OAAT,CAAiB2K,IAAjB,GAAwB,KAAxB;QACH;;QACDgB,QAAQ,CAAC9O,MAAT,GAAkBA,MAAlB;QACA8O,QAAQ,CAACS,OAAT,GAAmBA,OAAnB;QACAT,QAAQ,CAAC5E,SAAT,GAAqBA,SAArB;QACA4E,QAAQ,CAACW,UAAT,GAAsBA,UAAtB;QACA,MAAMvR,IAAI,GAAGsQ,iBAAiB,GAAGvC,8BAAH,GAAoC5N,SAAlE,CAvGe,CAwGf;;QACA,IAAIH,IAAJ,EAAU;UACNA,IAAI,CAAC4Q,QAAL,GAAgBA,QAAhB;QACH;;QACD,IAAImC,MAAJ,EAAY;UACR;UACA;UACA;UACAnC,QAAQ,CAAC3L,OAAT,CAAiB8N,MAAjB,GAA0B5S,SAA1B;QACH;;QACD,MAAMhB,IAAI,GAAGvC,IAAI,CAACwE,iBAAL,CAAuB7C,MAAvB,EAA+BqD,QAA/B,EAAyC5B,IAAzC,EAA+C2S,gBAA/C,EAAiEC,cAAjE,CAAb;;QACA,IAAIG,MAAJ,EAAY;UACR;UACAnC,QAAQ,CAAC3L,OAAT,CAAiB8N,MAAjB,GAA0BA,MAA1B;UACAN,cAAc,CAACpN,IAAf,CAAoB0N,MAApB,EAA4B,OAA5B,EAAqC,MAAM;YACvC5T,IAAI,CAACvC,IAAL,CAAUyE,UAAV,CAAqBlC,IAArB;UACH,CAFD,EAEG;YAAEyQ,IAAI,EAAE;UAAR,CAFH;QAGH,CAzHc,CA0Hf;QACA;;;QACAgB,QAAQ,CAAC9O,MAAT,GAAkB,IAAlB,CA5He,CA6Hf;;QACA,IAAI9B,IAAJ,EAAU;UACNA,IAAI,CAAC4Q,QAAL,GAAgB,IAAhB;QACH,CAhIc,CAiIf;QACA;;;QACA,IAAIhB,IAAJ,EAAU;UACN3K,OAAO,CAAC2K,IAAR,GAAe,IAAf;QACH;;QACD,IAAI,EAAE,CAAC9B,gBAAD,IAAqB,OAAO3O,IAAI,CAAC8F,OAAZ,KAAwB,SAA/C,CAAJ,EAA+D;UAC3D;UACA;UACA9F,IAAI,CAAC8F,OAAL,GAAeA,OAAf;QACH;;QACD9F,IAAI,CAAC2C,MAAL,GAAcA,MAAd;QACA3C,IAAI,CAACkS,OAAL,GAAeA,OAAf;QACAlS,IAAI,CAAC6M,SAAL,GAAiBA,SAAjB;;QACA,IAAI8G,aAAJ,EAAmB;UACf;UACA3T,IAAI,CAACwQ,gBAAL,GAAwB/N,QAAxB;QACH;;QACD,IAAI,CAACsP,OAAL,EAAc;UACVS,aAAa,CAAClN,IAAd,CAAmBtF,IAAnB;QACH,CAFD,MAGK;UACDwS,aAAa,CAACwB,OAAd,CAAsBhU,IAAtB;QACH;;QACD,IAAIuR,YAAJ,EAAkB;UACd,OAAO5O,MAAP;QACH;MACJ,CA3JD;IA4JH,CA7JD;;IA8JAgL,KAAK,CAAC+B,kBAAD,CAAL,GAA4B2D,eAAe,CAAC3B,sBAAD,EAAyBvB,yBAAzB,EAAoDvO,cAApD,EAAoEI,YAApE,EAAkFuP,YAAlF,CAA3C;;IACA,IAAIO,0BAAJ,EAAgC;MAC5BnE,KAAK,CAACyC,sBAAD,CAAL,GAAgCiD,eAAe,CAACvB,0BAAD,EAA6BzB,6BAA7B,EAA4DwC,qBAA5D,EAAmF7Q,YAAnF,EAAiGuP,YAAjG,EAA+G,IAA/G,CAA/C;IACH;;IACD5D,KAAK,CAACiC,qBAAD,CAAL,GAA+B,YAAY;MACvC,MAAMjN,MAAM,GAAG,QAAQ6H,OAAvB;MACA,IAAIqC,SAAS,GAAGrN,SAAS,CAAC,CAAD,CAAzB;;MACA,IAAIiQ,YAAY,IAAIA,YAAY,CAACiE,iBAAjC,EAAoD;QAChD7G,SAAS,GAAG4C,YAAY,CAACiE,iBAAb,CAA+B7G,SAA/B,CAAZ;MACH;;MACD,MAAM/G,OAAO,GAAGtG,SAAS,CAAC,CAAD,CAAzB;MACA,MAAM0S,OAAO,GAAG,CAACpM,OAAD,GAAW,KAAX,GAAmB,OAAOA,OAAP,KAAmB,SAAnB,GAA+B,IAA/B,GAAsCA,OAAO,CAACoM,OAAjF;MACA,MAAMzP,QAAQ,GAAGjD,SAAS,CAAC,CAAD,CAA1B;;MACA,IAAI,CAACiD,QAAL,EAAe;QACX,OAAOkP,yBAAyB,CAACvM,KAA1B,CAAgC,IAAhC,EAAsC5F,SAAtC,CAAP;MACH;;MACD,IAAI4R,eAAe,IACf,CAACA,eAAe,CAACO,yBAAD,EAA4BlP,QAA5B,EAAsCE,MAAtC,EAA8CnD,SAA9C,CADpB,EAC8E;QAC1E;MACH;;MACD,MAAM8S,gBAAgB,GAAGzD,oBAAoB,CAAChC,SAAD,CAA7C;MACA,IAAI0F,eAAJ;;MACA,IAAID,gBAAJ,EAAsB;QAClBC,eAAe,GAAGD,gBAAgB,CAACJ,OAAO,GAAGnI,QAAH,GAAcC,SAAtB,CAAlC;MACH;;MACD,MAAMwI,aAAa,GAAGD,eAAe,IAAI5P,MAAM,CAAC4P,eAAD,CAA/C;;MACA,IAAIC,aAAJ,EAAmB;QACf,KAAK,IAAInQ,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGmQ,aAAa,CAAClQ,MAAlC,EAA0CD,CAAC,EAA3C,EAA+C;UAC3C,MAAMoQ,YAAY,GAAGD,aAAa,CAACnQ,CAAD,CAAlC;;UACA,IAAI4Q,OAAO,CAACR,YAAD,EAAehQ,QAAf,CAAX,EAAqC;YACjC+P,aAAa,CAACE,MAAd,CAAqBrQ,CAArB,EAAwB,CAAxB,EADiC,CAEjC;;YACAoQ,YAAY,CAACnC,SAAb,GAAyB,IAAzB;;YACA,IAAIkC,aAAa,CAAClQ,MAAd,KAAyB,CAA7B,EAAgC;cAC5B;cACA;cACAmQ,YAAY,CAACE,UAAb,GAA0B,IAA1B;cACAhQ,MAAM,CAAC4P,eAAD,CAAN,GAA0B,IAA1B,CAJ4B,CAK5B;cACA;cACA;cACA;cACA;;cACA,IAAI,CAACL,OAAD,IAAY,OAAOrF,SAAP,KAAqB,QAArC,EAA+C;gBAC3C,MAAMoH,gBAAgB,GAAGhK,kBAAkB,GAAG,aAArB,GAAqC4C,SAA9D;gBACAlK,MAAM,CAACsR,gBAAD,CAAN,GAA2B,IAA3B;cACH;YACJ;;YACDxB,YAAY,CAAChV,IAAb,CAAkByE,UAAlB,CAA6BuQ,YAA7B;;YACA,IAAIlB,YAAJ,EAAkB;cACd,OAAO5O,MAAP;YACH;;YACD;UACH;QACJ;MACJ,CAnDsC,CAoDvC;MACA;MACA;MACA;;;MACA,OAAOgP,yBAAyB,CAACvM,KAA1B,CAAgC,IAAhC,EAAsC5F,SAAtC,CAAP;IACH,CAzDD;;IA0DAmO,KAAK,CAACmC,wBAAD,CAAL,GAAkC,YAAY;MAC1C,MAAMnN,MAAM,GAAG,QAAQ6H,OAAvB;MACA,IAAIqC,SAAS,GAAGrN,SAAS,CAAC,CAAD,CAAzB;;MACA,IAAIiQ,YAAY,IAAIA,YAAY,CAACiE,iBAAjC,EAAoD;QAChD7G,SAAS,GAAG4C,YAAY,CAACiE,iBAAb,CAA+B7G,SAA/B,CAAZ;MACH;;MACD,MAAMkD,SAAS,GAAG,EAAlB;MACA,MAAMc,KAAK,GAAGqD,cAAc,CAACvR,MAAD,EAASwM,iBAAiB,GAAGA,iBAAiB,CAACtC,SAAD,CAApB,GAAkCA,SAA5D,CAA5B;;MACA,KAAK,IAAIxK,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGwO,KAAK,CAACvO,MAA1B,EAAkCD,CAAC,EAAnC,EAAuC;QACnC,MAAMrC,IAAI,GAAG6Q,KAAK,CAACxO,CAAD,CAAlB;QACA,IAAII,QAAQ,GAAGzC,IAAI,CAACwQ,gBAAL,GAAwBxQ,IAAI,CAACwQ,gBAA7B,GAAgDxQ,IAAI,CAACb,QAApE;QACA4Q,SAAS,CAACzK,IAAV,CAAe7C,QAAf;MACH;;MACD,OAAOsN,SAAP;IACH,CAdD;;IAeApC,KAAK,CAACqC,mCAAD,CAAL,GAA6C,YAAY;MACrD,MAAMrN,MAAM,GAAG,QAAQ6H,OAAvB;MACA,IAAIqC,SAAS,GAAGrN,SAAS,CAAC,CAAD,CAAzB;;MACA,IAAI,CAACqN,SAAL,EAAgB;QACZ,MAAMsH,IAAI,GAAGvN,MAAM,CAACuN,IAAP,CAAYxR,MAAZ,CAAb;;QACA,KAAK,IAAIN,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG8R,IAAI,CAAC7R,MAAzB,EAAiCD,CAAC,EAAlC,EAAsC;UAClC,MAAMiK,IAAI,GAAG6H,IAAI,CAAC9R,CAAD,CAAjB;UACA,MAAM+R,KAAK,GAAGrF,sBAAsB,CAACsF,IAAvB,CAA4B/H,IAA5B,CAAd;UACA,IAAIgI,OAAO,GAAGF,KAAK,IAAIA,KAAK,CAAC,CAAD,CAA5B,CAHkC,CAIlC;UACA;UACA;UACA;;UACA,IAAIE,OAAO,IAAIA,OAAO,KAAK,gBAA3B,EAA6C;YACzC,KAAKtE,mCAAL,EAA0C9J,IAA1C,CAA+C,IAA/C,EAAqDoO,OAArD;UACH;QACJ,CAbW,CAcZ;;;QACA,KAAKtE,mCAAL,EAA0C9J,IAA1C,CAA+C,IAA/C,EAAqD,gBAArD;MACH,CAhBD,MAiBK;QACD,IAAIuJ,YAAY,IAAIA,YAAY,CAACiE,iBAAjC,EAAoD;UAChD7G,SAAS,GAAG4C,YAAY,CAACiE,iBAAb,CAA+B7G,SAA/B,CAAZ;QACH;;QACD,MAAMyF,gBAAgB,GAAGzD,oBAAoB,CAAChC,SAAD,CAA7C;;QACA,IAAIyF,gBAAJ,EAAsB;UAClB,MAAMC,eAAe,GAAGD,gBAAgB,CAACtI,SAAD,CAAxC;UACA,MAAMuK,sBAAsB,GAAGjC,gBAAgB,CAACvI,QAAD,CAA/C;UACA,MAAM8G,KAAK,GAAGlO,MAAM,CAAC4P,eAAD,CAApB;UACA,MAAMiC,YAAY,GAAG7R,MAAM,CAAC4R,sBAAD,CAA3B;;UACA,IAAI1D,KAAJ,EAAW;YACP,MAAM4D,WAAW,GAAG5D,KAAK,CAACnH,KAAN,EAApB;;YACA,KAAK,IAAIrH,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGoS,WAAW,CAACnS,MAAhC,EAAwCD,CAAC,EAAzC,EAA6C;cACzC,MAAMrC,IAAI,GAAGyU,WAAW,CAACpS,CAAD,CAAxB;cACA,IAAII,QAAQ,GAAGzC,IAAI,CAACwQ,gBAAL,GAAwBxQ,IAAI,CAACwQ,gBAA7B,GAAgDxQ,IAAI,CAACb,QAApE;cACA,KAAKyQ,qBAAL,EAA4B1J,IAA5B,CAAiC,IAAjC,EAAuC2G,SAAvC,EAAkDpK,QAAlD,EAA4DzC,IAAI,CAAC8F,OAAjE;YACH;UACJ;;UACD,IAAI0O,YAAJ,EAAkB;YACd,MAAMC,WAAW,GAAGD,YAAY,CAAC9K,KAAb,EAApB;;YACA,KAAK,IAAIrH,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGoS,WAAW,CAACnS,MAAhC,EAAwCD,CAAC,EAAzC,EAA6C;cACzC,MAAMrC,IAAI,GAAGyU,WAAW,CAACpS,CAAD,CAAxB;cACA,IAAII,QAAQ,GAAGzC,IAAI,CAACwQ,gBAAL,GAAwBxQ,IAAI,CAACwQ,gBAA7B,GAAgDxQ,IAAI,CAACb,QAApE;cACA,KAAKyQ,qBAAL,EAA4B1J,IAA5B,CAAiC,IAAjC,EAAuC2G,SAAvC,EAAkDpK,QAAlD,EAA4DzC,IAAI,CAAC8F,OAAjE;YACH;UACJ;QACJ;MACJ;;MACD,IAAIyL,YAAJ,EAAkB;QACd,OAAO,IAAP;MACH;IACJ,CAnDD,CAnXgD,CAuahD;;;IACAvI,qBAAqB,CAAC2E,KAAK,CAAC+B,kBAAD,CAAN,EAA4BgC,sBAA5B,CAArB;IACA1I,qBAAqB,CAAC2E,KAAK,CAACiC,qBAAD,CAAN,EAA+B+B,yBAA/B,CAArB;;IACA,IAAIE,wBAAJ,EAA8B;MAC1B7I,qBAAqB,CAAC2E,KAAK,CAACqC,mCAAD,CAAN,EAA6C6B,wBAA7C,CAArB;IACH;;IACD,IAAID,eAAJ,EAAqB;MACjB5I,qBAAqB,CAAC2E,KAAK,CAACmC,wBAAD,CAAN,EAAkC8B,eAAlC,CAArB;IACH;;IACD,OAAO,IAAP;EACH;;EACD,IAAI8C,OAAO,GAAG,EAAd;;EACA,KAAK,IAAIrS,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGmN,IAAI,CAAClN,MAAzB,EAAiCD,CAAC,EAAlC,EAAsC;IAClCqS,OAAO,CAACrS,CAAD,CAAP,GAAa6O,uBAAuB,CAAC1B,IAAI,CAACnN,CAAD,CAAL,EAAUoN,YAAV,CAApC;EACH;;EACD,OAAOiF,OAAP;AACH;;AACD,SAASR,cAAT,CAAwBvR,MAAxB,EAAgCkK,SAAhC,EAA2C;EACvC,IAAI,CAACA,SAAL,EAAgB;IACZ,MAAM8H,UAAU,GAAG,EAAnB;;IACA,KAAK,IAAIrI,IAAT,IAAiB3J,MAAjB,EAAyB;MACrB,MAAMyR,KAAK,GAAGrF,sBAAsB,CAACsF,IAAvB,CAA4B/H,IAA5B,CAAd;MACA,IAAIgI,OAAO,GAAGF,KAAK,IAAIA,KAAK,CAAC,CAAD,CAA5B;;MACA,IAAIE,OAAO,KAAK,CAACzH,SAAD,IAAcyH,OAAO,KAAKzH,SAA/B,CAAX,EAAsD;QAClD,MAAMgE,KAAK,GAAGlO,MAAM,CAAC2J,IAAD,CAApB;;QACA,IAAIuE,KAAJ,EAAW;UACP,KAAK,IAAIxO,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGwO,KAAK,CAACvO,MAA1B,EAAkCD,CAAC,EAAnC,EAAuC;YACnCsS,UAAU,CAACrP,IAAX,CAAgBuL,KAAK,CAACxO,CAAD,CAArB;UACH;QACJ;MACJ;IACJ;;IACD,OAAOsS,UAAP;EACH;;EACD,IAAIpC,eAAe,GAAG1D,oBAAoB,CAAChC,SAAD,CAA1C;;EACA,IAAI,CAAC0F,eAAL,EAAsB;IAClBrD,iBAAiB,CAACrC,SAAD,CAAjB;IACA0F,eAAe,GAAG1D,oBAAoB,CAAChC,SAAD,CAAtC;EACH;;EACD,MAAM+H,iBAAiB,GAAGjS,MAAM,CAAC4P,eAAe,CAACvI,SAAD,CAAhB,CAAhC;EACA,MAAM6K,gBAAgB,GAAGlS,MAAM,CAAC4P,eAAe,CAACxI,QAAD,CAAhB,CAA/B;;EACA,IAAI,CAAC6K,iBAAL,EAAwB;IACpB,OAAOC,gBAAgB,GAAGA,gBAAgB,CAACnL,KAAjB,EAAH,GAA8B,EAArD;EACH,CAFD,MAGK;IACD,OAAOmL,gBAAgB,GACjBD,iBAAiB,CAACE,MAAlB,CAAyBD,gBAAzB,CADiB,GAEjBD,iBAAiB,CAAClL,KAAlB,EAFN;EAGH;AACJ;;AACD,SAASpB,mBAAT,CAA6B5L,MAA7B,EAAqC6S,GAArC,EAA0C;EACtC,MAAMwF,KAAK,GAAGrY,MAAM,CAAC,OAAD,CAApB;;EACA,IAAIqY,KAAK,IAAIA,KAAK,CAAClO,SAAnB,EAA8B;IAC1B0I,GAAG,CAACrH,WAAJ,CAAgB6M,KAAK,CAAClO,SAAtB,EAAiC,0BAAjC,EAA8DpE,QAAD,IAAc,UAAUuD,IAAV,EAAgBG,IAAhB,EAAsB;MAC7FH,IAAI,CAACiJ,4BAAD,CAAJ,GAAqC,IAArC,CAD6F,CAE7F;MACA;MACA;;MACAxM,QAAQ,IAAIA,QAAQ,CAAC2C,KAAT,CAAeY,IAAf,EAAqBG,IAArB,CAAZ;IACH,CAND;EAOH;AACJ;AAED;AACA;AACA;AACA;;;AACA,SAAS6O,mBAAT,CAA6BtY,MAA7B,EAAqC6S,GAArC,EAA0C;EACtCA,GAAG,CAACrH,WAAJ,CAAgBxL,MAAhB,EAAwB,gBAAxB,EAA2C+F,QAAD,IAAc;IACpD,OAAO,UAAUuD,IAAV,EAAgBG,IAAhB,EAAsB;MACzB+D,IAAI,CAACxM,OAAL,CAAaiE,iBAAb,CAA+B,gBAA/B,EAAiDwE,IAAI,CAAC,CAAD,CAArD;IACH,CAFD;EAGH,CAJD;AAKH;AAED;AACA;AACA;AACA;;;AACA,MAAM8O,UAAU,GAAG7K,UAAU,CAAC,UAAD,CAA7B;;AACA,SAAS8K,UAAT,CAAoB5K,MAApB,EAA4B6K,OAA5B,EAAqCC,UAArC,EAAiDC,UAAjD,EAA6D;EACzD,IAAIrH,SAAS,GAAG,IAAhB;EACA,IAAIsH,WAAW,GAAG,IAAlB;EACAH,OAAO,IAAIE,UAAX;EACAD,UAAU,IAAIC,UAAd;EACA,MAAME,eAAe,GAAG,EAAxB;;EACA,SAASnU,YAAT,CAAsBpB,IAAtB,EAA4B;IACxB,MAAMa,IAAI,GAAGb,IAAI,CAACa,IAAlB;;IACAA,IAAI,CAACsF,IAAL,CAAU,CAAV,IAAe,YAAY;MACvB,OAAOnG,IAAI,CAACJ,MAAL,CAAYwF,KAAZ,CAAkB,IAAlB,EAAwB5F,SAAxB,CAAP;IACH,CAFD;;IAGAqB,IAAI,CAAC8F,QAAL,GAAgBqH,SAAS,CAAC5I,KAAV,CAAgBkF,MAAhB,EAAwBzJ,IAAI,CAACsF,IAA7B,CAAhB;IACA,OAAOnG,IAAP;EACH;;EACD,SAASwV,SAAT,CAAmBxV,IAAnB,EAAyB;IACrB,OAAOsV,WAAW,CAACpP,IAAZ,CAAiBoE,MAAjB,EAAyBtK,IAAI,CAACa,IAAL,CAAU8F,QAAnC,CAAP;EACH;;EACDqH,SAAS,GAAG9F,WAAW,CAACoC,MAAD,EAAS6K,OAAT,EAAmB1S,QAAD,IAAc,UAAUuD,IAAV,EAAgBG,IAAhB,EAAsB;IACzE,IAAI,OAAOA,IAAI,CAAC,CAAD,CAAX,KAAmB,UAAvB,EAAmC;MAC/B,MAAML,OAAO,GAAG;QACZhF,UAAU,EAAEuU,UAAU,KAAK,UADf;QAEZI,KAAK,EAAEJ,UAAU,KAAK,SAAf,IAA4BA,UAAU,KAAK,UAA3C,GAAwDlP,IAAI,CAAC,CAAD,CAAJ,IAAW,CAAnE,GAAuEnF,SAFlE;QAGZmF,IAAI,EAAEA;MAHM,CAAhB;MAKA,MAAMhH,QAAQ,GAAGgH,IAAI,CAAC,CAAD,CAArB;;MACAA,IAAI,CAAC,CAAD,CAAJ,GAAU,SAASuP,KAAT,GAAiB;QACvB,IAAI;UACA,OAAOvW,QAAQ,CAACiG,KAAT,CAAe,IAAf,EAAqB5F,SAArB,CAAP;QACH,CAFD,SAGQ;UACJ;UACA;UACA;UACA;UACA;UACA;UACA;UACA,IAAI,CAACsG,OAAO,CAAChF,UAAb,EAAyB;YACrB,IAAI,OAAOgF,OAAO,CAACa,QAAf,KAA4B,QAAhC,EAA0C;cACtC;cACA;cACA,OAAO4O,eAAe,CAACzP,OAAO,CAACa,QAAT,CAAtB;YACH,CAJD,MAKK,IAAIb,OAAO,CAACa,QAAZ,EAAsB;cACvB;cACA;cACAb,OAAO,CAACa,QAAR,CAAiBsO,UAAjB,IAA+B,IAA/B;YACH;UACJ;QACJ;MACJ,CAzBD;;MA0BA,MAAMjV,IAAI,GAAGmK,gCAAgC,CAACgL,OAAD,EAAUhP,IAAI,CAAC,CAAD,CAAd,EAAmBL,OAAnB,EAA4B1E,YAA5B,EAA0CoU,SAA1C,CAA7C;;MACA,IAAI,CAACxV,IAAL,EAAW;QACP,OAAOA,IAAP;MACH,CApC8B,CAqC/B;;;MACA,MAAM2V,MAAM,GAAG3V,IAAI,CAACa,IAAL,CAAU8F,QAAzB;;MACA,IAAI,OAAOgP,MAAP,KAAkB,QAAtB,EAAgC;QAC5B;QACA;QACAJ,eAAe,CAACI,MAAD,CAAf,GAA0B3V,IAA1B;MACH,CAJD,MAKK,IAAI2V,MAAJ,EAAY;QACb;QACA;QACAA,MAAM,CAACV,UAAD,CAAN,GAAqBjV,IAArB;MACH,CAhD8B,CAiD/B;MACA;;;MACA,IAAI2V,MAAM,IACNA,MAAM,CAACC,GADP,IAEAD,MAAM,CAACE,KAFP,IAGA,OAAOF,MAAM,CAACC,GAAd,KAAsB,UAHtB,IAIA,OAAOD,MAAM,CAACE,KAAd,KAAwB,UAJ5B,EAIwC;QACpC7V,IAAI,CAAC4V,GAAL,GAAWD,MAAM,CAACC,GAAP,CAAWE,IAAX,CAAgBH,MAAhB,CAAX;QACA3V,IAAI,CAAC6V,KAAL,GAAaF,MAAM,CAACE,KAAP,CAAaC,IAAb,CAAkBH,MAAlB,CAAb;MACH;;MACD,IAAI,OAAOA,MAAP,KAAkB,QAAlB,IAA8BA,MAAlC,EAA0C;QACtC,OAAOA,MAAP;MACH;;MACD,OAAO3V,IAAP;IACH,CA/DD,MAgEK;MACD;MACA,OAAOyC,QAAQ,CAAC2C,KAAT,CAAekF,MAAf,EAAuBnE,IAAvB,CAAP;IACH;EACJ,CArEsB,CAAvB;EAsEAmP,WAAW,GAAGpN,WAAW,CAACoC,MAAD,EAAS8K,UAAT,EAAsB3S,QAAD,IAAc,UAAUuD,IAAV,EAAgBG,IAAhB,EAAsB;IAC9E,MAAM4P,EAAE,GAAG5P,IAAI,CAAC,CAAD,CAAf;IACA,IAAInG,IAAJ;;IACA,IAAI,OAAO+V,EAAP,KAAc,QAAlB,EAA4B;MACxB;MACA/V,IAAI,GAAGuV,eAAe,CAACQ,EAAD,CAAtB;IACH,CAHD,MAIK;MACD;MACA/V,IAAI,GAAG+V,EAAE,IAAIA,EAAE,CAACd,UAAD,CAAf,CAFC,CAGD;;MACA,IAAI,CAACjV,IAAL,EAAW;QACPA,IAAI,GAAG+V,EAAP;MACH;IACJ;;IACD,IAAI/V,IAAI,IAAI,OAAOA,IAAI,CAACI,IAAZ,KAAqB,QAAjC,EAA2C;MACvC,IAAIJ,IAAI,CAACE,KAAL,KAAe,cAAf,KACEF,IAAI,CAACe,QAAL,IAAiBf,IAAI,CAACa,IAAL,CAAUC,UAA5B,IAA2Cd,IAAI,CAACW,QAAL,KAAkB,CAD9D,CAAJ,EACsE;QAClE,IAAI,OAAOoV,EAAP,KAAc,QAAlB,EAA4B;UACxB,OAAOR,eAAe,CAACQ,EAAD,CAAtB;QACH,CAFD,MAGK,IAAIA,EAAJ,EAAQ;UACTA,EAAE,CAACd,UAAD,CAAF,GAAiB,IAAjB;QACH,CANiE,CAOlE;;;QACAjV,IAAI,CAACvC,IAAL,CAAUyE,UAAV,CAAqBlC,IAArB;MACH;IACJ,CAZD,MAaK;MACD;MACAyC,QAAQ,CAAC2C,KAAT,CAAekF,MAAf,EAAuBnE,IAAvB;IACH;EACJ,CAhCwB,CAAzB;AAiCH;;AAED,SAAS6P,mBAAT,CAA6BxL,OAA7B,EAAsC+E,GAAtC,EAA2C;EACvC,MAAM;IAAEjE,SAAF;IAAaC;EAAb,IAAuBgE,GAAG,CAAC/G,gBAAJ,EAA7B;;EACA,IAAK,CAAC8C,SAAD,IAAc,CAACC,KAAhB,IAA0B,CAACf,OAAO,CAAC,gBAAD,CAAlC,IAAwD,EAAE,oBAAoBA,OAAtB,CAA5D,EAA4F;IACxF;EACH,CAJsC,CAKvC;;;EACA,MAAMyL,SAAS,GAAG,CACd,mBADc,EAEd,sBAFc,EAGd,iBAHc,EAId,0BAJc,EAKd,wBALc,EAMd,sBANc,EAOd,mBAPc,EAQd,0BARc,CAAlB;EAUA1G,GAAG,CAACrG,cAAJ,CAAmBqG,GAAnB,EAAwB/E,OAAO,CAAC0L,cAAhC,EAAgD,gBAAhD,EAAkE,QAAlE,EAA4ED,SAA5E;AACH;;AAED,SAASE,gBAAT,CAA0B3L,OAA1B,EAAmC+E,GAAnC,EAAwC;EACpC,IAAIrF,IAAI,CAACqF,GAAG,CAAC3H,MAAJ,CAAW,kBAAX,CAAD,CAAR,EAA0C;IACtC;IACA;EACH;;EACD,MAAM;IAAEwO,UAAF;IAAcvH,oBAAd;IAAoC9E,QAApC;IAA8CC,SAA9C;IAAyDC;EAAzD,IAAgFsF,GAAG,CAAC/G,gBAAJ,EAAtF,CALoC,CAMpC;;EACA,KAAK,IAAInG,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG+T,UAAU,CAAC9T,MAA/B,EAAuCD,CAAC,EAAxC,EAA4C;IACxC,MAAMwK,SAAS,GAAGuJ,UAAU,CAAC/T,CAAD,CAA5B;IACA,MAAM+M,cAAc,GAAGvC,SAAS,GAAG7C,SAAnC;IACA,MAAMqF,aAAa,GAAGxC,SAAS,GAAG9C,QAAlC;IACA,MAAMnC,MAAM,GAAGqC,kBAAkB,GAAGmF,cAApC;IACA,MAAME,aAAa,GAAGrF,kBAAkB,GAAGoF,aAA3C;IACAR,oBAAoB,CAAChC,SAAD,CAApB,GAAkC,EAAlC;IACAgC,oBAAoB,CAAChC,SAAD,CAApB,CAAgC7C,SAAhC,IAA6CpC,MAA7C;IACAiH,oBAAoB,CAAChC,SAAD,CAApB,CAAgC9C,QAAhC,IAA4CuF,aAA5C;EACH;;EACD,MAAM+G,YAAY,GAAG7L,OAAO,CAAC,aAAD,CAA5B;;EACA,IAAI,CAAC6L,YAAD,IAAiB,CAACA,YAAY,CAACxP,SAAnC,EAA8C;IAC1C;EACH;;EACD0I,GAAG,CAACvH,gBAAJ,CAAqBwC,OAArB,EAA8B+E,GAA9B,EAAmC,CAAC8G,YAAY,IAAIA,YAAY,CAACxP,SAA9B,CAAnC;EACA,OAAO,IAAP;AACH;;AACD,SAASyP,UAAT,CAAoB5Z,MAApB,EAA4B6S,GAA5B,EAAiC;EAC7BA,GAAG,CAACjH,mBAAJ,CAAwB5L,MAAxB,EAAgC6S,GAAhC;AACH;AAED;AACA;AACA;AACA;;;AACA,SAASxG,gBAAT,CAA0BpG,MAA1B,EAAkCwK,YAAlC,EAAgDoJ,gBAAhD,EAAkE;EAC9D,IAAI,CAACA,gBAAD,IAAqBA,gBAAgB,CAACjU,MAAjB,KAA4B,CAArD,EAAwD;IACpD,OAAO6K,YAAP;EACH;;EACD,MAAMqJ,GAAG,GAAGD,gBAAgB,CAACE,MAAjB,CAAyBC,EAAD,IAAQA,EAAE,CAAC/T,MAAH,KAAcA,MAA9C,CAAZ;;EACA,IAAI,CAAC6T,GAAD,IAAQA,GAAG,CAAClU,MAAJ,KAAe,CAA3B,EAA8B;IAC1B,OAAO6K,YAAP;EACH;;EACD,MAAMwJ,sBAAsB,GAAGH,GAAG,CAAC,CAAD,CAAH,CAAOD,gBAAtC;EACA,OAAOpJ,YAAY,CAACsJ,MAAb,CAAqBG,EAAD,IAAQD,sBAAsB,CAACjI,OAAvB,CAA+BkI,EAA/B,MAAuC,CAAC,CAApE,CAAP;AACH;;AACD,SAASC,uBAAT,CAAiClU,MAAjC,EAAyCwK,YAAzC,EAAuDoJ,gBAAvD,EAAyE1P,SAAzE,EAAoF;EAChF;EACA;EACA,IAAI,CAAClE,MAAL,EAAa;IACT;EACH;;EACD,MAAMmU,kBAAkB,GAAG/N,gBAAgB,CAACpG,MAAD,EAASwK,YAAT,EAAuBoJ,gBAAvB,CAA3C;EACAtO,iBAAiB,CAACtF,MAAD,EAASmU,kBAAT,EAA6BjQ,SAA7B,CAAjB;AACH;AACD;AACA;AACA;AACA;;;AACA,SAASkQ,eAAT,CAAyBpU,MAAzB,EAAiC;EAC7B,OAAOiE,MAAM,CAACoQ,mBAAP,CAA2BrU,MAA3B,EACF8T,MADE,CACM5Z,IAAD,IAAUA,IAAI,CAACoa,UAAL,CAAgB,IAAhB,KAAyBpa,IAAI,CAACyF,MAAL,GAAc,CADtD,EAEF4U,GAFE,CAEGra,IAAD,IAAUA,IAAI,CAACsa,SAAL,CAAe,CAAf,CAFZ,CAAP;AAGH;;AACD,SAASC,uBAAT,CAAiC7H,GAAjC,EAAsC/E,OAAtC,EAA+C;EAC3C,IAAIY,MAAM,IAAI,CAACG,KAAf,EAAsB;IAClB;EACH;;EACD,IAAIrB,IAAI,CAACqF,GAAG,CAAC3H,MAAJ,CAAW,aAAX,CAAD,CAAR,EAAqC;IACjC;IACA;EACH;;EACD,MAAM2O,gBAAgB,GAAG/L,OAAO,CAAC,6BAAD,CAAhC,CAR2C,CAS3C;;EACA,IAAI6M,YAAY,GAAG,EAAnB;;EACA,IAAI/L,SAAJ,EAAe;IACX,MAAMf,cAAc,GAAGD,MAAvB;IACA+M,YAAY,GAAGA,YAAY,CAACvC,MAAb,CAAoB,CAC/B,UAD+B,EAE/B,YAF+B,EAG/B,SAH+B,EAI/B,aAJ+B,EAK/B,iBAL+B,EAM/B,kBAN+B,EAO/B,qBAP+B,EAQ/B,kBAR+B,EAS/B,mBAT+B,EAU/B,oBAV+B,EAW/B,QAX+B,CAApB,CAAf;IAaA,MAAMwC,qBAAqB,GAAGhJ,IAAI,KAC5B,CAAC;MAAE3L,MAAM,EAAE4H,cAAV;MAA0BgM,gBAAgB,EAAE,CAAC,OAAD;IAA5C,CAAD,CAD4B,GAE5B,EAFN,CAfW,CAkBX;IACA;;IACAM,uBAAuB,CAACtM,cAAD,EAAiBwM,eAAe,CAACxM,cAAD,CAAhC,EAAkDgM,gBAAgB,GAAGA,gBAAgB,CAACzB,MAAjB,CAAwBwC,qBAAxB,CAAH,GAAoDf,gBAAtH,EAAwIjN,oBAAoB,CAACiB,cAAD,CAA5J,CAAvB;EACH;;EACD8M,YAAY,GAAGA,YAAY,CAACvC,MAAb,CAAoB,CAC/B,gBAD+B,EAE/B,2BAF+B,EAG/B,UAH+B,EAI/B,YAJ+B,EAK/B,kBAL+B,EAM/B,aAN+B,EAO/B,gBAP+B,EAQ/B,WAR+B,EAS/B,WAT+B,CAApB,CAAf;;EAWA,KAAK,IAAIzS,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGgV,YAAY,CAAC/U,MAAjC,EAAyCD,CAAC,EAA1C,EAA8C;IAC1C,MAAMM,MAAM,GAAG6H,OAAO,CAAC6M,YAAY,CAAChV,CAAD,CAAb,CAAtB;IACAM,MAAM,IACFA,MAAM,CAACkE,SADX,IAEIgQ,uBAAuB,CAAClU,MAAM,CAACkE,SAAR,EAAmBkQ,eAAe,CAACpU,MAAM,CAACkE,SAAR,CAAlC,EAAsD0P,gBAAtD,CAF3B;EAGH;AACJ;AAED;AACA;AACA;AACA;;;AACA,SAASgB,YAAT,CAAsBrN,IAAtB,EAA4B;EACxBA,IAAI,CAACnM,YAAL,CAAkB,QAAlB,EAA6BrB,MAAD,IAAY;IACpC,MAAM8a,WAAW,GAAG9a,MAAM,CAACwN,IAAI,CAACtN,UAAL,CAAgB,aAAhB,CAAD,CAA1B;;IACA,IAAI4a,WAAJ,EAAiB;MACbA,WAAW;IACd;EACJ,CALD;;EAMAtN,IAAI,CAACnM,YAAL,CAAkB,QAAlB,EAA6BrB,MAAD,IAAY;IACpC,MAAMuO,GAAG,GAAG,KAAZ;IACA,MAAMwM,KAAK,GAAG,OAAd;IACAvC,UAAU,CAACxY,MAAD,EAASuO,GAAT,EAAcwM,KAAd,EAAqB,SAArB,CAAV;IACAvC,UAAU,CAACxY,MAAD,EAASuO,GAAT,EAAcwM,KAAd,EAAqB,UAArB,CAAV;IACAvC,UAAU,CAACxY,MAAD,EAASuO,GAAT,EAAcwM,KAAd,EAAqB,WAArB,CAAV;EACH,CAND;;EAOAvN,IAAI,CAACnM,YAAL,CAAkB,uBAAlB,EAA4CrB,MAAD,IAAY;IACnDwY,UAAU,CAACxY,MAAD,EAAS,SAAT,EAAoB,QAApB,EAA8B,gBAA9B,CAAV;IACAwY,UAAU,CAACxY,MAAD,EAAS,YAAT,EAAuB,WAAvB,EAAoC,gBAApC,CAAV;IACAwY,UAAU,CAACxY,MAAD,EAAS,eAAT,EAA0B,cAA1B,EAA0C,gBAA1C,CAAV;EACH,CAJD;;EAKAwN,IAAI,CAACnM,YAAL,CAAkB,UAAlB,EAA8B,CAACrB,MAAD,EAASwN,IAAT,KAAkB;IAC5C,MAAMwN,eAAe,GAAG,CAAC,OAAD,EAAU,QAAV,EAAoB,SAApB,CAAxB;;IACA,KAAK,IAAIrV,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGqV,eAAe,CAACpV,MAApC,EAA4CD,CAAC,EAA7C,EAAiD;MAC7C,MAAMxF,IAAI,GAAG6a,eAAe,CAACrV,CAAD,CAA5B;MACA6F,WAAW,CAACxL,MAAD,EAASG,IAAT,EAAe,CAAC4F,QAAD,EAAWmF,MAAX,EAAmB/K,IAAnB,KAA4B;QAClD,OAAO,UAAU8a,CAAV,EAAaxR,IAAb,EAAmB;UACtB,OAAO+D,IAAI,CAACxM,OAAL,CAAa+B,GAAb,CAAiBgD,QAAjB,EAA2B/F,MAA3B,EAAmCyJ,IAAnC,EAAyCtJ,IAAzC,CAAP;QACH,CAFD;MAGH,CAJU,CAAX;IAKH;EACJ,CAVD;;EAWAqN,IAAI,CAACnM,YAAL,CAAkB,aAAlB,EAAiC,CAACrB,MAAD,EAASwN,IAAT,EAAeqF,GAAf,KAAuB;IACpD+G,UAAU,CAAC5Z,MAAD,EAAS6S,GAAT,CAAV;IACA4G,gBAAgB,CAACzZ,MAAD,EAAS6S,GAAT,CAAhB,CAFoD,CAGpD;;IACA,MAAMqI,yBAAyB,GAAGlb,MAAM,CAAC,2BAAD,CAAxC;;IACA,IAAIkb,yBAAyB,IAAIA,yBAAyB,CAAC/Q,SAA3D,EAAsE;MAClE0I,GAAG,CAACvH,gBAAJ,CAAqBtL,MAArB,EAA6B6S,GAA7B,EAAkC,CAACqI,yBAAyB,CAAC/Q,SAA3B,CAAlC;IACH;EACJ,CARD;;EASAqD,IAAI,CAACnM,YAAL,CAAkB,kBAAlB,EAAsC,CAACrB,MAAD,EAASwN,IAAT,EAAeqF,GAAf,KAAuB;IACzD1G,UAAU,CAAC,kBAAD,CAAV;IACAA,UAAU,CAAC,wBAAD,CAAV;EACH,CAHD;;EAIAqB,IAAI,CAACnM,YAAL,CAAkB,sBAAlB,EAA0C,CAACrB,MAAD,EAASwN,IAAT,EAAeqF,GAAf,KAAuB;IAC7D1G,UAAU,CAAC,sBAAD,CAAV;EACH,CAFD;;EAGAqB,IAAI,CAACnM,YAAL,CAAkB,YAAlB,EAAgC,CAACrB,MAAD,EAASwN,IAAT,EAAeqF,GAAf,KAAuB;IACnD1G,UAAU,CAAC,YAAD,CAAV;EACH,CAFD;;EAGAqB,IAAI,CAACnM,YAAL,CAAkB,aAAlB,EAAiC,CAACrB,MAAD,EAASwN,IAAT,EAAeqF,GAAf,KAAuB;IACpD6H,uBAAuB,CAAC7H,GAAD,EAAM7S,MAAN,CAAvB;EACH,CAFD;;EAGAwN,IAAI,CAACnM,YAAL,CAAkB,gBAAlB,EAAoC,CAACrB,MAAD,EAASwN,IAAT,EAAeqF,GAAf,KAAuB;IACvDyG,mBAAmB,CAACtZ,MAAD,EAAS6S,GAAT,CAAnB;EACH,CAFD;;EAGArF,IAAI,CAACnM,YAAL,CAAkB,KAAlB,EAAyB,CAACrB,MAAD,EAASwN,IAAT,KAAkB;IACvC;IACA2N,QAAQ,CAACnb,MAAD,CAAR;IACA,MAAMob,QAAQ,GAAG1N,UAAU,CAAC,SAAD,CAA3B;IACA,MAAM2N,QAAQ,GAAG3N,UAAU,CAAC,SAAD,CAA3B;IACA,MAAM4N,YAAY,GAAG5N,UAAU,CAAC,aAAD,CAA/B;IACA,MAAM6N,aAAa,GAAG7N,UAAU,CAAC,cAAD,CAAhC;IACA,MAAM8N,OAAO,GAAG9N,UAAU,CAAC,QAAD,CAA1B;IACA,MAAM+N,0BAA0B,GAAG/N,UAAU,CAAC,yBAAD,CAA7C;;IACA,SAASyN,QAAT,CAAkBvN,MAAlB,EAA0B;MACtB,MAAM8N,cAAc,GAAG9N,MAAM,CAAC,gBAAD,CAA7B;;MACA,IAAI,CAAC8N,cAAL,EAAqB;QACjB;QACA;MACH;;MACD,MAAMC,uBAAuB,GAAGD,cAAc,CAACvR,SAA/C;;MACA,SAASyR,eAAT,CAAyB3V,MAAzB,EAAiC;QAC7B,OAAOA,MAAM,CAACmV,QAAD,CAAb;MACH;;MACD,IAAIS,cAAc,GAAGF,uBAAuB,CAACxO,8BAAD,CAA5C;MACA,IAAI2O,iBAAiB,GAAGH,uBAAuB,CAACvO,iCAAD,CAA/C;;MACA,IAAI,CAACyO,cAAL,EAAqB;QACjB,MAAMX,yBAAyB,GAAGtN,MAAM,CAAC,2BAAD,CAAxC;;QACA,IAAIsN,yBAAJ,EAA+B;UAC3B,MAAMa,kCAAkC,GAAGb,yBAAyB,CAAC/Q,SAArE;UACA0R,cAAc,GAAGE,kCAAkC,CAAC5O,8BAAD,CAAnD;UACA2O,iBAAiB,GAAGC,kCAAkC,CAAC3O,iCAAD,CAAtD;QACH;MACJ;;MACD,MAAM4O,kBAAkB,GAAG,kBAA3B;MACA,MAAMC,SAAS,GAAG,WAAlB;;MACA,SAASvX,YAAT,CAAsBpB,IAAtB,EAA4B;QACxB,MAAMa,IAAI,GAAGb,IAAI,CAACa,IAAlB;QACA,MAAM8B,MAAM,GAAG9B,IAAI,CAAC8B,MAApB;QACAA,MAAM,CAACsV,aAAD,CAAN,GAAwB,KAAxB;QACAtV,MAAM,CAACwV,0BAAD,CAAN,GAAqC,KAArC,CAJwB,CAKxB;;QACA,MAAMvM,QAAQ,GAAGjJ,MAAM,CAACqV,YAAD,CAAvB;;QACA,IAAI,CAACO,cAAL,EAAqB;UACjBA,cAAc,GAAG5V,MAAM,CAACkH,8BAAD,CAAvB;UACA2O,iBAAiB,GAAG7V,MAAM,CAACmH,iCAAD,CAA1B;QACH;;QACD,IAAI8B,QAAJ,EAAc;UACV4M,iBAAiB,CAACtS,IAAlB,CAAuBvD,MAAvB,EAA+B+V,kBAA/B,EAAmD9M,QAAnD;QACH;;QACD,MAAMgN,WAAW,GAAIjW,MAAM,CAACqV,YAAD,CAAN,GAAuB,MAAM;UAC9C,IAAIrV,MAAM,CAACkW,UAAP,KAAsBlW,MAAM,CAACmW,IAAjC,EAAuC;YACnC;YACA;YACA,IAAI,CAACjY,IAAI,CAACgT,OAAN,IAAiBlR,MAAM,CAACsV,aAAD,CAAvB,IAA0CjY,IAAI,CAACE,KAAL,KAAeyY,SAA7D,EAAwE;cACpE;cACA;cACA;cACA;cACA;cACA;cACA;cACA,MAAMI,SAAS,GAAGpW,MAAM,CAACuH,IAAI,CAACtN,UAAL,CAAgB,WAAhB,CAAD,CAAxB;;cACA,IAAI+F,MAAM,CAACqW,MAAP,KAAkB,CAAlB,IAAuBD,SAAvB,IAAoCA,SAAS,CAACzW,MAAV,GAAmB,CAA3D,EAA8D;gBAC1D,MAAM2W,SAAS,GAAGjZ,IAAI,CAACJ,MAAvB;;gBACAI,IAAI,CAACJ,MAAL,GAAc,YAAY;kBACtB;kBACA;kBACA,MAAMmZ,SAAS,GAAGpW,MAAM,CAACuH,IAAI,CAACtN,UAAL,CAAgB,WAAhB,CAAD,CAAxB;;kBACA,KAAK,IAAIyF,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG0W,SAAS,CAACzW,MAA9B,EAAsCD,CAAC,EAAvC,EAA2C;oBACvC,IAAI0W,SAAS,CAAC1W,CAAD,CAAT,KAAiBrC,IAArB,EAA2B;sBACvB+Y,SAAS,CAACrG,MAAV,CAAiBrQ,CAAjB,EAAoB,CAApB;oBACH;kBACJ;;kBACD,IAAI,CAACxB,IAAI,CAACgT,OAAN,IAAiB7T,IAAI,CAACE,KAAL,KAAeyY,SAApC,EAA+C;oBAC3CM,SAAS,CAAC/S,IAAV,CAAelG,IAAf;kBACH;gBACJ,CAZD;;gBAaA+Y,SAAS,CAACzT,IAAV,CAAetF,IAAf;cACH,CAhBD,MAiBK;gBACDA,IAAI,CAACJ,MAAL;cACH;YACJ,CA7BD,MA8BK,IAAI,CAACiB,IAAI,CAACgT,OAAN,IAAiBlR,MAAM,CAACsV,aAAD,CAAN,KAA0B,KAA/C,EAAsD;cACvD;cACAtV,MAAM,CAACwV,0BAAD,CAAN,GAAqC,IAArC;YACH;UACJ;QACJ,CAvCD;;QAwCAI,cAAc,CAACrS,IAAf,CAAoBvD,MAApB,EAA4B+V,kBAA5B,EAAgDE,WAAhD;QACA,MAAMM,UAAU,GAAGvW,MAAM,CAACmV,QAAD,CAAzB;;QACA,IAAI,CAACoB,UAAL,EAAiB;UACbvW,MAAM,CAACmV,QAAD,CAAN,GAAmB9X,IAAnB;QACH;;QACDmZ,UAAU,CAAC/T,KAAX,CAAiBzC,MAAjB,EAAyB9B,IAAI,CAACsF,IAA9B;QACAxD,MAAM,CAACsV,aAAD,CAAN,GAAwB,IAAxB;QACA,OAAOjY,IAAP;MACH;;MACD,SAASoZ,mBAAT,GAA+B,CAAG;;MAClC,SAAS5D,SAAT,CAAmBxV,IAAnB,EAAyB;QACrB,MAAMa,IAAI,GAAGb,IAAI,CAACa,IAAlB,CADqB,CAErB;QACA;;QACAA,IAAI,CAACgT,OAAL,GAAe,IAAf;QACA,OAAOwF,WAAW,CAACjU,KAAZ,CAAkBvE,IAAI,CAAC8B,MAAvB,EAA+B9B,IAAI,CAACsF,IAApC,CAAP;MACH;;MACD,MAAMmT,UAAU,GAAGpR,WAAW,CAACmQ,uBAAD,EAA0B,MAA1B,EAAkC,MAAM,UAAUrS,IAAV,EAAgBG,IAAhB,EAAsB;QACxFH,IAAI,CAAC+R,QAAD,CAAJ,GAAiB5R,IAAI,CAAC,CAAD,CAAJ,IAAW,KAA5B;QACAH,IAAI,CAACkS,OAAD,CAAJ,GAAgB/R,IAAI,CAAC,CAAD,CAApB;QACA,OAAOmT,UAAU,CAAClU,KAAX,CAAiBY,IAAjB,EAAuBG,IAAvB,CAAP;MACH,CAJ6B,CAA9B;MAKA,MAAMoT,qBAAqB,GAAG,qBAA9B;MACA,MAAMC,iBAAiB,GAAGpP,UAAU,CAAC,mBAAD,CAApC;MACA,MAAMqP,mBAAmB,GAAGrP,UAAU,CAAC,qBAAD,CAAtC;MACA,MAAM+O,UAAU,GAAGjR,WAAW,CAACmQ,uBAAD,EAA0B,MAA1B,EAAkC,MAAM,UAAUrS,IAAV,EAAgBG,IAAhB,EAAsB;QACxF,IAAI+D,IAAI,CAACxM,OAAL,CAAa+b,mBAAb,MAAsC,IAA1C,EAAgD;UAC5C;UACA;UACA;UACA,OAAON,UAAU,CAAC/T,KAAX,CAAiBY,IAAjB,EAAuBG,IAAvB,CAAP;QACH;;QACD,IAAIH,IAAI,CAAC+R,QAAD,CAAR,EAAoB;UAChB;UACA,OAAOoB,UAAU,CAAC/T,KAAX,CAAiBY,IAAjB,EAAuBG,IAAvB,CAAP;QACH,CAHD,MAIK;UACD,MAAML,OAAO,GAAG;YACZnD,MAAM,EAAEqD,IADI;YAEZ0T,GAAG,EAAE1T,IAAI,CAACkS,OAAD,CAFG;YAGZpX,UAAU,EAAE,KAHA;YAIZqF,IAAI,EAAEA,IAJM;YAKZ0N,OAAO,EAAE;UALG,CAAhB;UAOA,MAAM7T,IAAI,GAAGmK,gCAAgC,CAACoP,qBAAD,EAAwBH,mBAAxB,EAA6CtT,OAA7C,EAAsD1E,YAAtD,EAAoEoU,SAApE,CAA7C;;UACA,IAAIxP,IAAI,IACJA,IAAI,CAACmS,0BAAD,CAAJ,KAAqC,IADrC,IAEA,CAACrS,OAAO,CAAC+N,OAFT,IAGA7T,IAAI,CAACE,KAAL,KAAeyY,SAHnB,EAG8B;YAC1B;YACA;YACA;YACA3Y,IAAI,CAACJ,MAAL;UACH;QACJ;MACJ,CA9B6B,CAA9B;MA+BA,MAAMyZ,WAAW,GAAGnR,WAAW,CAACmQ,uBAAD,EAA0B,OAA1B,EAAmC,MAAM,UAAUrS,IAAV,EAAgBG,IAAhB,EAAsB;QAC1F,MAAMnG,IAAI,GAAGsY,eAAe,CAACtS,IAAD,CAA5B;;QACA,IAAIhG,IAAI,IAAI,OAAOA,IAAI,CAACI,IAAZ,IAAoB,QAAhC,EAA0C;UACtC;UACA;UACA;UACA;UACA,IAAIJ,IAAI,CAACe,QAAL,IAAiB,IAAjB,IAA0Bf,IAAI,CAACa,IAAL,IAAab,IAAI,CAACa,IAAL,CAAUgT,OAArD,EAA+D;YAC3D;UACH;;UACD7T,IAAI,CAACvC,IAAL,CAAUyE,UAAV,CAAqBlC,IAArB;QACH,CATD,MAUK,IAAIkK,IAAI,CAACxM,OAAL,CAAa8b,iBAAb,MAAoC,IAAxC,EAA8C;UAC/C;UACA,OAAOH,WAAW,CAACjU,KAAZ,CAAkBY,IAAlB,EAAwBG,IAAxB,CAAP;QACH,CAfyF,CAgB1F;QACA;QACA;;MACH,CAnB8B,CAA/B;IAoBH;EACJ,CAlKD;;EAmKA+D,IAAI,CAACnM,YAAL,CAAkB,aAAlB,EAAkCrB,MAAD,IAAY;IACzC;IACA,IAAIA,MAAM,CAAC,WAAD,CAAN,IAAuBA,MAAM,CAAC,WAAD,CAAN,CAAoBid,WAA/C,EAA4D;MACxDjP,cAAc,CAAChO,MAAM,CAAC,WAAD,CAAN,CAAoBid,WAArB,EAAkC,CAAC,oBAAD,EAAuB,eAAvB,CAAlC,CAAd;IACH;EACJ,CALD;;EAMAzP,IAAI,CAACnM,YAAL,CAAkB,uBAAlB,EAA2C,CAACrB,MAAD,EAASwN,IAAT,KAAkB;IACzD;IACA,SAAS0P,2BAAT,CAAqCtF,OAArC,EAA8C;MAC1C,OAAO,UAAUuF,CAAV,EAAa;QAChB,MAAMC,UAAU,GAAG5F,cAAc,CAACxX,MAAD,EAAS4X,OAAT,CAAjC;QACAwF,UAAU,CAACC,OAAX,CAAoB1Z,SAAD,IAAe;UAC9B;UACA;UACA,MAAM2Z,qBAAqB,GAAGtd,MAAM,CAAC,uBAAD,CAApC;;UACA,IAAIsd,qBAAJ,EAA2B;YACvB,MAAMC,GAAG,GAAG,IAAID,qBAAJ,CAA0B1F,OAA1B,EAAmC;cAC3C4F,OAAO,EAAEL,CAAC,CAACK,OADgC;cAE3CC,MAAM,EAAEN,CAAC,CAACO;YAFiC,CAAnC,CAAZ;YAIA/Z,SAAS,CAACT,MAAV,CAAiBqa,GAAjB;UACH;QACJ,CAXD;MAYH,CAdD;IAeH;;IACD,IAAIvd,MAAM,CAAC,uBAAD,CAAV,EAAqC;MACjCwN,IAAI,CAACE,UAAU,CAAC,kCAAD,CAAX,CAAJ,GACIwP,2BAA2B,CAAC,oBAAD,CAD/B;MAEA1P,IAAI,CAACE,UAAU,CAAC,yBAAD,CAAX,CAAJ,GACIwP,2BAA2B,CAAC,kBAAD,CAD/B;IAEH;EACJ,CAzBD;;EA0BA1P,IAAI,CAACnM,YAAL,CAAkB,gBAAlB,EAAoC,CAACrB,MAAD,EAASwN,IAAT,EAAeqF,GAAf,KAAuB;IACvDyF,mBAAmB,CAACtY,MAAD,EAAS6S,GAAT,CAAnB;EACH,CAFD;AAGH;;AAED,SAAS8K,YAAT,CAAsBnQ,IAAtB,EAA4B;EACxBA,IAAI,CAACnM,YAAL,CAAkB,kBAAlB,EAAsC,CAACrB,MAAD,EAASwN,IAAT,EAAeqF,GAAf,KAAuB;IACzD,MAAM7G,8BAA8B,GAAG9B,MAAM,CAACwC,wBAA9C;IACA,MAAMX,oBAAoB,GAAG7B,MAAM,CAACyC,cAApC;;IACA,SAASiR,sBAAT,CAAgCjO,GAAhC,EAAqC;MACjC,IAAIA,GAAG,IAAIA,GAAG,CAAC3F,QAAJ,KAAiBE,MAAM,CAACC,SAAP,CAAiBH,QAA7C,EAAuD;QACnD,MAAM4G,SAAS,GAAGjB,GAAG,CAAC7N,WAAJ,IAAmB6N,GAAG,CAAC7N,WAAJ,CAAgB3B,IAArD;QACA,OAAO,CAACyQ,SAAS,GAAGA,SAAH,GAAe,EAAzB,IAA+B,IAA/B,GAAsCiN,IAAI,CAACC,SAAL,CAAenO,GAAf,CAA7C;MACH;;MACD,OAAOA,GAAG,GAAGA,GAAG,CAAC3F,QAAJ,EAAH,GAAoBE,MAAM,CAACC,SAAP,CAAiBH,QAAjB,CAA0BR,IAA1B,CAA+BmG,GAA/B,CAA9B;IACH;;IACD,MAAMzP,UAAU,GAAG2S,GAAG,CAAC3H,MAAvB;IACA,MAAM6S,sBAAsB,GAAG,EAA/B;IACA,MAAMC,yCAAyC,GAAGhe,MAAM,CAACE,UAAU,CAAC,6CAAD,CAAX,CAAN,KAAsE,KAAxH;;IACA,MAAMoK,aAAa,GAAGpK,UAAU,CAAC,SAAD,CAAhC;;IACA,MAAMqK,UAAU,GAAGrK,UAAU,CAAC,MAAD,CAA7B;;IACA,MAAM+d,aAAa,GAAG,mBAAtB;;IACApL,GAAG,CAAC7H,gBAAJ,GAAwBmS,CAAD,IAAO;MAC1B,IAAItK,GAAG,CAACxH,iBAAJ,EAAJ,EAA6B;QACzB,MAAMqS,SAAS,GAAGP,CAAC,IAAIA,CAAC,CAACO,SAAzB;;QACA,IAAIA,SAAJ,EAAe;UACXQ,OAAO,CAAC/a,KAAR,CAAc,8BAAd,EAA8Cua,SAAS,YAAY7c,KAArB,GAA6B6c,SAAS,CAACrO,OAAvC,GAAiDqO,SAA/F,EAA0G,SAA1G,EAAqHP,CAAC,CAACpc,IAAF,CAAOZ,IAA5H,EAAkI,SAAlI,EAA6Igd,CAAC,CAAC7Z,IAAF,IAAU6Z,CAAC,CAAC7Z,IAAF,CAAOZ,MAA9J,EAAsK,UAAtK,EAAkLgb,SAAlL,EAA6LA,SAAS,YAAY7c,KAArB,GAA6B6c,SAAS,CAACS,KAAvC,GAA+C7Z,SAA5O;QACH,CAFD,MAGK;UACD4Z,OAAO,CAAC/a,KAAR,CAAcga,CAAd;QACH;MACJ;IACJ,CAVD;;IAWAtK,GAAG,CAAC5H,kBAAJ,GAAyB,MAAM;MAC3B,OAAO8S,sBAAsB,CAACnY,MAA9B,EAAsC;QAClC,MAAMwY,oBAAoB,GAAGL,sBAAsB,CAACM,KAAvB,EAA7B;;QACA,IAAI;UACAD,oBAAoB,CAACrd,IAArB,CAA0B8B,UAA1B,CAAqC,MAAM;YACvC,IAAIub,oBAAoB,CAACE,aAAzB,EAAwC;cACpC,MAAMF,oBAAoB,CAACV,SAA3B;YACH;;YACD,MAAMU,oBAAN;UACH,CALD;QAMH,CAPD,CAQA,OAAOjb,KAAP,EAAc;UACVob,wBAAwB,CAACpb,KAAD,CAAxB;QACH;MACJ;IACJ,CAfD;;IAgBA,MAAMqb,0CAA0C,GAAGte,UAAU,CAAC,kCAAD,CAA7D;;IACA,SAASqe,wBAAT,CAAkCpB,CAAlC,EAAqC;MACjCtK,GAAG,CAAC7H,gBAAJ,CAAqBmS,CAArB;;MACA,IAAI;QACA,MAAMsB,OAAO,GAAGjR,IAAI,CAACgR,0CAAD,CAApB;;QACA,IAAI,OAAOC,OAAP,KAAmB,UAAvB,EAAmC;UAC/BA,OAAO,CAACjV,IAAR,CAAa,IAAb,EAAmB2T,CAAnB;QACH;MACJ,CALD,CAMA,OAAOnY,GAAP,EAAY,CAAG;IAClB;;IACD,SAAS0Z,UAAT,CAAoB5V,KAApB,EAA2B;MACvB,OAAOA,KAAK,IAAIA,KAAK,CAAC6V,IAAtB;IACH;;IACD,SAASC,iBAAT,CAA2B9V,KAA3B,EAAkC;MAC9B,OAAOA,KAAP;IACH;;IACD,SAAS+V,gBAAT,CAA0BnB,SAA1B,EAAqC;MACjC,OAAOoB,gBAAgB,CAACC,MAAjB,CAAwBrB,SAAxB,CAAP;IACH;;IACD,MAAMsB,WAAW,GAAG9e,UAAU,CAAC,OAAD,CAA9B;;IACA,MAAM+e,WAAW,GAAG/e,UAAU,CAAC,OAAD,CAA9B;;IACA,MAAMgf,aAAa,GAAGhf,UAAU,CAAC,SAAD,CAAhC;;IACA,MAAMif,wBAAwB,GAAGjf,UAAU,CAAC,oBAAD,CAA3C;;IACA,MAAMkf,wBAAwB,GAAGlf,UAAU,CAAC,oBAAD,CAA3C;;IACA,MAAMwC,MAAM,GAAG,cAAf;IACA,MAAM2c,UAAU,GAAG,IAAnB;IACA,MAAMC,QAAQ,GAAG,IAAjB;IACA,MAAMC,QAAQ,GAAG,KAAjB;IACA,MAAMC,iBAAiB,GAAG,CAA1B;;IACA,SAASC,YAAT,CAAsBjC,OAAtB,EAA+Bha,KAA/B,EAAsC;MAClC,OAAQkc,CAAD,IAAO;QACV,IAAI;UACAC,cAAc,CAACnC,OAAD,EAAUha,KAAV,EAAiBkc,CAAjB,CAAd;QACH,CAFD,CAGA,OAAO1a,GAAP,EAAY;UACR2a,cAAc,CAACnC,OAAD,EAAU,KAAV,EAAiBxY,GAAjB,CAAd;QACH,CANS,CAOV;;MACH,CARD;IASH;;IACD,MAAM+O,IAAI,GAAG,YAAY;MACrB,IAAI6L,SAAS,GAAG,KAAhB;MACA,OAAO,SAASC,OAAT,CAAiBC,eAAjB,EAAkC;QACrC,OAAO,YAAY;UACf,IAAIF,SAAJ,EAAe;YACX;UACH;;UACDA,SAAS,GAAG,IAAZ;UACAE,eAAe,CAACpX,KAAhB,CAAsB,IAAtB,EAA4B5F,SAA5B;QACH,CAND;MAOH,CARD;IASH,CAXD;;IAYA,MAAMid,UAAU,GAAG,8BAAnB;;IACA,MAAMC,yBAAyB,GAAG9f,UAAU,CAAC,kBAAD,CAA5C,CAjGyD,CAkGzD;;;IACA,SAASyf,cAAT,CAAwBnC,OAAxB,EAAiCha,KAAjC,EAAwCsF,KAAxC,EAA+C;MAC3C,MAAMmX,WAAW,GAAGlM,IAAI,EAAxB;;MACA,IAAIyJ,OAAO,KAAK1U,KAAhB,EAAuB;QACnB,MAAM,IAAIoX,SAAJ,CAAcH,UAAd,CAAN;MACH;;MACD,IAAIvC,OAAO,CAACwB,WAAD,CAAP,KAAyBK,UAA7B,EAAyC;QACrC;QACA,IAAIV,IAAI,GAAG,IAAX;;QACA,IAAI;UACA,IAAI,OAAO7V,KAAP,KAAiB,QAAjB,IAA6B,OAAOA,KAAP,KAAiB,UAAlD,EAA8D;YAC1D6V,IAAI,GAAG7V,KAAK,IAAIA,KAAK,CAAC6V,IAAtB;UACH;QACJ,CAJD,CAKA,OAAO3Z,GAAP,EAAY;UACRib,WAAW,CAAC,MAAM;YACdN,cAAc,CAACnC,OAAD,EAAU,KAAV,EAAiBxY,GAAjB,CAAd;UACH,CAFU,CAAX;UAGA,OAAOwY,OAAP;QACH,CAboC,CAcrC;;;QACA,IAAIha,KAAK,KAAK+b,QAAV,IACAzW,KAAK,YAAYgW,gBADjB,IAEAhW,KAAK,CAACtH,cAAN,CAAqBwd,WAArB,CAFA,IAGAlW,KAAK,CAACtH,cAAN,CAAqByd,WAArB,CAHA,IAIAnW,KAAK,CAACkW,WAAD,CAAL,KAAuBK,UAJ3B,EAIuC;UACnCc,oBAAoB,CAACrX,KAAD,CAApB;UACA6W,cAAc,CAACnC,OAAD,EAAU1U,KAAK,CAACkW,WAAD,CAAf,EAA8BlW,KAAK,CAACmW,WAAD,CAAnC,CAAd;QACH,CAPD,MAQK,IAAIzb,KAAK,KAAK+b,QAAV,IAAsB,OAAOZ,IAAP,KAAgB,UAA1C,EAAsD;UACvD,IAAI;YACAA,IAAI,CAACnV,IAAL,CAAUV,KAAV,EAAiBmX,WAAW,CAACR,YAAY,CAACjC,OAAD,EAAUha,KAAV,CAAb,CAA5B,EAA4Dyc,WAAW,CAACR,YAAY,CAACjC,OAAD,EAAU,KAAV,CAAb,CAAvE;UACH,CAFD,CAGA,OAAOxY,GAAP,EAAY;YACRib,WAAW,CAAC,MAAM;cACdN,cAAc,CAACnC,OAAD,EAAU,KAAV,EAAiBxY,GAAjB,CAAd;YACH,CAFU,CAAX;UAGH;QACJ,CATI,MAUA;UACDwY,OAAO,CAACwB,WAAD,CAAP,GAAuBxb,KAAvB;UACA,MAAMuH,KAAK,GAAGyS,OAAO,CAACyB,WAAD,CAArB;UACAzB,OAAO,CAACyB,WAAD,CAAP,GAAuBnW,KAAvB;;UACA,IAAI0U,OAAO,CAAC0B,aAAD,CAAP,KAA2BA,aAA/B,EAA8C;YAC1C;YACA,IAAI1b,KAAK,KAAK8b,QAAd,EAAwB;cACpB;cACA;cACA9B,OAAO,CAACwB,WAAD,CAAP,GAAuBxB,OAAO,CAAC4B,wBAAD,CAA9B;cACA5B,OAAO,CAACyB,WAAD,CAAP,GAAuBzB,OAAO,CAAC2B,wBAAD,CAA9B;YACH;UACJ,CAZA,CAaD;UACA;;;UACA,IAAI3b,KAAK,KAAK+b,QAAV,IAAsBzW,KAAK,YAAYjI,KAA3C,EAAkD;YAC9C;YACA,MAAMuf,KAAK,GAAG5S,IAAI,CAACrM,WAAL,IACVqM,IAAI,CAACrM,WAAL,CAAiBgD,IADP,IAEVqJ,IAAI,CAACrM,WAAL,CAAiBgD,IAAjB,CAAsB8Z,aAAtB,CAFJ;;YAGA,IAAImC,KAAJ,EAAW;cACP;cACArU,oBAAoB,CAACjD,KAAD,EAAQkX,yBAAR,EAAmC;gBACnDjQ,YAAY,EAAE,IADqC;gBAEnDD,UAAU,EAAE,KAFuC;gBAGnDxB,QAAQ,EAAE,IAHyC;gBAInDxF,KAAK,EAAEsX;cAJ4C,CAAnC,CAApB;YAMH;UACJ;;UACD,KAAK,IAAIza,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGoF,KAAK,CAACnF,MAA1B,GAAmC;YAC/Bya,uBAAuB,CAAC7C,OAAD,EAAUzS,KAAK,CAACpF,CAAC,EAAF,CAAf,EAAsBoF,KAAK,CAACpF,CAAC,EAAF,CAA3B,EAAkCoF,KAAK,CAACpF,CAAC,EAAF,CAAvC,EAA8CoF,KAAK,CAACpF,CAAC,EAAF,CAAnD,CAAvB;UACH;;UACD,IAAIoF,KAAK,CAACnF,MAAN,IAAgB,CAAhB,IAAqBpC,KAAK,IAAI+b,QAAlC,EAA4C;YACxC/B,OAAO,CAACwB,WAAD,CAAP,GAAuBQ,iBAAvB;YACA,IAAIpB,oBAAoB,GAAGtV,KAA3B;;YACA,IAAI;cACA;cACA;cACA;cACA,MAAM,IAAIjI,KAAJ,CAAU,4BACZ+c,sBAAsB,CAAC9U,KAAD,CADV,IAEXA,KAAK,IAAIA,KAAK,CAACqV,KAAf,GAAuB,OAAOrV,KAAK,CAACqV,KAApC,GAA4C,EAFjC,CAAV,CAAN;YAGH,CAPD,CAQA,OAAOnZ,GAAP,EAAY;cACRoZ,oBAAoB,GAAGpZ,GAAvB;YACH;;YACD,IAAIgZ,yCAAJ,EAA+C;cAC3C;cACA;cACAI,oBAAoB,CAACE,aAArB,GAAqC,IAArC;YACH;;YACDF,oBAAoB,CAACV,SAArB,GAAiC5U,KAAjC;YACAsV,oBAAoB,CAACZ,OAArB,GAA+BA,OAA/B;YACAY,oBAAoB,CAACrd,IAArB,GAA4ByM,IAAI,CAACxM,OAAjC;YACAod,oBAAoB,CAAC9a,IAArB,GAA4BkK,IAAI,CAACrM,WAAjC;;YACA4c,sBAAsB,CAACnV,IAAvB,CAA4BwV,oBAA5B;;YACAvL,GAAG,CAAC5N,iBAAJ,GAxBwC,CAwBf;UAC5B;QACJ;MACJ,CAlG0C,CAmG3C;;;MACA,OAAOuY,OAAP;IACH;;IACD,MAAM8C,yBAAyB,GAAGpgB,UAAU,CAAC,yBAAD,CAA5C;;IACA,SAASigB,oBAAT,CAA8B3C,OAA9B,EAAuC;MACnC,IAAIA,OAAO,CAACwB,WAAD,CAAP,KAAyBQ,iBAA7B,EAAgD;QAC5C;QACA;QACA;QACA;QACA;QACA,IAAI;UACA,MAAMf,OAAO,GAAGjR,IAAI,CAAC8S,yBAAD,CAApB;;UACA,IAAI7B,OAAO,IAAI,OAAOA,OAAP,KAAmB,UAAlC,EAA8C;YAC1CA,OAAO,CAACjV,IAAR,CAAa,IAAb,EAAmB;cAAEkU,SAAS,EAAEF,OAAO,CAACyB,WAAD,CAApB;cAAmCzB,OAAO,EAAEA;YAA5C,CAAnB;UACH;QACJ,CALD,CAMA,OAAOxY,GAAP,EAAY,CAAG;;QACfwY,OAAO,CAACwB,WAAD,CAAP,GAAuBO,QAAvB;;QACA,KAAK,IAAI5Z,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGoY,sBAAsB,CAACnY,MAA3C,EAAmDD,CAAC,EAApD,EAAwD;UACpD,IAAI6X,OAAO,KAAKO,sBAAsB,CAACpY,CAAD,CAAtB,CAA0B6X,OAA1C,EAAmD;YAC/CO,sBAAsB,CAAC/H,MAAvB,CAA8BrQ,CAA9B,EAAiC,CAAjC;UACH;QACJ;MACJ;IACJ;;IACD,SAAS0a,uBAAT,CAAiC7C,OAAjC,EAA0Czc,IAA1C,EAAgDwf,YAAhD,EAA8DC,WAA9D,EAA2EC,UAA3E,EAAuF;MACnFN,oBAAoB,CAAC3C,OAAD,CAApB;MACA,MAAMkD,YAAY,GAAGlD,OAAO,CAACwB,WAAD,CAA5B;MACA,MAAMjZ,QAAQ,GAAG2a,YAAY,GACvB,OAAOF,WAAP,KAAuB,UAAvB,GACIA,WADJ,GAEI5B,iBAHmB,GAIvB,OAAO6B,UAAP,KAAsB,UAAtB,GACIA,UADJ,GAEI5B,gBANV;MAOA9d,IAAI,CAACkE,iBAAL,CAAuBvC,MAAvB,EAA+B,MAAM;QACjC,IAAI;UACA,MAAMie,kBAAkB,GAAGnD,OAAO,CAACyB,WAAD,CAAlC;UACA,MAAM2B,gBAAgB,GAAG,CAAC,CAACL,YAAF,IAAkBrB,aAAa,KAAKqB,YAAY,CAACrB,aAAD,CAAzE;;UACA,IAAI0B,gBAAJ,EAAsB;YAClB;YACAL,YAAY,CAACpB,wBAAD,CAAZ,GAAyCwB,kBAAzC;YACAJ,YAAY,CAACnB,wBAAD,CAAZ,GAAyCsB,YAAzC;UACH,CAPD,CAQA;;;UACA,MAAM5X,KAAK,GAAG/H,IAAI,CAACgC,GAAL,CAASgD,QAAT,EAAmBzB,SAAnB,EAA8Bsc,gBAAgB,IAAI7a,QAAQ,KAAK8Y,gBAAjC,IAAqD9Y,QAAQ,KAAK6Y,iBAAlE,GACtC,EADsC,GAEtC,CAAC+B,kBAAD,CAFQ,CAAd;UAGAhB,cAAc,CAACY,YAAD,EAAe,IAAf,EAAqBzX,KAArB,CAAd;QACH,CAbD,CAcA,OAAO3F,KAAP,EAAc;UACV;UACAwc,cAAc,CAACY,YAAD,EAAe,KAAf,EAAsBpd,KAAtB,CAAd;QACH;MACJ,CAnBD,EAmBGod,YAnBH;IAoBH;;IACD,MAAMM,4BAA4B,GAAG,+CAArC;;IACA,MAAMzV,IAAI,GAAG,YAAY,CAAG,CAA5B;;IACA,MAAM0V,cAAc,GAAG9gB,MAAM,CAAC8gB,cAA9B;;IACA,MAAMhC,gBAAN,CAAuB;MACJ,OAAR9U,QAAQ,GAAG;QACd,OAAO6W,4BAAP;MACH;;MACa,OAAPhW,OAAO,CAAC/B,KAAD,EAAQ;QAClB,IAAIA,KAAK,YAAYgW,gBAArB,EAAuC;UACnC,OAAOhW,KAAP;QACH;;QACD,OAAO6W,cAAc,CAAC,IAAI,IAAJ,CAAS,IAAT,CAAD,EAAiBL,QAAjB,EAA2BxW,KAA3B,CAArB;MACH;;MACY,OAANiW,MAAM,CAAC5b,KAAD,EAAQ;QACjB,OAAOwc,cAAc,CAAC,IAAI,IAAJ,CAAS,IAAT,CAAD,EAAiBJ,QAAjB,EAA2Bpc,KAA3B,CAArB;MACH;;MACmB,OAAb4d,aAAa,GAAG;QACnB,MAAM5R,MAAM,GAAG,EAAf;QACAA,MAAM,CAACqO,OAAP,GAAiB,IAAIsB,gBAAJ,CAAqB,CAACkC,GAAD,EAAMC,GAAN,KAAc;UAChD9R,MAAM,CAACtE,OAAP,GAAiBmW,GAAjB;UACA7R,MAAM,CAAC4P,MAAP,GAAgBkC,GAAhB;QACH,CAHgB,CAAjB;QAIA,OAAO9R,MAAP;MACH;;MACS,OAAH+R,GAAG,CAACC,MAAD,EAAS;QACf,IAAI,CAACA,MAAD,IAAW,OAAOA,MAAM,CAACC,MAAM,CAACC,QAAR,CAAb,KAAmC,UAAlD,EAA8D;UAC1D,OAAOC,OAAO,CAACvC,MAAR,CAAe,IAAI+B,cAAJ,CAAmB,EAAnB,EAAuB,4BAAvB,CAAf,CAAP;QACH;;QACD,MAAMS,QAAQ,GAAG,EAAjB;QACA,IAAI7b,KAAK,GAAG,CAAZ;;QACA,IAAI;UACA,KAAK,IAAIga,CAAT,IAAcyB,MAAd,EAAsB;YAClBzb,KAAK;YACL6b,QAAQ,CAAC3Y,IAAT,CAAckW,gBAAgB,CAACjU,OAAjB,CAAyB6U,CAAzB,CAAd;UACH;QACJ,CALD,CAMA,OAAO1a,GAAP,EAAY;UACR,OAAOsc,OAAO,CAACvC,MAAR,CAAe,IAAI+B,cAAJ,CAAmB,EAAnB,EAAuB,4BAAvB,CAAf,CAAP;QACH;;QACD,IAAIpb,KAAK,KAAK,CAAd,EAAiB;UACb,OAAO4b,OAAO,CAACvC,MAAR,CAAe,IAAI+B,cAAJ,CAAmB,EAAnB,EAAuB,4BAAvB,CAAf,CAAP;QACH;;QACD,IAAIU,QAAQ,GAAG,KAAf;QACA,MAAMpN,MAAM,GAAG,EAAf;QACA,OAAO,IAAI0K,gBAAJ,CAAqB,CAACjU,OAAD,EAAUkU,MAAV,KAAqB;UAC7C,KAAK,IAAIpZ,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG4b,QAAQ,CAAC3b,MAA7B,EAAqCD,CAAC,EAAtC,EAA0C;YACtC4b,QAAQ,CAAC5b,CAAD,CAAR,CAAYgZ,IAAZ,CAAkBe,CAAD,IAAO;cACpB,IAAI8B,QAAJ,EAAc;gBACV;cACH;;cACDA,QAAQ,GAAG,IAAX;cACA3W,OAAO,CAAC6U,CAAD,CAAP;YACH,CAND,EAMI1a,GAAD,IAAS;cACRoP,MAAM,CAACxL,IAAP,CAAY5D,GAAZ;cACAU,KAAK;;cACL,IAAIA,KAAK,KAAK,CAAd,EAAiB;gBACb8b,QAAQ,GAAG,IAAX;gBACAzC,MAAM,CAAC,IAAI+B,cAAJ,CAAmB1M,MAAnB,EAA2B,4BAA3B,CAAD,CAAN;cACH;YACJ,CAbD;UAcH;QACJ,CAjBM,CAAP;MAkBH;;MACU,OAAJqN,IAAI,CAACN,MAAD,EAAS;QAChB,IAAItW,OAAJ;QACA,IAAIkU,MAAJ;QACA,IAAIvB,OAAO,GAAG,IAAI,IAAJ,CAAS,CAACwD,GAAD,EAAMC,GAAN,KAAc;UACjCpW,OAAO,GAAGmW,GAAV;UACAjC,MAAM,GAAGkC,GAAT;QACH,CAHa,CAAd;;QAIA,SAASS,SAAT,CAAmB5Y,KAAnB,EAA0B;UACtB+B,OAAO,CAAC/B,KAAD,CAAP;QACH;;QACD,SAAS6Y,QAAT,CAAkBxe,KAAlB,EAAyB;UACrB4b,MAAM,CAAC5b,KAAD,CAAN;QACH;;QACD,KAAK,IAAI2F,KAAT,IAAkBqY,MAAlB,EAA0B;UACtB,IAAI,CAACzC,UAAU,CAAC5V,KAAD,CAAf,EAAwB;YACpBA,KAAK,GAAG,KAAK+B,OAAL,CAAa/B,KAAb,CAAR;UACH;;UACDA,KAAK,CAAC6V,IAAN,CAAW+C,SAAX,EAAsBC,QAAtB;QACH;;QACD,OAAOnE,OAAP;MACH;;MACS,OAAHoE,GAAG,CAACT,MAAD,EAAS;QACf,OAAOrC,gBAAgB,CAAC+C,eAAjB,CAAiCV,MAAjC,CAAP;MACH;;MACgB,OAAVW,UAAU,CAACX,MAAD,EAAS;QACtB,MAAMY,CAAC,GAAG,QAAQ,KAAK5X,SAAL,YAA0B2U,gBAAlC,GAAqD,IAArD,GAA4DA,gBAAtE;QACA,OAAOiD,CAAC,CAACF,eAAF,CAAkBV,MAAlB,EAA0B;UAC7Ba,YAAY,EAAGlZ,KAAD,KAAY;YAAEwT,MAAM,EAAE,WAAV;YAAuBxT;UAAvB,CAAZ,CADe;UAE7BmZ,aAAa,EAAGjd,GAAD,KAAU;YAAEsX,MAAM,EAAE,UAAV;YAAsBmB,MAAM,EAAEzY;UAA9B,CAAV;QAFc,CAA1B,CAAP;MAIH;;MACqB,OAAf6c,eAAe,CAACV,MAAD,EAAS1e,QAAT,EAAmB;QACrC,IAAIoI,OAAJ;QACA,IAAIkU,MAAJ;QACA,IAAIvB,OAAO,GAAG,IAAI,IAAJ,CAAS,CAACwD,GAAD,EAAMC,GAAN,KAAc;UACjCpW,OAAO,GAAGmW,GAAV;UACAjC,MAAM,GAAGkC,GAAT;QACH,CAHa,CAAd,CAHqC,CAOrC;;QACA,IAAIiB,eAAe,GAAG,CAAtB;QACA,IAAIC,UAAU,GAAG,CAAjB;QACA,MAAMC,cAAc,GAAG,EAAvB;;QACA,KAAK,IAAItZ,KAAT,IAAkBqY,MAAlB,EAA0B;UACtB,IAAI,CAACzC,UAAU,CAAC5V,KAAD,CAAf,EAAwB;YACpBA,KAAK,GAAG,KAAK+B,OAAL,CAAa/B,KAAb,CAAR;UACH;;UACD,MAAMuZ,aAAa,GAAGF,UAAtB;;UACA,IAAI;YACArZ,KAAK,CAAC6V,IAAN,CAAY7V,KAAD,IAAW;cAClBsZ,cAAc,CAACC,aAAD,CAAd,GAAgC5f,QAAQ,GAAGA,QAAQ,CAACuf,YAAT,CAAsBlZ,KAAtB,CAAH,GAAkCA,KAA1E;cACAoZ,eAAe;;cACf,IAAIA,eAAe,KAAK,CAAxB,EAA2B;gBACvBrX,OAAO,CAACuX,cAAD,CAAP;cACH;YACJ,CAND,EAMIpd,GAAD,IAAS;cACR,IAAI,CAACvC,QAAL,EAAe;gBACXsc,MAAM,CAAC/Z,GAAD,CAAN;cACH,CAFD,MAGK;gBACDod,cAAc,CAACC,aAAD,CAAd,GAAgC5f,QAAQ,CAACwf,aAAT,CAAuBjd,GAAvB,CAAhC;gBACAkd,eAAe;;gBACf,IAAIA,eAAe,KAAK,CAAxB,EAA2B;kBACvBrX,OAAO,CAACuX,cAAD,CAAP;gBACH;cACJ;YACJ,CAjBD;UAkBH,CAnBD,CAoBA,OAAOE,OAAP,EAAgB;YACZvD,MAAM,CAACuD,OAAD,CAAN;UACH;;UACDJ,eAAe;UACfC,UAAU;QACb,CAzCoC,CA0CrC;;;QACAD,eAAe,IAAI,CAAnB;;QACA,IAAIA,eAAe,KAAK,CAAxB,EAA2B;UACvBrX,OAAO,CAACuX,cAAD,CAAP;QACH;;QACD,OAAO5E,OAAP;MACH;;MACD1b,WAAW,CAACygB,QAAD,EAAW;QAClB,MAAM/E,OAAO,GAAG,IAAhB;;QACA,IAAI,EAAEA,OAAO,YAAYsB,gBAArB,CAAJ,EAA4C;UACxC,MAAM,IAAIje,KAAJ,CAAU,gCAAV,CAAN;QACH;;QACD2c,OAAO,CAACwB,WAAD,CAAP,GAAuBK,UAAvB;QACA7B,OAAO,CAACyB,WAAD,CAAP,GAAuB,EAAvB,CANkB,CAMS;;QAC3B,IAAI;UACA,MAAMgB,WAAW,GAAGlM,IAAI,EAAxB;UACAwO,QAAQ,IACJA,QAAQ,CAACtC,WAAW,CAACR,YAAY,CAACjC,OAAD,EAAU8B,QAAV,CAAb,CAAZ,EAA+CW,WAAW,CAACR,YAAY,CAACjC,OAAD,EAAU+B,QAAV,CAAb,CAA1D,CADZ;QAEH,CAJD,CAKA,OAAOpc,KAAP,EAAc;UACVwc,cAAc,CAACnC,OAAD,EAAU,KAAV,EAAiBra,KAAjB,CAAd;QACH;MACJ;;MACsB,KAAlBie,MAAM,CAACoB,WAAW,IAAI;QACvB,OAAO,SAAP;MACH;;MACkB,KAAdpB,MAAM,CAACqB,OAAO,IAAI;QACnB,OAAO3D,gBAAP;MACH;;MACDH,IAAI,CAAC6B,WAAD,EAAcC,UAAd,EAA0B;QAC1B;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,IAAIiC,CAAC,GAAG,KAAK5gB,WAAL,GAAmBsf,MAAM,CAACqB,OAA1B,CAAR;;QACA,IAAI,CAACC,CAAD,IAAM,OAAOA,CAAP,KAAa,UAAvB,EAAmC;UAC/BA,CAAC,GAAG,KAAK5gB,WAAL,IAAoBgd,gBAAxB;QACH;;QACD,MAAMyB,YAAY,GAAG,IAAImC,CAAJ,CAAMtX,IAAN,CAArB;QACA,MAAMrK,IAAI,GAAGyM,IAAI,CAACxM,OAAlB;;QACA,IAAI,KAAKge,WAAL,KAAqBK,UAAzB,EAAqC;UACjC,KAAKJ,WAAL,EAAkBrW,IAAlB,CAAuB7H,IAAvB,EAA6Bwf,YAA7B,EAA2CC,WAA3C,EAAwDC,UAAxD;QACH,CAFD,MAGK;UACDJ,uBAAuB,CAAC,IAAD,EAAOtf,IAAP,EAAawf,YAAb,EAA2BC,WAA3B,EAAwCC,UAAxC,CAAvB;QACH;;QACD,OAAOF,YAAP;MACH;;MACDoC,KAAK,CAAClC,UAAD,EAAa;QACd,OAAO,KAAK9B,IAAL,CAAU,IAAV,EAAgB8B,UAAhB,CAAP;MACH;;MACDmC,OAAO,CAACC,SAAD,EAAY;QACf;QACA,IAAIH,CAAC,GAAG,KAAK5gB,WAAL,GAAmBsf,MAAM,CAACqB,OAA1B,CAAR;;QACA,IAAI,CAACC,CAAD,IAAM,OAAOA,CAAP,KAAa,UAAvB,EAAmC;UAC/BA,CAAC,GAAG5D,gBAAJ;QACH;;QACD,MAAMyB,YAAY,GAAG,IAAImC,CAAJ,CAAMtX,IAAN,CAArB;QACAmV,YAAY,CAACrB,aAAD,CAAZ,GAA8BA,aAA9B;QACA,MAAMne,IAAI,GAAGyM,IAAI,CAACxM,OAAlB;;QACA,IAAI,KAAKge,WAAL,KAAqBK,UAAzB,EAAqC;UACjC,KAAKJ,WAAL,EAAkBrW,IAAlB,CAAuB7H,IAAvB,EAA6Bwf,YAA7B,EAA2CsC,SAA3C,EAAsDA,SAAtD;QACH,CAFD,MAGK;UACDxC,uBAAuB,CAAC,IAAD,EAAOtf,IAAP,EAAawf,YAAb,EAA2BsC,SAA3B,EAAsCA,SAAtC,CAAvB;QACH;;QACD,OAAOtC,YAAP;MACH;;IA5MkB,CAlQkC,CAgdzD;IACA;;;IACAzB,gBAAgB,CAAC,SAAD,CAAhB,GAA8BA,gBAAgB,CAACjU,OAA/C;IACAiU,gBAAgB,CAAC,QAAD,CAAhB,GAA6BA,gBAAgB,CAACC,MAA9C;IACAD,gBAAgB,CAAC,MAAD,CAAhB,GAA2BA,gBAAgB,CAAC2C,IAA5C;IACA3C,gBAAgB,CAAC,KAAD,CAAhB,GAA0BA,gBAAgB,CAAC8C,GAA3C;IACA,MAAMkB,aAAa,GAAI9iB,MAAM,CAACsK,aAAD,CAAN,GAAwBtK,MAAM,CAAC,SAAD,CAArD;IACAA,MAAM,CAAC,SAAD,CAAN,GAAoB8e,gBAApB;;IACA,MAAMiE,iBAAiB,GAAG7iB,UAAU,CAAC,aAAD,CAApC;;IACA,SAASwL,SAAT,CAAmBsX,IAAnB,EAAyB;MACrB,MAAM/R,KAAK,GAAG+R,IAAI,CAAC7Y,SAAnB;MACA,MAAMyF,IAAI,GAAG5D,8BAA8B,CAACiF,KAAD,EAAQ,MAAR,CAA3C;;MACA,IAAIrB,IAAI,KAAKA,IAAI,CAACtB,QAAL,KAAkB,KAAlB,IAA2B,CAACsB,IAAI,CAACG,YAAtC,CAAR,EAA6D;QACzD;QACA;QACA;MACH;;MACD,MAAMkT,YAAY,GAAGhS,KAAK,CAAC0N,IAA3B,CARqB,CASrB;;MACA1N,KAAK,CAAC1G,UAAD,CAAL,GAAoB0Y,YAApB;;MACAD,IAAI,CAAC7Y,SAAL,CAAewU,IAAf,GAAsB,UAAU+C,SAAV,EAAqBC,QAArB,EAA+B;QACjD,MAAMuB,OAAO,GAAG,IAAIpE,gBAAJ,CAAqB,CAACjU,OAAD,EAAUkU,MAAV,KAAqB;UACtDkE,YAAY,CAACzZ,IAAb,CAAkB,IAAlB,EAAwBqB,OAAxB,EAAiCkU,MAAjC;QACH,CAFe,CAAhB;QAGA,OAAOmE,OAAO,CAACvE,IAAR,CAAa+C,SAAb,EAAwBC,QAAxB,CAAP;MACH,CALD;;MAMAqB,IAAI,CAACD,iBAAD,CAAJ,GAA0B,IAA1B;IACH;;IACDlQ,GAAG,CAACnH,SAAJ,GAAgBA,SAAhB;;IACA,SAASyX,OAAT,CAAiB7hB,EAAjB,EAAqB;MACjB,OAAO,UAAUgI,IAAV,EAAgBG,IAAhB,EAAsB;QACzB,IAAI2Z,aAAa,GAAG9hB,EAAE,CAACoH,KAAH,CAASY,IAAT,EAAeG,IAAf,CAApB;;QACA,IAAI2Z,aAAa,YAAYtE,gBAA7B,EAA+C;UAC3C,OAAOsE,aAAP;QACH;;QACD,IAAIC,IAAI,GAAGD,aAAa,CAACthB,WAAzB;;QACA,IAAI,CAACuhB,IAAI,CAACN,iBAAD,CAAT,EAA8B;UAC1BrX,SAAS,CAAC2X,IAAD,CAAT;QACH;;QACD,OAAOD,aAAP;MACH,CAVD;IAWH;;IACD,IAAIN,aAAJ,EAAmB;MACfpX,SAAS,CAACoX,aAAD,CAAT;MACAtX,WAAW,CAACxL,MAAD,EAAS,OAAT,EAAmB+F,QAAD,IAAcod,OAAO,CAACpd,QAAD,CAAvC,CAAX;IACH,CA7fwD,CA8fzD;;;IACAub,OAAO,CAAC9T,IAAI,CAACtN,UAAL,CAAgB,uBAAhB,CAAD,CAAP,GAAoD6d,sBAApD;IACA,OAAOe,gBAAP;EACH,CAjgBD;AAkgBH;;AAED,SAASwE,aAAT,CAAuB9V,IAAvB,EAA6B;EACzB;EACA;EACAA,IAAI,CAACnM,YAAL,CAAkB,UAAlB,EAA+BrB,MAAD,IAAY;IACtC;IACA,MAAMujB,wBAAwB,GAAGC,QAAQ,CAACrZ,SAAT,CAAmBH,QAApD;IACA,MAAMyZ,wBAAwB,GAAG/V,UAAU,CAAC,kBAAD,CAA3C;IACA,MAAMgW,cAAc,GAAGhW,UAAU,CAAC,SAAD,CAAjC;IACA,MAAMiW,YAAY,GAAGjW,UAAU,CAAC,OAAD,CAA/B;;IACA,MAAMkW,mBAAmB,GAAG,SAAS5Z,QAAT,GAAoB;MAC5C,IAAI,OAAO,IAAP,KAAgB,UAApB,EAAgC;QAC5B,MAAM8J,gBAAgB,GAAG,KAAK2P,wBAAL,CAAzB;;QACA,IAAI3P,gBAAJ,EAAsB;UAClB,IAAI,OAAOA,gBAAP,KAA4B,UAAhC,EAA4C;YACxC,OAAOyP,wBAAwB,CAAC/Z,IAAzB,CAA8BsK,gBAA9B,CAAP;UACH,CAFD,MAGK;YACD,OAAO5J,MAAM,CAACC,SAAP,CAAiBH,QAAjB,CAA0BR,IAA1B,CAA+BsK,gBAA/B,CAAP;UACH;QACJ;;QACD,IAAI,SAASwN,OAAb,EAAsB;UAClB,MAAMuC,aAAa,GAAG7jB,MAAM,CAAC0jB,cAAD,CAA5B;;UACA,IAAIG,aAAJ,EAAmB;YACf,OAAON,wBAAwB,CAAC/Z,IAAzB,CAA8Bqa,aAA9B,CAAP;UACH;QACJ;;QACD,IAAI,SAAShjB,KAAb,EAAoB;UAChB,MAAMijB,WAAW,GAAG9jB,MAAM,CAAC2jB,YAAD,CAA1B;;UACA,IAAIG,WAAJ,EAAiB;YACb,OAAOP,wBAAwB,CAAC/Z,IAAzB,CAA8Bsa,WAA9B,CAAP;UACH;QACJ;MACJ;;MACD,OAAOP,wBAAwB,CAAC/Z,IAAzB,CAA8B,IAA9B,CAAP;IACH,CAzBD;;IA0BAoa,mBAAmB,CAACH,wBAAD,CAAnB,GAAgDF,wBAAhD;IACAC,QAAQ,CAACrZ,SAAT,CAAmBH,QAAnB,GAA8B4Z,mBAA9B,CAjCsC,CAkCtC;;IACA,MAAMG,sBAAsB,GAAG7Z,MAAM,CAACC,SAAP,CAAiBH,QAAhD;IACA,MAAMga,wBAAwB,GAAG,kBAAjC;;IACA9Z,MAAM,CAACC,SAAP,CAAiBH,QAAjB,GAA4B,YAAY;MACpC,IAAI,OAAOsX,OAAP,KAAmB,UAAnB,IAAiC,gBAAgBA,OAArD,EAA8D;QAC1D,OAAO0C,wBAAP;MACH;;MACD,OAAOD,sBAAsB,CAACva,IAAvB,CAA4B,IAA5B,CAAP;IACH,CALD;EAMH,CA3CD;AA4CH;;AAED,SAASgD,cAAT,CAAwBqG,GAAxB,EAA6B5M,MAA7B,EAAqCge,UAArC,EAAiDC,MAAjD,EAAyD3K,SAAzD,EAAoE;EAChE,MAAMrO,MAAM,GAAGsC,IAAI,CAACtN,UAAL,CAAgBgkB,MAAhB,CAAf;;EACA,IAAIje,MAAM,CAACiF,MAAD,CAAV,EAAoB;IAChB;EACH;;EACD,MAAMiZ,cAAc,GAAIle,MAAM,CAACiF,MAAD,CAAN,GAAiBjF,MAAM,CAACie,MAAD,CAA/C;;EACAje,MAAM,CAACie,MAAD,CAAN,GAAiB,UAAU/jB,IAAV,EAAgBikB,IAAhB,EAAsBhb,OAAtB,EAA+B;IAC5C,IAAIgb,IAAI,IAAIA,IAAI,CAACja,SAAjB,EAA4B;MACxBoP,SAAS,CAAC8D,OAAV,CAAkB,UAAU5a,QAAV,EAAoB;QAClC,MAAMC,MAAM,GAAI,GAAEuhB,UAAW,IAAGC,MAAO,IAAxB,GAA8BzhB,QAA7C;QACA,MAAM0H,SAAS,GAAGia,IAAI,CAACja,SAAvB,CAFkC,CAGlC;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QACA,IAAI;UACA,IAAIA,SAAS,CAAC3I,cAAV,CAAyBiB,QAAzB,CAAJ,EAAwC;YACpC,MAAM4hB,UAAU,GAAGxR,GAAG,CAAC7G,8BAAJ,CAAmC7B,SAAnC,EAA8C1H,QAA9C,CAAnB;;YACA,IAAI4hB,UAAU,IAAIA,UAAU,CAACvb,KAA7B,EAAoC;cAChCub,UAAU,CAACvb,KAAX,GAAmB+J,GAAG,CAACzG,mBAAJ,CAAwBiY,UAAU,CAACvb,KAAnC,EAA0CpG,MAA1C,CAAnB;;cACAmQ,GAAG,CAACtG,iBAAJ,CAAsB6X,IAAI,CAACja,SAA3B,EAAsC1H,QAAtC,EAAgD4hB,UAAhD;YACH,CAHD,MAIK,IAAIla,SAAS,CAAC1H,QAAD,CAAb,EAAyB;cAC1B0H,SAAS,CAAC1H,QAAD,CAAT,GAAsBoQ,GAAG,CAACzG,mBAAJ,CAAwBjC,SAAS,CAAC1H,QAAD,CAAjC,EAA6CC,MAA7C,CAAtB;YACH;UACJ,CATD,MAUK,IAAIyH,SAAS,CAAC1H,QAAD,CAAb,EAAyB;YAC1B0H,SAAS,CAAC1H,QAAD,CAAT,GAAsBoQ,GAAG,CAACzG,mBAAJ,CAAwBjC,SAAS,CAAC1H,QAAD,CAAjC,EAA6CC,MAA7C,CAAtB;UACH;QACJ,CAdD,CAeA,MAAM,CACF;UACA;QACH;MACJ,CA9BD;IA+BH;;IACD,OAAOyhB,cAAc,CAAC3a,IAAf,CAAoBvD,MAApB,EAA4B9F,IAA5B,EAAkCikB,IAAlC,EAAwChb,OAAxC,CAAP;EACH,CAnCD;;EAoCAyJ,GAAG,CAACvG,qBAAJ,CAA0BrG,MAAM,CAACie,MAAD,CAAhC,EAA0CC,cAA1C;AACH;;AAED,SAASG,SAAT,CAAmB9W,IAAnB,EAAyB;EACrBA,IAAI,CAACnM,YAAL,CAAkB,MAAlB,EAA0B,CAACrB,MAAD,EAASwN,IAAT,EAAeqF,GAAf,KAAuB;IAC7C;IACA;IACA,MAAM6G,UAAU,GAAGW,eAAe,CAACra,MAAD,CAAlC;IACA6S,GAAG,CAACtH,iBAAJ,GAAwBA,iBAAxB;IACAsH,GAAG,CAACrH,WAAJ,GAAkBA,WAAlB;IACAqH,GAAG,CAACpH,aAAJ,GAAoBA,aAApB;IACAoH,GAAG,CAAClH,cAAJ,GAAqBA,cAArB,CAP6C,CAQ7C;IACA;IACA;IACA;IACA;;IACA,MAAM4Y,0BAA0B,GAAG/W,IAAI,CAACtN,UAAL,CAAgB,qBAAhB,CAAnC;;IACA,MAAMskB,uBAAuB,GAAGhX,IAAI,CAACtN,UAAL,CAAgB,kBAAhB,CAAhC;;IACA,IAAIF,MAAM,CAACwkB,uBAAD,CAAV,EAAqC;MACjCxkB,MAAM,CAACukB,0BAAD,CAAN,GAAqCvkB,MAAM,CAACwkB,uBAAD,CAA3C;IACH;;IACD,IAAIxkB,MAAM,CAACukB,0BAAD,CAAV,EAAwC;MACpC/W,IAAI,CAAC+W,0BAAD,CAAJ,GAAmC/W,IAAI,CAACgX,uBAAD,CAAJ,GAC/BxkB,MAAM,CAACukB,0BAAD,CADV;IAEH;;IACD1R,GAAG,CAACjH,mBAAJ,GAA0BA,mBAA1B;IACAiH,GAAG,CAACvH,gBAAJ,GAAuBA,gBAAvB;IACAuH,GAAG,CAAChH,UAAJ,GAAiBA,UAAjB;IACAgH,GAAG,CAAC9G,oBAAJ,GAA2BA,oBAA3B;IACA8G,GAAG,CAAC7G,8BAAJ,GAAqCA,8BAArC;IACA6G,GAAG,CAAC5G,YAAJ,GAAmBA,YAAnB;IACA4G,GAAG,CAAC3G,UAAJ,GAAiBA,UAAjB;IACA2G,GAAG,CAAC1G,UAAJ,GAAiBA,UAAjB;IACA0G,GAAG,CAACzG,mBAAJ,GAA0BA,mBAA1B;IACAyG,GAAG,CAACxG,gBAAJ,GAAuBA,gBAAvB;IACAwG,GAAG,CAACvG,qBAAJ,GAA4BA,qBAA5B;IACAuG,GAAG,CAACtG,iBAAJ,GAAwBrC,MAAM,CAACyC,cAA/B;IACAkG,GAAG,CAACrG,cAAJ,GAAqBA,cAArB;;IACAqG,GAAG,CAAC/G,gBAAJ,GAAuB,OAAO;MAC1BsG,aAD0B;MAE1BD,oBAF0B;MAG1BuH,UAH0B;MAI1B9K,SAJ0B;MAK1BC,KAL0B;MAM1BH,MAN0B;MAO1BrB,QAP0B;MAQ1BC,SAR0B;MAS1BC,kBAT0B;MAU1BN,sBAV0B;MAW1BC;IAX0B,CAAP,CAAvB;EAaH,CAhDD;AAiDH;;AAED,SAASuX,WAAT,CAAqBjX,IAArB,EAA2B;EACvBmQ,YAAY,CAACnQ,IAAD,CAAZ;EACA8V,aAAa,CAAC9V,IAAD,CAAb;EACA8W,SAAS,CAAC9W,IAAD,CAAT;AACH;;AAED,MAAMkX,MAAM,GAAGjY,QAAQ,EAAvB;AACAgY,WAAW,CAACC,MAAD,CAAX;AACA7J,YAAY,CAAC6J,MAAD,CAAZ","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}